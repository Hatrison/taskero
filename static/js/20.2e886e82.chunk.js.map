{"version":3,"file":"static/js/20.2e886e82.chunk.js","mappings":"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","sources":["components/Forms/LoginForm/loginFormSchema.ts","components/Forms/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.tsx","components/AuthLayout/AuthLayout.styled.ts","components/AuthLayout/GoogleLoginButton/GoogleLoginButton.tsx","components/AuthLayout/AuthLayout.tsx","styles/form/Form.styled.ts"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const loginFormSchema = yup.object().shape({\n  email: yup.string().email(\"Invalid email\").required(\"Required\"),\n  password: yup\n    .string()\n    .min(6, \"Minimum 6 characters\")\n    .matches(/[a-z]/, \"Must include lowercase\")\n    .matches(/[A-Z]/, \"Must include uppercase\")\n    .matches(/[0-9]/, \"Must include number\")\n    .required(\"Required\"),\n});\n","import { Formik } from \"formik\";\nimport { useState } from \"react\";\nimport { loginFormSchema } from \"./loginFormSchema\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { loginUser } from \"@/redux/auth/operations\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { FiEye, FiEyeOff } from \"react-icons/fi\";\nimport {\n  Wrapper,\n  StyledForm,\n  InputContainer,\n  Label,\n  InputWrapper,\n  Input,\n  TogglePassword,\n  SubmitButton,\n  CheckboxRow,\n  CustomCheckbox,\n  //ForgotLink,\n  ErrorText,\n} from \"@/styles/form/Form.styled\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  remember: true,\n};\n\nconst LoginForm = () => {\n  const dispatch = useAppDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const { t } = useTranslation();\n\n  const handleSubmit = async (values: typeof initialValues, actions: any) => {\n    try {\n      await dispatch(loginUser(values)).unwrap();\n      actions.resetForm();\n    } catch {\n      toast.error(\"Invalid email or password\");\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={loginFormSchema}\n      >\n        {({ values, handleChange, handleSubmit, touched, errors }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <InputContainer>\n              <Label htmlFor=\"email\">{t(\"Auth.email\")}</Label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder={t(\"Auth.emailPlaceholder\")}\n                $hasError={touched.email && !!errors.email}\n              />\n              {touched.email && errors.email && (\n                <ErrorText>{errors.email}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label htmlFor=\"password\">{t(\"Auth.password\")}</Label>\n              <InputWrapper>\n                <Input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder={t(\"Auth.passwordPlaceholder\")}\n                  $hasError={touched.password && !!errors.password}\n                />\n                <TogglePassword\n                  onClick={() => setShowPassword((prev) => !prev)}\n                  type=\"button\"\n                >\n                  {showPassword ? <FiEyeOff size={18} /> : <FiEye size={18} />}\n                </TogglePassword>\n              </InputWrapper>\n              {touched.password && errors.password && (\n                <ErrorText>{errors.password}</ErrorText>\n              )}\n            </InputContainer>\n\n            <CheckboxRow>\n              <CustomCheckbox>\n                <input\n                  type=\"checkbox\"\n                  name=\"remember\"\n                  checked={values.remember}\n                  onChange={handleChange}\n                />\n                <span />\n                {t(\"Auth.rememberMe\")}\n              </CustomCheckbox>\n\n              {/* <ForgotLink to=\"/password\">{t(\"Auth.forgotPassword\")}</ForgotLink> */}\n            </CheckboxRow>\n\n            <SubmitButton type=\"submit\">{t(\"Auth.signin\")}</SubmitButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default LoginForm;\n","import AuthLayout from \"@/components/AuthLayout\";\nimport LoginForm from \"@/components/Forms/LoginForm\";\n\nconst LoginPage = () => {\n  return (\n    <AuthLayout>\n      <LoginForm />\n    </AuthLayout>\n  );\n};\n\nexport default LoginPage;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 24px;\n`;\n\nexport const Card = styled.div`\n  background-color: ${({ theme }) => theme.background};\n  border-radius: 8px;\n  padding: 32px;\n  width: 100%;\n  max-width: 440px;\n  box-shadow: ${({ theme }) => theme.shadow};\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const TopRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Tabs = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n`;\n\nexport const TabLink = styled(NavLink)`\n  font-weight: 600;\n  font-size: 16px;\n  padding: 8px 16px;\n  color: ${({ theme }) => theme.secondaryText};\n  text-decoration: none;\n  position: relative;\n  transition: color ${({ theme }) => theme.animation};\n\n  &.active {\n    color: ${({ theme }) => theme.primary};\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      bottom: -1px;\n      width: 100%;\n      height: 2px;\n      background-color: ${({ theme }) => theme.primary};\n    }\n  }\n`;\n\nexport const Divider = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const DividerLine = styled.div`\n  flex: 1;\n  height: 1px;\n  background-color: ${({ theme }) => theme.borderColor};\n`;\n\nexport const DividerText = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n","import { GoogleLogin, CredentialResponse } from \"@react-oauth/google\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { googleLogin } from \"@/redux/auth/operations\";\n\nconst GoogleLoginButton = () => {\n  const dispatch = useAppDispatch();\n\n  const onSuccess = async (resp: CredentialResponse) => {\n    try {\n      if (!resp.credential) throw new Error(\"No credential returned\");\n      await dispatch(googleLogin({ idToken: resp.credential })).unwrap();\n      toast.success(\"Logged in with Google\");\n    } catch (err: any) {\n      toast.error(err.message || \"Google login failed\");\n    }\n  };\n\n  const onError = () => {\n    toast.error(\"Google login was cancelled\");\n  };\n\n  return <GoogleLogin onSuccess={onSuccess} onError={onError} />;\n};\n\nexport default GoogleLoginButton;\n","import { useTranslation } from \"react-i18next\";\nimport Logo from \"@/components/Logo\";\nimport LanguageSwitcher from \"@/components/LanguageSwitcher\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport {\n  Wrapper,\n  Card,\n  TopRow,\n  Tabs,\n  TabLink,\n  Divider,\n  DividerLine,\n  DividerText,\n} from \"./AuthLayout.styled\";\nimport GoogleLoginButton from \"./GoogleLoginButton\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst AuthLayout = ({ children }: Props) => {\n  const { t } = useTranslation();\n\n  return (\n    <Wrapper>\n      <Card>\n        <TopRow>\n          <Logo />\n          <div style={{ display: \"flex\", gap: \"8px\" }}>\n            <LanguageSwitcher />\n            <ThemeToggle />\n          </div>\n        </TopRow>\n\n        <Tabs>\n          <TabLink to=\"/login\">{t(\"Auth.login\")}</TabLink>\n          <TabLink to=\"/register\">{t(\"Auth.register\")}</TabLink>\n        </Tabs>\n\n        {children}\n\n        <Divider>\n          <DividerLine />\n          <DividerText>{t(\"Auth.orWith\")}</DividerText>\n          <DividerLine />\n        </Divider>\n\n        <GoogleLoginButton />\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default AuthLayout;\n","import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const Input = styled(Field)<{ $hasError?: boolean }>`\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid\n    ${({ $hasError, theme }) => ($hasError ? \"#e74a3b\" : theme.borderColor)};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.primaryText};\n  background-color: ${({ theme }) => theme.cardBackground};\n  outline: none;\n  transition: border-color ${({ theme }) => theme.animation};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const TogglePassword = styled.button`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const CheckboxRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 4px;\n`;\n\nexport const CustomCheckbox = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: ${({ theme }) => theme.primaryText};\n  cursor: pointer;\n  user-select: none;\n\n  input {\n    display: none;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    width: 20px;\n    height: 20px;\n    border: 2px solid ${({ theme }) => theme.borderColor};\n    border-radius: 4px;\n    position: relative;\n    transition: all ${({ theme }) => theme.animation};\n  }\n\n  input:checked + span {\n    background-color: ${({ theme }) => theme.primary};\n    border-color: ${({ theme }) => theme.primary};\n  }\n\n  input:checked + span::after {\n    content: \"\";\n    position: absolute;\n    left: 6px;\n    top: 2px;\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 2px 2px 0;\n    transform: rotate(45deg);\n  }\n`;\n\nexport const ForgotLink = styled(Link)`\n  font-size: 14px;\n  color: ${({ theme }) => theme.primary};\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 12px;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.buttonText};\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const SubmitButtonModal = styled.button`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.buttonText};\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.primaryHover};\n  }\n\n  .btn-text {\n    display: inline-block;\n    white-space: nowrap;\n  }\n\n  .btn-loader {\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    border-radius: 4px;\n    background-color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const CancelButtonModal = styled.button`\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.secondaryText};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n\nexport const DeleteButtonModal = styled.button`\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.danger};\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation},\n    background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.dangerHover};\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: #e74a3b;\n  font-size: 12px;\n  margin-top: -4px;\n`;\n\nexport const TermsLink = styled(Link)`\n  font-size: 14px;\n  color: ${({ theme }) => theme.primary};\n  text-decoration: underline;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const Textarea = styled(Input).attrs({ as: \"textarea\" })`\n  resize: none;\n  height: 150px;\n  overflow-y: auto;\n`;\n"],"names":["loginFormSchema","yup","shape","email","required","password","min","matches","initialValues","remember","LoginForm","dispatch","useAppDispatch","showPassword","setShowPassword","useState","t","useTranslation","_jsx","Wrapper","children","Formik","onSubmit","async","values","actions","loginUser","unwrap","resetForm","toast","error","validationSchema","_ref","handleChange","handleSubmit","touched","errors","_jsxs","StyledForm","InputContainer","Label","htmlFor","Input","id","name","type","placeholder","$hasError","ErrorText","InputWrapper","TogglePassword","onClick","prev","FiEyeOff","size","FiEye","CheckboxRow","CustomCheckbox","checked","onChange","SubmitButton","LoginPage","AuthLayout","styled","div","theme","backgroundSecondary","Card","_ref2","background","_ref3","shadow","TopRow","Tabs","_ref4","borderColor","TabLink","NavLink","_ref5","secondaryText","_ref6","animation","_ref7","primary","_ref8","Divider","DividerLine","_ref9","DividerText","span","_ref10","GoogleLoginButton","GoogleLogin","onSuccess","resp","credential","Error","googleLogin","idToken","success","err","message","onError","Logo","style","display","gap","LanguageSwitcher","ThemeToggle","to","Form","label","primaryText","Field","cardBackground","button","_ref11","_ref12","_ref13","Link","_ref14","_ref15","_ref16","primaryHover","_ref17","_ref18","buttonText","_ref19","_ref20","SubmitButtonModal","_ref21","_ref22","_ref23","_ref24","_ref25","CancelButtonModal","_ref26","_ref27","_ref28","_ref29","_ref30","DeleteButtonModal","_ref31","_ref32","danger","_ref33","_ref34","_ref35","dangerHover","_ref36","p","TermsLink","_ref37","_ref38","_ref39","Textarea","attrs","as"],"sourceRoot":""}