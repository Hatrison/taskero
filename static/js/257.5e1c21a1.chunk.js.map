{"version":3,"file":"static/js/257.5e1c21a1.chunk.js","mappings":"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","sources":["components/ThemeToggle/ThemeToggle.styled.ts","components/ThemeToggle/ThemeToggle.tsx","components/Logo/Logo.styled.ts","components/Logo/Logo.tsx","components/AuthLayout/AuthForm.styled.ts","components/LanguageSwitcher/LanguageSwitcher.styled.ts","components/LanguageSwitcher/LanguageSwitcher.tsx","components/AuthLayout/AuthLayout.styled.ts","components/AuthLayout/AuthLayout.tsx","components/RegisterForm/registerFormSchema.ts","components/RegisterForm/RegisterForm.tsx","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Toggle = styled.button`\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n`;\n","import { FiSun, FiMoon } from \"react-icons/fi\";\nimport { useAppSelector } from \"@/hooks\";\nimport { useTheme } from \"styled-components\";\nimport { Toggle } from \"./ThemeToggle.styled\";\nimport { useToggleTheme } from \"@/hooks\";\n\nconst ThemeToggle = () => {\n  const currentTheme = useAppSelector((state) => state.theme.current);\n  const toggleTheme = useToggleTheme();\n  const theme = useTheme();\n\n  return (\n    <Toggle onClick={toggleTheme}>\n      {currentTheme === \"light\" ? (\n        <FiSun size={20} color={theme.primaryText} />\n      ) : (\n        <FiMoon size={20} color={theme.primaryText} />\n      )}\n    </Toggle>\n  );\n};\n\nexport default ThemeToggle;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const LogoWrapper = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  text-decoration: none;\n`;\n\nexport const Logo = styled.img`\n  width: 40px;\n  height: 40px;\n`;\n\nexport const LogoText = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.primary};\n  text-decoration: none;\n`;\n","import { LogoText, LogoWrapper, Logo as LogoImg } from \"./Logo.styled\";\nimport logo from \"@/images/png/logo.png\";\n\nconst Logo = () => {\n  return (\n    <LogoWrapper to=\"/\">\n      <LogoImg src={logo} alt=\"Taskero Logo\" />\n      <LogoText>Taskero</LogoText>\n    </LogoWrapper>\n  );\n};\n\nexport default Logo;\n","import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const Input = styled(Field)<{ $hasError?: boolean }>`\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid\n    ${({ $hasError, theme }) => ($hasError ? \"#e74a3b\" : theme.borderColor)};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.primaryText};\n  background-color: ${({ theme }) => theme.cardBackground};\n  outline: none;\n  transition: border-color ${({ theme }) => theme.animation};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const TogglePassword = styled.button`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const CheckboxRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 4px;\n`;\n\nexport const CustomCheckbox = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: ${({ theme }) => theme.primaryText};\n  cursor: pointer;\n  user-select: none;\n\n  input {\n    display: none;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    width: 20px;\n    height: 20px;\n    border: 2px solid ${({ theme }) => theme.borderColor};\n    border-radius: 4px;\n    position: relative;\n    transition: all ${({ theme }) => theme.animation};\n  }\n\n  input:checked + span {\n    background-color: ${({ theme }) => theme.primary};\n    border-color: ${({ theme }) => theme.primary};\n  }\n\n  input:checked + span::after {\n    content: \"\";\n    position: absolute;\n    left: 6px;\n    top: 2px;\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 2px 2px 0;\n    transform: rotate(45deg);\n  }\n`;\n\nexport const ForgotLink = styled(Link)`\n  font-size: 14px;\n  color: ${({ theme }) => theme.primary};\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 12px;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.buttonText};\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: #e74a3b;\n  font-size: 12px;\n  margin-top: -4px;\n`;\n\nexport const TermsLink = styled(Link)`\n  font-size: 14px;\n  color: ${({ theme }) => theme.primary};\n  text-decoration: underline;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Button = styled.button`\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.primaryText};\n  font-weight: 600;\n  font-size: 14px;\n  border-radius: 8px;\n  padding: 8px 12px;\n  cursor: pointer;\n  min-width: 44px;\n  text-align: center;\n`;\n\nexport const Dropdown = styled.div`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  margin-top: 2px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  background-color: ${({ theme }) => theme.cardBackground};\n  border-radius: 8px;\n  box-shadow: ${({ theme }) => theme.shadow};\n  z-index: 10;\n  overflow: hidden;\n`;\n\nexport const Option = styled.button`\n  width: 100%;\n  padding: 8px 12px;\n  background: none;\n  border: none;\n  text-align: center;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.primaryText};\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useChangeLanguage } from \"@/hooks\";\nimport { Wrapper, Button, Dropdown, Option } from \"./LanguageSwitcher.styled\";\n\nconst LanguageSwitcher = () => {\n  const { i18n } = useTranslation();\n  const changeLanguage = useChangeLanguage();\n  const [open, setOpen] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const currentLang = i18n.language.toUpperCase();\n\n  const handleSelect = (lang: \"en\" | \"uk\") => {\n    changeLanguage(lang);\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  return (\n    <Wrapper ref={dropdownRef}>\n      <Button onClick={() => setOpen((prev) => !prev)}>{currentLang}</Button>\n      {open && (\n        <Dropdown>\n          <Option onClick={() => handleSelect(\"en\")}>EN</Option>\n          <Option onClick={() => handleSelect(\"uk\")}>UK</Option>\n        </Dropdown>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default LanguageSwitcher;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 24px;\n`;\n\nexport const Card = styled.div`\n  background-color: ${({ theme }) => theme.background};\n  border-radius: 8px;\n  padding: 32px;\n  width: 100%;\n  max-width: 440px;\n  box-shadow: ${({ theme }) => theme.shadow};\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const TopRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Tabs = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n`;\n\nexport const TabLink = styled(NavLink)`\n  font-weight: 600;\n  font-size: 16px;\n  padding: 8px 16px;\n  color: ${({ theme }) => theme.secondaryText};\n  text-decoration: none;\n  position: relative;\n  transition: color ${({ theme }) => theme.animation};\n\n  &.active {\n    color: ${({ theme }) => theme.primary};\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      bottom: -1px;\n      width: 100%;\n      height: 2px;\n      background-color: ${({ theme }) => theme.primary};\n    }\n  }\n`;\n\nexport const Divider = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const DividerLine = styled.div`\n  flex: 1;\n  height: 1px;\n  background-color: ${({ theme }) => theme.borderColor};\n`;\n\nexport const DividerText = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const GoogleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 100%;\n  padding: 12px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  background-color: transparent;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.primaryText};\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n","import Logo from \"@/components/Logo\";\nimport LanguageSwitcher from \"@/components/LanguageSwitcher\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport {\n  Wrapper,\n  Card,\n  TopRow,\n  Tabs,\n  TabLink,\n  Divider,\n  DividerLine,\n  DividerText,\n  GoogleButton,\n} from \"./AuthLayout.styled\";\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst AuthLayout = ({ children }: Props) => {\n  return (\n    <Wrapper>\n      <Card>\n        <TopRow>\n          <Logo />\n          <div style={{ display: \"flex\", gap: \"8px\" }}>\n            <LanguageSwitcher />\n            <ThemeToggle />\n          </div>\n        </TopRow>\n        <Tabs>\n          <TabLink to=\"/login\">Login</TabLink>\n          <TabLink to=\"/register\">Register</TabLink>\n        </Tabs>\n\n        {children}\n\n        <Divider>\n          <DividerLine />\n          <DividerText>or continue with</DividerText>\n          <DividerLine />\n        </Divider>\n        <GoogleButton type=\"button\">\n          <FcGoogle size={20} />\n          Continue with Google\n        </GoogleButton>\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default AuthLayout;\n","import * as yup from \"yup\";\n\nexport const registerFormSchema = yup.object().shape({\n  name: yup.string().required(\"Full name is required\"),\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: yup\n    .string()\n    .min(6, \"Minimum 6 characters\")\n    .required(\"Password is required\"),\n  terms: yup.boolean().oneOf([true], \"You must accept the terms\"),\n});\n","import { Formik } from \"formik\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser } from \"@/redux/auth/operations\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { toast } from \"react-toastify\";\nimport { FiEye, FiEyeOff } from \"react-icons/fi\";\nimport { registerFormSchema } from \"./registerFormSchema\";\nimport {\n  Wrapper,\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  InputWrapper,\n  TogglePassword,\n  SubmitButton,\n  CheckboxRow,\n  CustomCheckbox,\n  ErrorText,\n  TermsLink,\n} from \"@/components/AuthLayout/AuthForm.styled\";\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  terms: false,\n};\n\nconst RegisterForm = () => {\n  const dispatch = useAppDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (values: typeof initialValues, actions: any) => {\n    try {\n      const { terms, ...payload } = values;\n      await dispatch(registerUser(payload)).unwrap();\n      actions.resetForm();\n      navigate(\"/\", { replace: true });\n    } catch {\n      toast.error(\"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={registerFormSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, handleChange, handleSubmit, touched, errors }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <InputContainer>\n              <Label htmlFor=\"name\">Full Name</Label>\n              <Input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Enter your full name\"\n                $hasError={touched.name && !!errors.name}\n              />\n              {touched.name && errors.name && (\n                <ErrorText>{errors.name}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                $hasError={touched.email && !!errors.email}\n              />\n              {touched.email && errors.email && (\n                <ErrorText>{errors.email}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label htmlFor=\"password\">Password</Label>\n              <InputWrapper>\n                <Input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder=\"Enter your password\"\n                  $hasError={touched.password && !!errors.password}\n                />\n                <TogglePassword\n                  type=\"button\"\n                  onClick={() => setShowPassword((prev) => !prev)}\n                >\n                  {showPassword ? <FiEyeOff size={18} /> : <FiEye size={18} />}\n                </TogglePassword>\n              </InputWrapper>\n              {touched.password && errors.password && (\n                <ErrorText>{errors.password}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <CheckboxRow>\n                <CustomCheckbox>\n                  <input\n                    type=\"checkbox\"\n                    name=\"terms\"\n                    checked={values.terms}\n                    onChange={handleChange}\n                  />\n                  <span id=\"custom-checkbox\" />\n                  <p>\n                    I agree to the&nbsp;\n                    <TermsLink to=\"/terms\">Terms and Conditions</TermsLink>\n                  </p>\n                </CustomCheckbox>\n              </CheckboxRow>\n              {touched.terms && errors.terms && (\n                <ErrorText>{errors.terms}</ErrorText>\n              )}\n            </InputContainer>\n\n            <SubmitButton type=\"submit\">Create Account</SubmitButton>\n          </StyledForm>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default RegisterForm;\n","import AuthLayout from \"@/components/AuthLayout\";\nimport RegisterForm from \"@/components/RegisterForm\";\n\nconst RegisterPage = () => {\n  return (\n    <AuthLayout>\n      <RegisterForm />\n    </AuthLayout>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Toggle","styled","button","_ref","theme","backgroundSecondary","ThemeToggle","currentTheme","useAppSelector","state","current","toggleTheme","useToggleTheme","useTheme","_jsx","onClick","children","FiSun","size","color","primaryText","FiMoon","LogoWrapper","Link","Logo","img","LogoText","h1","primary","_jsxs","to","LogoImg","src","logo","alt","Wrapper","div","StyledForm","Form","InputContainer","Label","label","Input","Field","_ref2","$hasError","borderColor","_ref3","_ref4","cardBackground","_ref5","animation","_ref6","secondaryText","_ref7","InputWrapper","TogglePassword","_ref8","CheckboxRow","CustomCheckbox","_ref9","_ref10","_ref11","_ref12","_ref13","ForgotLink","_ref14","_ref15","_ref16","primaryHover","SubmitButton","_ref17","_ref18","buttonText","_ref19","_ref20","ErrorText","p","TermsLink","_ref21","_ref22","_ref23","Button","background","Dropdown","shadow","Option","LanguageSwitcher","i18n","useTranslation","changeLanguage","useChangeLanguage","open","setOpen","useState","dropdownRef","useRef","currentLang","language","toUpperCase","handleSelect","lang","useEffect","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","ref","prev","Card","TopRow","Tabs","TabLink","NavLink","Divider","DividerLine","DividerText","span","GoogleButton","style","display","gap","type","FcGoogle","registerFormSchema","yup","shape","name","required","email","password","min","terms","oneOf","initialValues","RegisterForm","dispatch","useAppDispatch","showPassword","setShowPassword","navigate","useNavigate","Formik","validationSchema","onSubmit","async","values","actions","payload","registerUser","unwrap","resetForm","replace","toast","error","handleChange","handleSubmit","touched","errors","htmlFor","id","placeholder","FiEyeOff","FiEye","checked","onChange","RegisterPage","AuthLayout"],"sourceRoot":""}