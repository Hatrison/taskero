{"version":3,"file":"static/js/392.70ef0c64.chunk.js","mappings":"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","sources":["redux/projects/selectors.ts","components/Forms/EditProjectMembersForm/EditProjectMembersForm.styled.ts","components/Forms/EditProjectMembersForm/EditProjectMembersSchema.ts","components/Forms/EditProjectMembersForm/EditProjectMembersForm.tsx","components/Modals/EditProjectMembersModal/EditProjectMembersModal.tsx","components/Forms/EditProjectForm/EditProjectForm.tsx","components/Modals/EditProjecModal/EditProjecModal.tsx","pages/ProjectBoardPage/Header/Header.styled.ts","pages/ProjectBoardPage/Header/Header.tsx","pages/ProjectBoardPage/ProjectBoardPage.styled.ts","pages/ProjectBoardPage/ProjectBoardPage.tsx"],"sourcesContent":["import { RootState } from \"@/redux/store\";\n\nexport const selectProjects = (state: RootState) => state.projects.items;\nexport const selectCurrentProject = (state: RootState) =>\n  state.projects.current;\nexport const selectProjectsLoading = (state: RootState) =>\n  state.projects.loading;\nexport const selectProjectsError = (state: RootState) => state.projects.error;\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditProjectMembersSchema = yup.object().shape({\n  members: yup\n    .array()\n    .of(\n      yup.object().shape({\n        email: yup.string().email().required(),\n        role: yup.string().oneOf([\"owner\", \"editor\", \"viewer\"]).required(),\n      })\n    )\n    .min(1)\n    .required(),\n});\n","import { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { updateProjectMembers } from \"@/redux/projects/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport Loader from \"@/components/Loader\";\nimport UserList from \"@/components/UserList\";\nimport { StyledForm } from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditProjectMembersForm.styled\";\nimport { EditProjectMembersSchema } from \"./EditProjectMembersSchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  projectId: string;\n  withActions?: boolean;\n};\n\nconst EditProjectMembersForm = ({\n  handlerCloseModal,\n  formName,\n  projectId,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const { t } = useTranslation();\n\n  if (!project) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  const initialValues = {\n    members: project.members.map((m) => ({\n      email: m.user.email,\n      role: m.role,\n    })),\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      await dispatch(\n        updateProjectMembers({ id: projectId, members: values.members })\n      ).unwrap();\n\n      toast.success(t(\"Forms.editProjectMembers.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editProjectMembers.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const companyMembersWithRoles = project.members.map((member) => ({\n    ...member.user,\n    role: member.role,\n  }));\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditProjectMembersSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, setFieldValue }) => {\n        return (\n          <StyledForm id={formName}>\n            <UserList\n              value={values.members}\n              users={companyMembersWithRoles}\n              onChange={(updated) => setFieldValue(\"members\", updated)}\n              withActions={withActions}\n              editableRoles\n              availableRoles={[\"owner\", \"editor\", \"viewer\"]}\n            />\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default EditProjectMembersForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditProjectMembersForm from \"@/components/Forms/EditProjectMembersForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  projectId: string;\n  withActions?: boolean;\n};\n\nconst EditProjectMembersModal = ({\n  handlerCloseModal,\n  projectId,\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-project-members-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.EditProjectMembers.title\")}\n        formName={formName}\n        withActions={withActions}\n      >\n        <EditProjectMembersForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          projectId={projectId}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditProjectMembersModal;\n","type Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  projectId: string;\n  withActions?: boolean;\n};\n\nconst EditProjectForm = ({\n  handlerCloseModal,\n  formName,\n  projectId,\n  withActions = true,\n}: Props) => {\n  return <div>EditProjectForm</div>;\n};\n\nexport default EditProjectForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditProjectForm from \"@/components/Forms/EditProjectForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  projectId: string;\n  deleteAction?: () => void;\n  withActions?: boolean;\n};\n\nconst EditProjectModal = ({\n  handlerCloseModal,\n  projectId,\n  deleteAction = () => {},\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-project-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.EditProject.title\")}\n        formName={formName}\n        deleteAction={deleteAction}\n        withActions={withActions}\n      >\n        <EditProjectForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          projectId={projectId}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditProjectModal;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const HeaderWrapper = styled.header`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  gap: 10px;\n  padding: 2px 16px 12px 16px;\n  background-color: ${({ theme }) => theme.background};\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n\n  & div {\n    align-self: center;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    gap: 24px;\n    padding: 8px 16px;\n    height: 56px;\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  top: 21%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.primaryText};\n\n  max-width: 220px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  @media (min-width: 420px) {\n    max-width: 250px;\n  }\n\n  @media (min-width: 768px) {\n    top: 50%;\n  }\n\n  @media (min-width: 900px) {\n    max-width: 300px;\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 50%;\n  }\n`;\n\nexport const BackButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 16px;\n  background: none;\n  border: none;\n  font-weight: 500;\n  padding: 10px;\n  color: ${({ theme }) => theme.primaryText};\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex-shrink: 0;\n`;\n\nexport const ControlButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  color: ${({ theme }) => theme.primaryText};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport LanguageSwitcher from \"@/components/LanguageSwitcher\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport UserAvatar from \"@/components/UserAvatar\";\nimport {\n  BackButton,\n  ControlButton,\n  Controls,\n  HeaderWrapper,\n  Title,\n} from \"./Header.styled\";\nimport { Link } from \"react-router-dom\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FiSettings } from \"react-icons/fi\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { useMediaQuery } from \"react-responsive\";\n\ntype Props = {\n  name: string;\n  avatar: string;\n  toggleMembersModal: () => void;\n  toggleSettingsModal: () => void;\n};\n\nconst Header = ({\n  name,\n  avatar,\n  toggleMembersModal,\n  toggleSettingsModal,\n}: Props) => {\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\n\n  return (\n    <>\n      <HeaderWrapper>\n        <BackButton to={\"/\"}>\n          <FaChevronLeft size={16} /> {!isMobile && t(\"Project.backToProjects\")}\n        </BackButton>\n        <Title>{name}</Title>\n        <Controls>\n          <LanguageSwitcher />\n          <ThemeToggle />\n          <ControlButton type=\"button\" onClick={() => toggleMembersModal()}>\n            <HiUserGroup size={20} />\n          </ControlButton>\n          <ControlButton type=\"button\" onClick={() => toggleSettingsModal()}>\n            <FiSettings size={20} />\n          </ControlButton>\n          <Link to=\"/account\">\n            <UserAvatar src={avatar} size={36} />\n          </Link>\n        </Controls>\n      </HeaderWrapper>\n    </>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.background};\n`;\n\nexport const BoardContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: raw;\n  gap: 16px;\n  padding: 16px;\n  background-color: ${({ theme }) => theme.background};\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n    padding: 24px;\n  }\n`;\n","import { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectUser } from \"@/redux/user/selectors\";\nimport { deleteProject, fetchProjectById } from \"@/redux/projects/operations\";\nimport {\n  selectCurrentProject,\n  selectProjectsLoading,\n} from \"@/redux/projects/selectors\";\nimport Loader from \"@/components/Loader\";\nimport EditProjectMembersModal from \"@/components/Modals/EditProjectMembersModal/EditProjectMembersModal\";\nimport EditProjecModal from \"@/components/Modals/EditProjecModal\";\nimport Header from \"./Header\";\nimport {\n  BoardContainer,\n  LoadContainer,\n  PageWrapper,\n} from \"./ProjectBoardPage.styled\";\n\nconst ProjectBoardPage = () => {\n  const { id: projectId } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const currentUser = useAppSelector(selectUser);\n  const project = useAppSelector(selectCurrentProject);\n  const isLoading = useAppSelector(selectProjectsLoading);\n  const [isEditMembersModalOpen, setIsEditMembersModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const [canEditProject, setCanEditProject] = useState(false);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (projectId) {\n      dispatch(fetchProjectById(projectId));\n    }\n  }, [dispatch, projectId]);\n\n  useEffect(() => {\n    const owners =\n      project?.members\n        ?.filter((member) => member.role === \"owner\")\n        .map((member) => member.user._id) || [];\n\n    const isCurrentUserOwner = owners.includes(currentUser._id);\n    setCanEditProject(isCurrentUserOwner);\n  }, [currentUser, project]);\n  const handleDelete = async () => {\n    if (!projectId || !project) return;\n\n    try {\n      await dispatch(deleteProject(project._id));\n      toast.success(t(\"Project.deleteProject.success\") as string);\n      toggleSettingsModal();\n      navigate(\"/\", { replace: true });\n    } catch (error) {\n      toast.error(\n        `${t(\"Project.deleteProject.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const toggleMembersModal = () => {\n    setIsEditMembersModalOpen((prev) => !prev);\n  };\n\n  const toggleSettingsModal = () => {\n    setIsSettingsModalOpen((prev) => !prev);\n  };\n\n  return (\n    <PageWrapper>\n      <Header\n        name={project?.name || \"\"}\n        avatar={currentUser.avatar}\n        toggleMembersModal={toggleMembersModal}\n        toggleSettingsModal={toggleSettingsModal}\n      />\n\n      {isLoading ? (\n        <LoadContainer>\n          <Loader size=\"60px\" color=\"#3e85f3\" />\n        </LoadContainer>\n      ) : (\n        <BoardContainer>Columns</BoardContainer>\n      )}\n\n      {isEditMembersModalOpen && (\n        <EditProjectMembersModal\n          handlerCloseModal={() => toggleMembersModal()}\n          projectId={projectId || \"\"}\n          withActions={canEditProject}\n        />\n      )}\n\n      {isSettingsModalOpen && (\n        <EditProjecModal\n          handlerCloseModal={() => toggleSettingsModal()}\n          projectId={projectId || \"\"}\n          deleteAction={() => handleDelete()}\n          withActions={canEditProject}\n        />\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default ProjectBoardPage;\n"],"names":["selectProjects","state","projects","items","selectCurrentProject","current","selectProjectsLoading","loading","LoadContainer","styled","div","EditProjectMembersSchema","yup","shape","members","of","email","required","role","oneOf","min","_ref","handlerCloseModal","formName","projectId","withActions","dispatch","useAppDispatch","project","useAppSelector","t","useTranslation","_jsx","children","Loader","size","color","initialValues","map","m","user","companyMembersWithRoles","member","Formik","enableReinitialize","validationSchema","onSubmit","async","updateProjectMembers","id","values","unwrap","toast","success","error","Error","message","String","_ref2","setFieldValue","StyledForm","UserList","value","users","onChange","updated","editableRoles","availableRoles","Modal","ModalLayout","title","EditProjectMembersForm","deleteAction","EditProjectForm","HeaderWrapper","header","theme","background","borderColor","Title","h1","_ref3","primaryText","BackButton","Link","_ref4","_ref5","animation","_ref6","primary","Controls","ControlButton","button","_ref7","backgroundSecondary","_ref8","_ref9","_ref10","name","avatar","toggleMembersModal","toggleSettingsModal","isMobile","useMediaQuery","query","_Fragment","_jsxs","to","FaChevronLeft","LanguageSwitcher","ThemeToggle","type","onClick","HiUserGroup","FiSettings","UserAvatar","src","PageWrapper","BoardContainer","ProjectBoardPage","useParams","navigate","useNavigate","currentUser","selectUser","isLoading","isEditMembersModalOpen","setIsEditMembersModalOpen","useState","isSettingsModalOpen","setIsSettingsModalOpen","canEditProject","setCanEditProject","useEffect","fetchProjectById","_project$members","isCurrentUserOwner","filter","_id","includes","prev","Header","EditProjectMembersModal","EditProjecModal","deleteProject","replace","handleDelete"],"sourceRoot":""}