{"version":3,"file":"static/js/583.d42b5377.chunk.js","mappings":"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","sources":["redux/projects/selectors.ts","redux/columns/selectors.ts","redux/tasks/selectors.ts","components/Forms/EditProjectMembersForm/EditProjectMembersForm.styled.ts","components/Forms/EditProjectMembersForm/EditProjectMembersSchema.ts","components/Forms/EditProjectMembersForm/EditProjectMembersForm.tsx","components/Modals/EditProjectMembersModal/EditProjectMembersModal.tsx","components/Forms/EditProjectForm/EditProjectSchema.ts","components/Forms/EditProjectForm/EditProjectForm.styled.ts","components/Forms/EditProjectForm/EditProjectForm.tsx","components/Modals/EditProjectModal/EditProjectModal.tsx","pages/ProjectBoardPage/Header/Header.styled.ts","pages/ProjectBoardPage/Header/Header.tsx","pages/ProjectBoardPage/ProjectBoardPage.styled.ts","components/AssigneeList/AssigneeList.styled.ts","components/AssigneeList/AssigneeList.tsx","components/AttachmentList/BasicModal/BasicModal.styled.ts","components/AttachmentList/BasicModal/BasicModal.tsx","components/AttachmentList/ImageGallery/ImageGallery.styled.ts","components/AttachmentList/ImageGallery/ImageGallery.tsx","components/AttachmentList/AttachmentList.styled.ts","components/AttachmentList/AttachmentList.tsx","components/Forms/EditTaskForm/EditTaskSchema.ts","components/Forms/EditTaskForm/EditTaskForm.styled.ts","redux/comments/selectors.ts","components/CommentsSection/CommentsSchema.ts","components/CommentsSection/CommentsSection.styled.ts","components/CommentsSection/CommentsSection.tsx","components/Forms/EditTaskForm/EditTaskForm.tsx","components/Modals/EditTaskModal/EditTaskModal.tsx","components/TaskCard/TaskCard.styled.ts","components/TaskCard/TaskCard.tsx","components/Forms/CreateTaskForm/CreateTaskSchema.ts","components/Forms/CreateTaskForm/CreateTaskForm.tsx","components/Modals/CreateTaskModal/CreateTaskModal.tsx","components/ColumnCard/ColumnCard.styled.ts","components/ColumnCard/ColumnCard.tsx","pages/ProjectBoardPage/ProjectColumns/ProjectColumns.styled.ts","pages/ProjectBoardPage/ProjectColumns/ProjectColumns.tsx","pages/ProjectBoardPage/ProjectBoardPage.tsx"],"sourcesContent":["import { RootState } from \"@/redux/store\";\n\nexport const selectProjects = (state: RootState) => state.projects.items;\nexport const selectCurrentProject = (state: RootState) =>\n  state.projects.current;\nexport const selectProjectsLoading = (state: RootState) =>\n  state.projects.loading;\nexport const selectProjectsError = (state: RootState) => state.projects.error;\n","import { RootState } from \"@/redux/store\";\n\nexport const selectColumns = (state: RootState) => state.columns.items;\nexport const selectColumnsLoading = (state: RootState) => state.columns.loading;\nexport const selectColumnsError = (state: RootState) => state.columns.error;\n","import { RootState } from \"@/redux/store\";\n\nexport const selectTasks = (state: RootState) => state.tasks.items;\nexport const selectTasksLoading = (state: RootState) => state.tasks.loading;\nexport const selectTasksError = (state: RootState) => state.tasks.error;\n\nexport const selectTasksByColumn = (columnId: string) => (state: RootState) =>\n  state.tasks.items.filter((task) => task.column === columnId);\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditProjectMembersSchema = yup.object().shape({\n  members: yup\n    .array()\n    .of(\n      yup.object().shape({\n        email: yup.string().email().required(),\n        role: yup.string().oneOf([\"owner\", \"editor\", \"viewer\"]).required(),\n      })\n    )\n    .min(1)\n    .required(),\n});\n","import { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { updateProjectMembers } from \"@/redux/projects/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport Loader from \"@/components/Loader\";\nimport UserList from \"@/components/UserList\";\nimport { FormikSubmitObserver } from \"@/components/Modal\";\nimport { StyledForm } from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditProjectMembersForm.styled\";\nimport { EditProjectMembersSchema } from \"./EditProjectMembersSchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  projectId: string;\n  withActions?: boolean;\n};\n\nconst EditProjectMembersForm = ({\n  handlerCloseModal,\n  formName,\n  projectId,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const { t } = useTranslation();\n\n  if (!project) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  const initialValues = {\n    members: project.members.map((m) => ({\n      email: m.user.email,\n      role: m.role,\n    })),\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      await dispatch(\n        updateProjectMembers({ id: projectId, members: values.members })\n      ).unwrap();\n\n      toast.success(t(\"Forms.editProjectMembers.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editProjectMembers.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const companyMembersWithRoles = project.members.map((member) => ({\n    ...member.user,\n    role: member.role,\n  }));\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditProjectMembersSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, setFieldValue }) => {\n        return (\n          <>\n            <FormikSubmitObserver />\n\n            <StyledForm id={formName}>\n              <UserList\n                value={values.members}\n                users={companyMembersWithRoles}\n                onChange={(updated) => setFieldValue(\"members\", updated)}\n                withActions={withActions}\n                editableRoles\n                availableRoles={[\"owner\", \"editor\", \"viewer\"]}\n              />\n            </StyledForm>\n          </>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default EditProjectMembersForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditProjectMembersForm from \"@/components/Forms/EditProjectMembersForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  projectId: string;\n  withActions?: boolean;\n};\n\nconst EditProjectMembersModal = ({\n  handlerCloseModal,\n  projectId,\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-project-members-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editProjectMembers.title\")}\n        formName={formName}\n        withActions={withActions}\n      >\n        <EditProjectMembersForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          projectId={projectId}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditProjectMembersModal;\n","import * as yup from \"yup\";\n\nexport const EditProjectSchema = yup.object({\n  name: yup.string().min(2).max(100).required(\"Required\"),\n  description: yup.string().max(1000),\n  deadline: yup.date().nullable(),\n});\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { updateProject } from \"@/redux/projects/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport Loader from \"@/components/Loader\";\nimport { FormikSubmitObserver } from \"@/components/Modal\";\nimport { EditProjectSchema } from \"./EditProjectSchema\";\nimport { LoadContainer } from \"./EditProjectForm.styled\";\nimport {\n  ErrorText,\n  Input,\n  InputContainer,\n  Label,\n  StyledForm,\n  Textarea,\n} from \"@/styles/form/Form.styled\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  withActions?: boolean;\n};\n\nconst EditProjectForm = ({\n  handlerCloseModal,\n  formName,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const { t } = useTranslation();\n\n  if (!project) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      await dispatch(\n        updateProject({ id: project._id, payload: values })\n      ).unwrap();\n      toast.success(t(\"Forms.editProject.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editProject.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const initialValues = {\n    name: project.name || \"\",\n    description: project.description || \"\",\n    deadline: project.deadline ? project.deadline.slice(0, 10) : \"\",\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={EditProjectSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <>\n          <FormikSubmitObserver />\n\n          <StyledForm id={formName}>\n            <InputContainer>\n              <Label>{t(\"Forms.editProject.name\")}</Label>\n              <Input\n                name=\"name\"\n                placeholder={t(\"Forms.editProject.namePlaceholder\")}\n                $hasError={touched.name && !!errors.name}\n                disabled={!withActions}\n              />\n              {touched.name && errors.name && (\n                <ErrorText>{errors.name}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.editProject.description\")}</Label>\n              <Textarea\n                name=\"description\"\n                placeholder={t(\"Forms.editProject.descriptionPlaceholder\")}\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                $hasError={touched.description && !!errors.description}\n                disabled={!withActions}\n              />\n              {touched.description && errors.description && (\n                <ErrorText>{errors.description}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.editProject.deadline\")}</Label>\n              <Input name=\"deadline\" type=\"date\" disabled={!withActions} />\n            </InputContainer>\n          </StyledForm>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditProjectForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditProjectForm from \"@/components/Forms/EditProjectForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  deleteAction?: () => void;\n  withActions?: boolean;\n};\n\nconst EditProjectModal = ({\n  handlerCloseModal,\n  deleteAction = () => {},\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-project-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editProject.title\")}\n        formName={formName}\n        deleteAction={deleteAction}\n        withActions={withActions}\n      >\n        <EditProjectForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditProjectModal;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const HeaderWrapper = styled.header`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  gap: 10px;\n  padding: 2px 16px 12px 16px;\n  background-color: ${({ theme }) => theme.background};\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n\n  & div {\n    align-self: center;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    gap: 24px;\n    padding: 8px 16px;\n    height: 56px;\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  top: 21%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.primaryText};\n\n  max-width: 220px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  @media (min-width: 420px) {\n    max-width: 250px;\n  }\n\n  @media (min-width: 768px) {\n    top: 50%;\n  }\n\n  @media (min-width: 900px) {\n    max-width: 300px;\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 50%;\n  }\n`;\n\nexport const BackButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 16px;\n  background: none;\n  border: none;\n  font-weight: 500;\n  padding: 10px;\n  color: ${({ theme }) => theme.primaryText};\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex-shrink: 0;\n`;\n\nexport const ControlButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  color: ${({ theme }) => theme.primaryText};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport LanguageSwitcher from \"@/components/LanguageSwitcher\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport UserAvatar from \"@/components/UserAvatar\";\nimport {\n  BackButton,\n  ControlButton,\n  Controls,\n  HeaderWrapper,\n  Title,\n} from \"./Header.styled\";\nimport { Link } from \"react-router-dom\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FiSettings } from \"react-icons/fi\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { useMediaQuery } from \"react-responsive\";\n\ntype Props = {\n  name: string;\n  avatar: string;\n  toggleMembersModal: () => void;\n  toggleSettingsModal: () => void;\n};\n\nconst Header = ({\n  name,\n  avatar,\n  toggleMembersModal,\n  toggleSettingsModal,\n}: Props) => {\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\n\n  return (\n    <>\n      <HeaderWrapper>\n        <BackButton to={\"/\"}>\n          <FaChevronLeft size={16} /> {!isMobile && t(\"Project.backToProjects\")}\n        </BackButton>\n        <Title>{name}</Title>\n        <Controls>\n          <LanguageSwitcher />\n          <ThemeToggle />\n          <ControlButton type=\"button\" onClick={() => toggleMembersModal()}>\n            <HiUserGroup size={20} />\n          </ControlButton>\n          <ControlButton type=\"button\" onClick={() => toggleSettingsModal()}>\n            <FiSettings size={20} />\n          </ControlButton>\n          <Link to=\"/account\">\n            <UserAvatar src={avatar} size={36} />\n          </Link>\n        </Controls>\n      </HeaderWrapper>\n    </>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.background};\n`;\n\nexport const BoardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.background};\n  overflow: hidden;\n`;\n","import styled from \"styled-components\";\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.primaryText};\n  background-color: ${({ theme }) => theme.cardBackground};\n  outline: none;\n  transition: border-color ${({ theme }) => theme.animation};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary};\n  }\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { searchProjectMembers } from \"@/redux/projects/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport { UserBase } from \"@/redux/user/user.types\";\nimport UserList from \"@/components/UserList\";\nimport {\n  Wrapper,\n  Dropdown,\n  Option,\n} from \"@/components/CustomSelect/CustomSelect.styled\";\nimport { SearchInput } from \"./AssigneeList.styled\";\n\ntype Props = {\n  value: UserBase[];\n  onChange: (updated: UserBase[]) => void;\n  placeholder?: string;\n  withActions?: boolean;\n};\n\nconst AssigneeList = ({\n  value,\n  onChange,\n  placeholder = \"Search...\",\n  withActions = false,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<UserBase[]>([]);\n  const [open, setOpen] = useState(false);\n  const [position, setPosition] = useState({ top: 0, left: 0, width: 0 });\n  const inputRef = useRef<HTMLInputElement>(null);\n  const dropdownRef = useRef<HTMLUListElement>(null);\n  const timeoutRef = useRef<number>(0);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (!query.trim() || !project?._id) {\n      setResults([]);\n      return;\n    }\n\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n\n    timeoutRef.current = window.setTimeout(async () => {\n      try {\n        const data = await dispatch(\n          searchProjectMembers({ projectId: project._id, query })\n        ).unwrap();\n        setResults(data);\n        setOpen(true);\n      } catch (error) {\n        toast.error(\n          `${t(\"Forms.createTask.searchFailed\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n        setResults([]);\n      }\n    }, 400);\n\n    return () => clearTimeout(timeoutRef.current);\n  }, [query, project, dispatch, t]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      const rect = inputRef.current.getBoundingClientRect();\n      setPosition({\n        top: rect.bottom + 4,\n        left: rect.left,\n        width: rect.width,\n      });\n    }\n  }, [open, results]);\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      const target = e.target as Node;\n      if (\n        !inputRef.current?.contains(target) &&\n        !dropdownRef.current?.contains(target)\n      ) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  const handleSelect = (user: UserBase) => {\n    if (!value.find((u) => u._id === user._id)) {\n      onChange([...value, user]);\n    }\n    setQuery(\"\");\n    setResults([]);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {withActions && (\n        <Wrapper>\n          <SearchInput\n            ref={inputRef}\n            value={query}\n            placeholder={placeholder}\n            onChange={(e) => setQuery(e.target.value)}\n            onFocus={() => results.length && setOpen(true)}\n          />\n          {open &&\n            createPortal(\n              <Dropdown\n                ref={dropdownRef}\n                $top={position.top}\n                $left={position.left}\n                $width={position.width}\n              >\n                {results.map((user) => (\n                  <Option key={user._id} onClick={() => handleSelect(user)}>\n                    {user.name} ({user.email})\n                  </Option>\n                ))}\n              </Dropdown>,\n              document.body\n            )}\n        </Wrapper>\n      )}\n      <UserList\n        users={value}\n        withActions={withActions}\n        onChange={(updatedUsers) => onChange(updatedUsers as UserBase[])}\n        viewMode\n      />\n    </>\n  );\n};\n\nexport default AssigneeList;\n","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  max-width: 90vw;\n  max-height: 90vh;\n  overflow: hidden;\n`;\n","import React, { useCallback, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Backdrop, ModalContainer } from \"./BasicModal.styled\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClose: () => void;\n};\n\nconst modalRoot = document.getElementById(\"modal-root\")!;\n\nconst BasicModal = ({ children, onClose }: Props) => {\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") onClose();\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.style.overflow = \"\";\n    };\n  }, [handleKeyDown]);\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) onClose();\n  };\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalContainer>{children}</ModalContainer>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default BasicModal;\n","import styled from \"styled-components\";\n\nexport const GalleryWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const GalleryImage = styled.img`\n  max-width: 90vw;\n  max-height: 90vh;\n  object-fit: contain;\n`;\n\nconst NavButton = styled.button`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.4);\n  border: none;\n  border-radius: 50%;\n  color: white;\n  font-size: 1.5rem;\n  width: 36px;\n  height: 36px;\n  cursor: pointer;\n  transition: background ${({ theme }) => theme.animation};\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.6);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const PrevButton = styled(NavButton)`\n  left: 16px;\n`;\n\nexport const NextButton = styled(NavButton)`\n  right: 16px;\n`;\n","import { useState, useCallback, useEffect } from \"react\";\nimport { AiOutlineLeft, AiOutlineRight } from \"react-icons/ai\";\nimport BasicModal from \"../BasicModal\";\nimport {\n  GalleryWrapper,\n  GalleryImage,\n  PrevButton,\n  NextButton,\n} from \"./ImageGallery.styled\";\n\ntype Props = {\n  images: string[];\n  startIndex: number;\n  onClose: () => void;\n};\n\nconst ImageGallery = ({ images, startIndex, onClose }: Props) => {\n  const [currentIndex, setCurrentIndex] = useState(startIndex);\n\n  const showPrev = useCallback(() => {\n    setCurrentIndex((i) => (i === 0 ? images.length - 1 : i - 1));\n  }, [images.length]);\n\n  const showNext = useCallback(() => {\n    setCurrentIndex((i) => (i === images.length - 1 ? 0 : i + 1));\n  }, [images.length]);\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === \"ArrowLeft\") showPrev();\n      if (e.key === \"ArrowRight\") showNext();\n    },\n    [showPrev, showNext]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <BasicModal onClose={onClose}>\n      <GalleryWrapper>\n        <PrevButton type=\"button\" onClick={showPrev}>\n          <AiOutlineLeft size={32} />\n        </PrevButton>\n        <GalleryImage\n          src={images[currentIndex]}\n          alt={`Image ${currentIndex + 1}`}\n        />\n        <NextButton type=\"button\" onClick={showNext}>\n          <AiOutlineRight size={32} />\n        </NextButton>\n      </GalleryWrapper>\n    </BasicModal>\n  );\n};\n\nexport default ImageGallery;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const List = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 8px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  width: 100%;\n  aspect-ratio: 1;\n  border-radius: 4px;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const RemoveButton = styled.button`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.6);\n  border: none;\n  border-radius: 4px;\n  padding: 3px;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const HiddenInput = styled.input`\n  display: none;\n`;\n\nexport const FileInputZone = styled.label<{ isDragActive: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 24px;\n  background-color: ${({ theme, isDragActive }) =>\n    isDragActive ? theme.background : theme.backgroundSecondary};\n  color: ${({ theme }) => theme.secondaryText};\n  border: 2px dashed\n    ${({ theme, isDragActive }) =>\n      isDragActive ? theme.primary : theme.borderColor};\n  border-radius: 4px;\n  text-align: center;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation},\n    border-color ${({ theme }) => theme.animation};\n`;\n","import { useCallback, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FiX } from \"react-icons/fi\";\nimport ImageGallery from \"./ImageGallery\";\nimport {\n  List,\n  RemoveButton,\n  Thumb,\n  HiddenInput,\n  FileInputZone,\n  Wrapper,\n} from \"./AttachmentList.styled\";\n\nexport interface Attachment {\n  url: string;\n  file?: File;\n}\n\ninterface Props {\n  files: Attachment[];\n  editable?: boolean;\n  onChange: (files: Attachment[]) => void;\n}\n\nconst AttachmentList = ({ files, editable, onChange }: Props) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [galleryIndex, setGalleryIndex] = useState<number | null>(null);\n  const [dragActive, setDragActive] = useState(false);\n  const { t } = useTranslation();\n\n  const handleFileInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    const newAttachments: Attachment[] = Array.from(e.target.files).map(\n      (file) => ({\n        url: URL.createObjectURL(file),\n        file,\n      })\n    );\n\n    onChange([...files, ...newAttachments]);\n    e.target.value = \"\";\n  };\n\n  const handleRemove = (idx: number) => {\n    const updated = files.filter((_, i) => i !== idx);\n    onChange(updated);\n  };\n\n  const handleFiles = useCallback(\n    (fileList: FileList) => {\n      const newAttachments: Attachment[] = Array.from(fileList).map((file) => ({\n        url: URL.createObjectURL(file),\n        file,\n      }));\n      onChange([...files, ...newAttachments]);\n    },\n    [files, onChange]\n  );\n\n  const onDragEnter = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(true);\n  };\n  const onDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(false);\n  };\n  const onDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n  const onDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files.length) {\n      handleFiles(e.dataTransfer.files);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <List>\n        {files.map((att, idx) => (\n          <Thumb key={idx} onClick={() => setGalleryIndex(idx)}>\n            <img src={att.url} alt={`attachment-${idx}`} />\n            {editable && (\n              <RemoveButton\n                type=\"button\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleRemove(idx);\n                }}\n              >\n                <FiX size={20} />\n              </RemoveButton>\n            )}\n          </Thumb>\n        ))}\n      </List>\n      {editable && (\n        <>\n          <HiddenInput\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            onChange={handleFileInput}\n          />\n          <FileInputZone\n            isDragActive={dragActive}\n            onClick={() => fileInputRef.current?.click()}\n            onDragEnter={onDragEnter}\n            onDragLeave={onDragLeave}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {t(\"Forms.editTask.dragOrClick\")}\n          </FileInputZone>\n        </>\n      )}\n\n      {galleryIndex !== null && (\n        <ImageGallery\n          images={files.map((f) => f.url)}\n          startIndex={galleryIndex}\n          onClose={() => setGalleryIndex(null)}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default AttachmentList;\n","import * as yup from \"yup\";\n\nexport const EditTaskSchema = yup.object({\n  title: yup\n    .string()\n    .min(2, \"Title must be at least 2 characters\")\n    .max(200, \"Title must be at most 200 characters\")\n    .required(),\n\n  description: yup\n    .string()\n    .max(2000, \"Description must be at most 2000 characters\")\n    .nullable(),\n\n  assignedTo: yup.array().of(yup.object().required()).optional(),\n\n  priority: yup\n    .string()\n    .oneOf([\"low\", \"medium\", \"high\", \"critical\"])\n    .optional(),\n\n  deadline: yup.date().nullable().optional(),\n\n  attachments: yup\n    .array()\n    .of(\n      yup.object({\n        url: yup.string().required(),\n        file: yup.mixed().notRequired(),\n      })\n    )\n    .optional(),\n});\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import { RootState } from \"@/redux/store\";\n\nexport const selectComments = (state: RootState) => state.comments.items;\nexport const selectCommentsLoading = (state: RootState) =>\n  state.comments.loading;\nexport const selectCommentsError = (state: RootState) => state.comments.error;\n\nexport const selectCommentsByTask = (taskId: string) => (state: RootState) =>\n  state.comments.items.filter((comment) => comment.task === taskId);\n","import * as yup from \"yup\";\n\nexport const CommentsSchema = yup.object().shape({\n  text: yup.string().trim().required(\"Cannot be empty\"),\n});\n","import styled from \"styled-components\";\nimport {\n  StyledForm as Form,\n  InputContainer as FormInputContainer,\n  SubmitButton as FormSubmitButton,\n} from \"@/styles/form/Form.styled\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 40px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n`;\n\nexport const CommentList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const CommentItem = styled.li`\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n`;\n\nexport const Body = styled.div`\n  flex: 1;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n\n  button {\n  }\n`;\n\nexport const InfoBlock = styled.div``;\n\nexport const UserName = styled.span`\n  font-weight: 600;\n`;\n\nexport const TimeStamp = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const ControlBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ControlButton = styled.button`\n  background: none;\n  border: none;\n  padding: 4px;\n  margin-left: 4px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.secondaryText};\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n\n  &.delete:hover {\n    color: ${({ theme }) => theme.danger};\n  }\n`;\n\nexport const Text = styled.p`\n  word-break: break-word;\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const StyledForm = styled(Form)`\n  flex-direction: row;\n  width: 100%;\n`;\n\nexport const InputContainer = styled(FormInputContainer)`\n  flex: 1;\n`;\n\nexport const SubmitButton = styled(FormSubmitButton)`\n  min-width: 70px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useTheme } from \"styled-components\";\nimport { FiEdit2, FiTrash2 } from \"react-icons/fi\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport {\n  fetchCommentsByTask,\n  createComment,\n  updateComment,\n  deleteComment,\n} from \"@/redux/comments/operations\";\nimport { selectCommentsByTask } from \"@/redux/comments/selectors\";\nimport { Comment } from \"@/redux/comments/comments.types\";\nimport { selectUserEmail } from \"@/redux/user/selectors\";\nimport Loader from \"@/components/Loader\";\nimport UserAvatar from \"@/components/UserAvatar\";\nimport { CommentsSchema } from \"./CommentsSchema\";\nimport { Input, ErrorText as FormError } from \"@/styles/form/Form.styled\";\nimport {\n  LoadContainer,\n  Body,\n  CommentItem,\n  CommentList,\n  Header,\n  Section,\n  Text,\n  Title,\n  StyledForm,\n  InputContainer,\n  SubmitButton,\n  FormWrapper,\n  InfoBlock,\n  UserName,\n  TimeStamp,\n  ControlBlock,\n  ControlButton,\n} from \"./CommentsSection.styled\";\n\ninterface Props {\n  taskId: string;\n  withActions?: boolean;\n}\n\ninterface FormValues {\n  text: string;\n}\n\nconst CommentsSection = ({ taskId, withActions = false }: Props) => {\n  const { t } = useTranslation();\n  const dispatch = useAppDispatch();\n  const comments = useAppSelector((state) =>\n    selectCommentsByTask(taskId)(state)\n  );\n  const currentUserEmail = useAppSelector(selectUserEmail);\n  const [isInitializing, setIsInitializing] = useState(true);\n  const [editId, setEditId] = useState<string | null>(null);\n  const theme = useTheme();\n\n  useEffect(() => {\n    dispatch(fetchCommentsByTask(taskId))\n      .catch((error) => {\n        toast.error(\n          `${t(\"Forms.comments.fetchFailed\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n      })\n      .finally(() => {\n        setIsInitializing(false);\n      });\n  }, [dispatch, t, taskId]);\n\n  const toggleEdit = (id: string) => {\n    setEditId((prev) => (prev === id ? null : id));\n  };\n\n  const handleCreate = (\n    values: FormValues,\n    { resetForm, setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    dispatch(createComment({ task: taskId, text: values.text }))\n      .then(() => {\n        resetForm();\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  const handleUpdate = (\n    values: FormValues,\n    { setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    if (!editId) return;\n    dispatch(updateComment({ id: editId, text: values.text }))\n      .then(() => {\n        setEditId(null);\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  if (isInitializing) {\n    return (\n      <Section>\n        <Title>{t(\"Forms.comments.title\")}</Title>\n        <LoadContainer>\n          <Loader size=\"40px\" color=\"#3e85f3\" />\n        </LoadContainer>\n      </Section>\n    );\n  }\n\n  return (\n    <Section>\n      <Title>{t(\"Forms.comments.title\")}</Title>\n\n      <CommentList>\n        {comments.map((c: Comment) => {\n          const isOwn = c.user.email === currentUserEmail;\n\n          return (\n            <CommentItem key={c._id}>\n              <UserAvatar src={c.user.avatar || \"\"} alt={c.user.name} />\n              <Body>\n                <Header>\n                  <InfoBlock>\n                    <UserName>{c.user.name}</UserName>{\" \"}\n                    <TimeStamp>\n                      {new Date(c.createdAt).toLocaleString()}\n                    </TimeStamp>\n                  </InfoBlock>\n                  {withActions && isOwn && (\n                    <ControlBlock>\n                      <ControlButton onClick={() => toggleEdit(c._id)}>\n                        <FiEdit2 size={16} />\n                      </ControlButton>\n                      <ControlButton\n                        className=\"delete\"\n                        onClick={() => dispatch(deleteComment(c._id))}\n                      >\n                        <FiTrash2 size={16} />\n                      </ControlButton>\n                    </ControlBlock>\n                  )}\n                </Header>\n\n                {editId === c._id ? (\n                  <Formik\n                    initialValues={{ text: c.text }}\n                    validationSchema={CommentsSchema}\n                    onSubmit={handleUpdate}\n                  >\n                    {({ errors, isSubmitting }) => (\n                      <FormWrapper>\n                        <StyledForm>\n                          <InputContainer>\n                            <Input\n                              name=\"text\"\n                              placeholder={t(\"Forms.comments.editPlaceholder\")}\n                              $hasError={Boolean(errors.text)}\n                              autoFocus\n                            />\n                          </InputContainer>\n                          <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                            {isSubmitting ? (\n                              <Loader size=\"16px\" color={theme.buttonText} />\n                            ) : (\n                              t(\"Forms.comments.save\")\n                            )}\n                          </SubmitButton>\n                        </StyledForm>\n                        <FormError>{errors.text}</FormError>\n                      </FormWrapper>\n                    )}\n                  </Formik>\n                ) : (\n                  <Text>{c.text}</Text>\n                )}\n              </Body>\n            </CommentItem>\n          );\n        })}\n      </CommentList>\n\n      {withActions && (\n        <Formik\n          initialValues={{ text: \"\" }}\n          validationSchema={CommentsSchema}\n          onSubmit={handleCreate}\n        >\n          {({ errors, isSubmitting }) => (\n            <FormWrapper>\n              <StyledForm>\n                <InputContainer>\n                  <Input\n                    name=\"text\"\n                    placeholder={t(\"Forms.comments.addPlaceholder\")}\n                    $hasError={Boolean(errors.text)}\n                  />\n                </InputContainer>\n                <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                  {isSubmitting ? (\n                    <Loader size=\"16px\" color={theme.buttonText} />\n                  ) : (\n                    t(\"Forms.comments.post\")\n                  )}\n                </SubmitButton>\n              </StyledForm>\n              <FormError>{errors.text}</FormError>\n            </FormWrapper>\n          )}\n        </Formik>\n      )}\n    </Section>\n  );\n};\n\nexport default CommentsSection;\n","import { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { updateTask } from \"@/redux/tasks/operations\";\nimport CustomSelect from \"@/components/CustomSelect\";\nimport AssigneeList from \"@/components/AssigneeList\";\nimport AttachmentList, { Attachment } from \"@/components/AttachmentList\";\nimport Loader from \"@/components/Loader\";\nimport { EditTaskSchema } from \"./EditTaskSchema\";\nimport { Task, TaskPriority } from \"@/redux/tasks/tasks.types\";\nimport {\n  ErrorText,\n  Input,\n  InputContainer,\n  Label,\n  StyledForm,\n  Textarea,\n} from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditTaskForm.styled\";\nimport CommentsSection from \"@/components/CommentsSection\";\nimport { FormikSubmitObserver } from \"@/components/Modal\";\n\ntype Props = {\n  task: Task;\n  handlerCloseModal: () => void;\n  formName: string;\n  withActions?: boolean;\n};\n\nconst EditTaskForm = ({\n  task,\n  handlerCloseModal,\n  formName,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n\n  const initialValues = {\n    title: task.title || \"\",\n    description: task.description || \"\",\n    column: task.column || \"\",\n    priority: task.priority || \"medium\",\n    assignedTo: task.assignedTo || [],\n    deadline: task.deadline?.slice(0, 10) || \"\",\n    attachments: (task.attachments || []).map((url) => ({\n      url,\n    })) as Attachment[],\n  };\n\n  const priorityColors: Record<TaskPriority, string> = {\n    low: \"#4CAF50\",\n    medium: \"#FF9800\",\n    high: \"#F44336\",\n    critical: \"#9C27B0\",\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      const formData = new FormData();\n\n      formData.append(\"title\", values.title);\n      formData.append(\"description\", values.description || \"\");\n      formData.append(\"priority\", values.priority);\n      formData.append(\"deadline\", values.deadline || \"\");\n\n      const assignedToIds = values.assignedTo.map((user) => user._id);\n      formData.append(\"assignedTo\", JSON.stringify(assignedToIds));\n\n      const existingUrls = values.attachments\n        .filter((a) => !a.file)\n        .map((a) => a.url);\n      formData.append(\"attachments\", JSON.stringify(existingUrls));\n\n      values.attachments\n        .filter((a) => a.file)\n        .forEach((a) => {\n          formData.append(\"files\", a.file!);\n        });\n\n      await dispatch(updateTask({ id: task._id, formData })).unwrap();\n\n      toast.success(t(\"Forms.editTask.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editTask.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  if (!task) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={EditTaskSchema}\n        onSubmit={handleSubmit}\n        enableReinitialize\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n        }) => (\n          <>\n            <FormikSubmitObserver />\n\n            <StyledForm id={formName}>\n              <InputContainer>\n                <Label>{t(\"Forms.editTask.title\")}</Label>\n                <Input\n                  name=\"title\"\n                  placeholder={t(\"Forms.editTask.titlePlaceholder\")}\n                  $hasError={touched.title && !!errors.title}\n                  disabled={!withActions}\n                />\n                {touched.title && errors.title && (\n                  <ErrorText>{errors.title}</ErrorText>\n                )}\n              </InputContainer>\n\n              <InputContainer>\n                <Label>{t(\"Forms.editTask.description\")}</Label>\n                <Textarea\n                  name=\"description\"\n                  placeholder={t(\"Forms.editTask.descriptionPlaceholder\")}\n                  value={values.description}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  $hasError={touched.description && !!errors.description}\n                  disabled={!withActions}\n                />\n                {touched.description && errors.description && (\n                  <ErrorText>{errors.description}</ErrorText>\n                )}\n              </InputContainer>\n\n              <InputContainer>\n                <Label>{t(\"Forms.editTask.priority\")}</Label>\n                <CustomSelect\n                  options={[\"low\", \"medium\", \"high\", \"critical\"]}\n                  value={values.priority}\n                  onChange={(val) => setFieldValue(\"priority\", val)}\n                  getLabel={(p) => t(`Common.priority.${p}`)}\n                  getKey={(p) => p}\n                  getColor={(p) => priorityColors[p as TaskPriority]}\n                  placeholder={t(\"Forms.editTask.priority\")}\n                  disabled={!withActions}\n                />\n              </InputContainer>\n\n              <InputContainer>\n                <Label>{t(\"Forms.editTask.assignedTo\")}</Label>\n                <AssigneeList\n                  value={values.assignedTo}\n                  onChange={(newValue) => setFieldValue(\"assignedTo\", newValue)}\n                  placeholder={t(\"Forms.editTask.assigneePlaceholder\")}\n                  withActions={withActions}\n                />\n              </InputContainer>\n\n              <InputContainer>\n                <Label>{t(\"Forms.editTask.deadline\")}</Label>\n                <Input\n                  name=\"deadline\"\n                  type=\"date\"\n                  value={values.deadline}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  disabled={!withActions}\n                />\n              </InputContainer>\n\n              <InputContainer>\n                <Label>{t(\"Forms.editTask.attachments\")}</Label>\n                <AttachmentList\n                  files={values.attachments}\n                  editable={withActions}\n                  onChange={(updated) => setFieldValue(\"attachments\", updated)}\n                />\n              </InputContainer>\n            </StyledForm>\n          </>\n        )}\n      </Formik>\n      <CommentsSection taskId={task._id} withActions={withActions} />\n    </>\n  );\n};\n\nexport default EditTaskForm;\n","import { useTranslation } from \"react-i18next\";\nimport { Task } from \"@/redux/tasks/tasks.types\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditTaskForm from \"@/components/Forms/EditTaskForm\";\n\ntype Props = {\n  task: Task;\n  handlerCloseModal: () => void;\n  deleteAction?: () => void;\n  withActions?: boolean;\n};\n\nconst EditTaskModal = ({\n  task,\n  handlerCloseModal,\n  deleteAction = () => {},\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-task-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editTask.title\")}\n        formName={formName}\n        deleteAction={deleteAction}\n        withActions={withActions}\n      >\n        <EditTaskForm\n          task={task}\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditTaskModal;\n","import styled from \"styled-components\";\nimport { DefaultTheme } from \"styled-components/dist/types\";\nimport { TaskPriority } from \"@/redux/tasks/tasks.types\";\n\nconst priorityBackgroundMap: Record<TaskPriority, keyof DefaultTheme> = {\n  low: \"priorityLow\",\n  medium: \"priorityMedium\",\n  high: \"priorityHigh\",\n  critical: \"priorityCritical\",\n};\n\nconst priorityTextMap: Record<TaskPriority, keyof DefaultTheme> = {\n  low: \"priorityTextLow\",\n  medium: \"priorityTextMedium\",\n  high: \"priorityTextHigh\",\n  critical: \"priorityTextCritical\",\n};\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 16px;\n  background-color: ${({ theme }) => theme.background};\n  border-radius: 4px;\n  box-shadow: ${({ theme }) => theme.shadow};\n`;\n\nexport const TopRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 12px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const PriorityTag = styled.span<{ $priority: TaskPriority }>`\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  white-space: nowrap;\n  color: ${({ theme, $priority }) => theme[priorityTextMap[$priority]]};\n  background-color: ${({ theme, $priority }) =>\n    theme[priorityBackgroundMap[$priority]]};\n`;\n\nexport const BottomRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const DateText = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { deleteTask } from \"@/redux/tasks/operations\";\nimport { Task } from \"@/redux/tasks/tasks.types\";\nimport MembersAvatarGroup from \"@/components/MembersAvatarGroup\";\nimport EditTaskModal from \"@/components/Modals/EditTaskModal\";\nimport {\n  BottomRow,\n  Card,\n  DateText,\n  PriorityTag,\n  Title,\n  TopRow,\n} from \"./TaskCard.styled\";\n\ntype Props = {\n  task: Task;\n  withActions?: boolean;\n};\n\nconst TaskCard = ({ task, withActions = false }: Props) => {\n  const { title, deadline, priority, assignedTo } = task;\n  const dispatch = useAppDispatch();\n  const [isEditTaskModalOpen, setIsEditTaskModalOpen] = useState(false);\n  const { t } = useTranslation();\n\n  const handleDeleteTask = async () => {\n    if (!task?._id) return;\n\n    try {\n      await dispatch(deleteTask(task._id));\n      toast.success(t(\"Forms.deleteTask.success\") as string);\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.deleteTask.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const toggleEditTaskModal = () => {\n    setIsEditTaskModalOpen((prev) => !prev);\n  };\n\n  const formatPriority = (p: string) => p.charAt(0).toUpperCase() + p.slice(1);\n\n  return (\n    <>\n      <Card onClick={toggleEditTaskModal}>\n        <TopRow>\n          <Title>{title}</Title>\n          <PriorityTag $priority={priority}>\n            {formatPriority(priority)}\n          </PriorityTag>\n        </TopRow>\n\n        <BottomRow>\n          <MembersAvatarGroup members={assignedTo} />\n          {deadline && <DateText>{deadline?.slice(0, 10)}</DateText>}\n        </BottomRow>\n      </Card>\n\n      {isEditTaskModalOpen && (\n        <EditTaskModal\n          task={task}\n          handlerCloseModal={toggleEditTaskModal}\n          deleteAction={handleDeleteTask}\n          withActions={withActions}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskCard;\n","import * as yup from \"yup\";\n\nexport const createTaskSchema = yup.object({\n  title: yup.string().min(2).max(200).required(),\n  description: yup.string().max(2000).nullable(),\n  assignedTo: yup.array().of(yup.string()),\n  priority: yup\n    .mixed<\"low\" | \"medium\" | \"high\" | \"critical\">()\n    .oneOf([\"low\", \"medium\", \"high\", \"critical\"])\n    .default(\"medium\"),\n  deadline: yup.date().nullable(),\n});\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useTheme } from \"styled-components\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { createTask } from \"@/redux/tasks/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport { UserBase } from \"@/redux/user/user.types\";\nimport { TaskPriority } from \"@/redux/tasks/tasks.types\";\nimport CustomSelect from \"@/components/CustomSelect\";\nimport AssigneeList from \"@/components/AssigneeList\";\nimport { FormikSubmitObserver } from \"@/components/Modal\";\nimport { createTaskSchema } from \"./CreateTaskSchema\";\nimport {\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  ErrorText,\n  Textarea,\n} from \"@/styles/form/Form.styled\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  columnId?: string;\n};\n\nconst initialValues = {\n  title: \"\",\n  description: \"\",\n  deadline: \"\",\n  priority: \"medium\",\n};\n\nconst CreateTaskForm = ({ handlerCloseModal, formName, columnId }: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const [assignees, setAssignees] = useState<UserBase[]>([]);\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const priorityColors: Record<TaskPriority, string> = {\n    low: theme.priorityTextLow,\n    medium: theme.priorityTextMedium,\n    high: theme.priorityTextHigh,\n    critical: theme.priorityTextCritical,\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    if (!project?._id || !columnId) {\n      toast.error(t(\"Forms.createTask.failed\") as string);\n      return;\n    }\n\n    const payload = {\n      ...values,\n      project: project._id,\n      column: columnId,\n      assignedTo: assignees.map((u) => u._id),\n      priority: values.priority as TaskPriority,\n    };\n\n    try {\n      await dispatch(createTask(payload)).unwrap();\n      toast.success(t(\"Forms.createTask.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.createTask.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={createTaskSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <>\n          <FormikSubmitObserver />\n\n          <StyledForm id={formName}>\n            <InputContainer>\n              <Label>{t(\"Forms.createTask.title\")}</Label>\n              <Input\n                name=\"title\"\n                placeholder={t(\"Forms.createTask.titlePlaceholder\")}\n                $hasError={touched.title && !!errors.title}\n              />\n              {touched.title && errors.title && (\n                <ErrorText>{errors.title}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.createTask.description\")}</Label>\n              <Textarea\n                name=\"description\"\n                placeholder={t(\"Forms.createTask.descriptionPlaceholder\")}\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                $hasError={touched.description && !!errors.description}\n              />\n              {touched.description && errors.description && (\n                <ErrorText>{errors.description}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.createTask.deadline\")}</Label>\n              <Input name=\"deadline\" type=\"date\" />\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.createTask.priority\")}</Label>\n              <CustomSelect\n                options={[\"low\", \"medium\", \"high\", \"critical\"]}\n                value={values.priority as TaskPriority}\n                onChange={(value) => {\n                  handleChange({\n                    target: { name: \"priority\", value },\n                  });\n                }}\n                getLabel={(p) => t(`Common.priority.${p}`)}\n                getKey={(p) => p}\n                getColor={(p) => priorityColors[p as TaskPriority]}\n                placeholder={t(\"Forms.createTask.priority\")}\n              />\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.createTask.assignedTo\")}</Label>\n              <AssigneeList\n                value={assignees}\n                onChange={setAssignees}\n                placeholder={t(\"Forms.createTask.assigneePlaceholder\")}\n                withActions\n              />\n            </InputContainer>\n          </StyledForm>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateTaskForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport CreateTaskForm from \"@/components/Forms/CreateTaskForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  columnId?: string;\n};\n\nconst CreateTaskModal = ({ handlerCloseModal, columnId }: Props) => {\n  const { t } = useTranslation();\n  const formName = \"create-task-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.createTask.title\")}\n        formName={formName}\n      >\n        <CreateTaskForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          columnId={columnId}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default CreateTaskModal;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div<{ isEmpty?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 290px;\n  height: 100%;\n  padding: ${({ isEmpty }) => (isEmpty ? \"0\" : \"16px\")};\n  color: ${({ theme }) => theme.secondaryText};\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  border: 2px dashed ${({ theme }) => theme.borderColor};\n  border-radius: 8px;\n  cursor: default;\n`;\n\nexport const Placeholder = styled.div<{ loading?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 290px;\n  height: 100%;\n  padding: 16px;\n  font-size: 16px;\n  text-align: center;\n  cursor: ${({ loading }) => (loading ? \"default\" : \"pointer\")};\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  background-color: transparent;\n  color: ${({ theme }) => theme.secondaryText};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.primaryText};\n  word-break: break-word;\n  overflow-wrap: break-word;\n`;\n\nexport const TitleInput = styled.input`\n  font-size: 16px;\n  font-weight: 600;\n  width: 100%;\n  background-color: transparent;\n  color: ${({ theme }) => theme.primaryText};\n  border: none;\n  padding: 0px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const InlineControls = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const ControlButton = styled.button<{ hoverColor?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  color: ${({ theme }) => theme.primaryText};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ hoverColor, theme }) => hoverColor || theme.primary};\n  }\n`;\n\nexport const Tasks = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  gap: 8px;\n  overflow-y: auto;\n  min-height: 100px;\n`;\n","import { useState, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useTheme } from \"styled-components\";\nimport { FiEdit3, FiTrash2, FiCheck, FiX, FiPlus } from \"react-icons/fi\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { deleteColumn, updateColumn } from \"@/redux/columns/operations\";\nimport { ColumnWithTasks } from \"@/redux/columns/columns.types\";\nimport TaskCard from \"@/components/TaskCard\";\nimport CreateTaskModal from \"@/components/Modals/CreateTaskModal\";\nimport Loader from \"@/components/Loader\";\nimport {\n  Draggable,\n  Droppable,\n  DraggableProvided,\n  DroppableProvided,\n} from \"@hello-pangea/dnd\";\nimport {\n  Wrapper,\n  Header,\n  Title,\n  TitleInput,\n  Tasks,\n  Placeholder,\n  InlineControls,\n  ControlButton,\n  AddButton,\n} from \"./ColumnCard.styled\";\n\ntype Props = {\n  column?: ColumnWithTasks;\n  isEmpty?: boolean;\n  withActions?: boolean;\n  isEditable?: boolean;\n  onClickEmpty?: () => void;\n};\n\nconst priorityMap: Record<string, number> = {\n  critical: 3,\n  high: 2,\n  medium: 1,\n  low: 0,\n};\n\nconst ColumnCard = ({\n  column,\n  isEmpty,\n  withActions,\n  isEditable = false,\n  onClickEmpty,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(column?.name || \"\");\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const sortedTasks = useMemo(() => {\n    if (!column?.tasks) return [];\n    return [...column.tasks].sort((a, b) => {\n      const pa = priorityMap[a.priority] ?? 0;\n      const pb = priorityMap[b.priority] ?? 0;\n      return pb - pa;\n    });\n  }, [column?.tasks]);\n\n  if (isEmpty) {\n    if (!withActions) return null;\n\n    return (\n      <Wrapper isEmpty onClick={onClickEmpty}>\n        <Placeholder>\n          <AddButton>\n            <FiPlus size={16} /> {t(\"Project.columns.addColumn\")}\n          </AddButton>\n        </Placeholder>\n      </Wrapper>\n    );\n  }\n\n  if (!column) {\n    return (\n      <Wrapper isEmpty>\n        <Placeholder loading>\n          <Loader size=\"60px\" color=\"#3e85f3\" />\n        </Placeholder>\n      </Wrapper>\n    );\n  }\n\n  const handleSave = () => {\n    if (!column?._id) return;\n\n    try {\n      dispatch(\n        updateColumn({\n          id: column._id,\n          data: { name: title },\n        })\n      );\n    } catch (error) {\n      toast.error(\n        `${t(\"Project.columns.updateFailed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    } finally {\n      setIsEditing(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setTitle(column?.name || \"\");\n    setIsEditing(false);\n  };\n\n  const handleDelete = () => {\n    if (!column?._id) return;\n\n    try {\n      dispatch(deleteColumn(column._id));\n    } catch (error) {\n      toast.error(\n        `${t(\"Project.columns.deleteFailed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const toggleCreateTaskModal = () => {\n    setIsCreateTaskModalOpen((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Header>\n          {isEditing ? (\n            <>\n              <TitleInput\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                autoFocus\n              />\n              <InlineControls>\n                <ControlButton\n                  type=\"button\"\n                  hoverColor={theme.success}\n                  onClick={() => handleSave()}\n                >\n                  <FiCheck size={20} />\n                </ControlButton>\n                <ControlButton\n                  type=\"button\"\n                  hoverColor={theme.primaryHover}\n                  onClick={() => handleCancel()}\n                >\n                  <FiX size={20} />\n                </ControlButton>\n                <ControlButton\n                  type=\"button\"\n                  hoverColor={theme.danger}\n                  onClick={() => handleDelete()}\n                >\n                  <FiTrash2 size={20} />\n                </ControlButton>\n              </InlineControls>\n            </>\n          ) : (\n            <>\n              <Title>{column?.name}</Title>\n              {withActions && (\n                <InlineControls>\n                  {isEditable && (\n                    <ControlButton\n                      type=\"button\"\n                      onClick={() => setIsEditing(true)}\n                    >\n                      <FiEdit3 size={20} />\n                    </ControlButton>\n                  )}\n                  <ControlButton\n                    type=\"button\"\n                    onClick={() => toggleCreateTaskModal()}\n                  >\n                    <FiPlus size={20} />\n                  </ControlButton>\n                </InlineControls>\n              )}\n            </>\n          )}\n        </Header>\n\n        {withActions ? (\n          <Droppable droppableId={column._id} type=\"task\">\n            {(provided: DroppableProvided) => (\n              <Tasks ref={provided.innerRef} {...provided.droppableProps}>\n                {sortedTasks.map((task, index) => (\n                  <Draggable\n                    draggableId={task._id}\n                    index={index}\n                    key={task._id}\n                  >\n                    {(provided: DraggableProvided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <TaskCard task={task} withActions={withActions} />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </Tasks>\n            )}\n          </Droppable>\n        ) : (\n          <Tasks>\n            {sortedTasks.map((task) => (\n              <TaskCard key={task._id} task={task} withActions={withActions} />\n            ))}\n          </Tasks>\n        )}\n      </Wrapper>\n\n      {isCreateTaskModalOpen && (\n        <CreateTaskModal\n          handlerCloseModal={toggleCreateTaskModal}\n          columnId={column?._id}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ColumnCard;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  gap: 24px;\n  width: 100%;\n  height: 100%;\n  padding: 24px;\n  overflow-x: auto;\n`;\n\nexport const EditOrderButton = styled.button<{ topOffset: number }>`\n  position: fixed;\n  top: ${({ topOffset }) => `${topOffset}px`};\n  right: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  color: ${({ theme }) => theme.primaryText};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation},\n    border-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n    border-color: ${({ theme }) => theme.primary};\n  }\n\n  &[data-active=\"true\"] {\n    color: ${({ theme }) => theme.invertedText};\n    background-color: ${({ theme }) => theme.primary};\n    border-color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const ColumnsRow = styled.div`\n  display: flex;\n  align-items: stretch;\n  height: 100%;\n  gap: 24px;\n`;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport { createColumn, reorderColumns } from \"@/redux/columns/operations\";\nimport { ColumnWithTasks } from \"@/redux/columns/columns.types\";\nimport { updateTask } from \"@/redux/tasks/operations\";\nimport ColumnCard from \"@/components/ColumnCard\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"@hello-pangea/dnd\";\nimport { TbEdit } from \"react-icons/tb\";\nimport { Wrapper, ColumnsRow, EditOrderButton } from \"./ProjectColumns.styled\";\n\ntype Props = {\n  columns: ColumnWithTasks[];\n  topOffset?: number;\n  withActions?: boolean;\n  onEditOrder?: () => void;\n};\n\nconst ProjectColumns = ({\n  columns,\n  topOffset = 24,\n  withActions = false,\n  onEditOrder,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const projectId = useAppSelector(selectCurrentProject)?._id;\n  const [isEditMode, setIsEditMode] = useState(false);\n  const { t } = useTranslation();\n\n  const toggleEditMode = () => setIsEditMode((prev) => !prev);\n\n  const getSortedColumns = () => {\n    return [...columns].sort((a, b) => a.order - b.order);\n  };\n\n  const handleAddColumn = () => {\n    if (!projectId) return;\n\n    try {\n      const newColumn = {\n        name: t(\"Project.columns.newColumn\") as string,\n        order: columns.length,\n        project: projectId,\n      };\n\n      dispatch(createColumn(newColumn));\n    } catch (error) {\n      toast.error(\n        `${t(\"Project.columns.addFailed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const handleDragEnd = async (result: DropResult) => {\n    const { source, destination, draggableId, type } = result;\n\n    if (!destination) return;\n\n    if (type === \"column\") {\n      if (!isEditMode || source.index === destination.index) return;\n\n      const sortedColumns = getSortedColumns();\n      const reordered = [...sortedColumns];\n      const [moved] = reordered.splice(source.index, 1);\n      reordered.splice(destination.index, 0, moved);\n\n      const updatedColumns = reordered.map((col, index) => ({\n        id: col._id,\n        order: index,\n      }));\n\n      dispatch(reorderColumns({ columns: updatedColumns }))\n        .unwrap()\n        .catch((err) => {\n          toast.error(`${t(\"Project.columns.reorderFailed\")}: ${err.message}`);\n        });\n\n      return;\n    }\n\n    if (type === \"task\") {\n      if (\n        source.droppableId === destination.droppableId &&\n        source.index === destination.index\n      )\n        return;\n\n      const sourceColumn = columns.find(\n        (col) => col._id === source.droppableId\n      );\n      const movedTask = sourceColumn?.tasks.find((t) => t._id === draggableId);\n\n      if (!movedTask) return;\n\n      const formData = new FormData();\n      formData.append(\"column\", destination.droppableId);\n\n      dispatch(updateTask({ id: result.draggableId, formData }))\n        .unwrap()\n        .catch((err) => {\n          toast.error(`${t(\"Project.columns.moveTaskFailed\")}: ${err.message}`);\n        });\n\n      return;\n    }\n  };\n\n  return (\n    <Wrapper>\n      {withActions && (\n        <EditOrderButton\n          type=\"button\"\n          topOffset={topOffset + 24}\n          data-active={isEditMode}\n          onClick={() => {\n            toggleEditMode();\n            onEditOrder?.();\n          }}\n        >\n          <TbEdit size={20} />\n        </EditOrderButton>\n      )}\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {isEditMode && withActions ? (\n          <Droppable droppableId=\"columns\" direction=\"horizontal\" type=\"column\">\n            {(provided) => (\n              <ColumnsRow ref={provided.innerRef} {...provided.droppableProps}>\n                {getSortedColumns().map((column, index) => (\n                  <Draggable\n                    draggableId={column._id}\n                    index={index}\n                    key={column._id}\n                  >\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <ColumnCard\n                          column={column}\n                          withActions={withActions}\n                          isEditable={isEditMode}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </ColumnsRow>\n            )}\n          </Droppable>\n        ) : (\n          <ColumnsRow>\n            {getSortedColumns().map((column) => (\n              <ColumnCard\n                key={column._id}\n                column={column}\n                withActions={withActions}\n              />\n            ))}\n          </ColumnsRow>\n        )}\n\n        {isEditMode && (\n          <ColumnCard\n            isEmpty\n            withActions={withActions}\n            onClickEmpty={handleAddColumn}\n          />\n        )}\n      </DragDropContext>\n    </Wrapper>\n  );\n};\n\nexport default ProjectColumns;\n","import { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectUser } from \"@/redux/user/selectors\";\nimport { deleteProject, fetchProjectById } from \"@/redux/projects/operations\";\nimport {\n  selectCurrentProject,\n  selectProjectsLoading,\n} from \"@/redux/projects/selectors\";\nimport { selectColumns } from \"@/redux/columns/selectors\";\nimport { selectTasks } from \"@/redux/tasks/selectors\";\nimport Loader from \"@/components/Loader\";\nimport EditProjectMembersModal from \"@/components/Modals/EditProjectMembersModal/EditProjectMembersModal\";\nimport EditProjecModal from \"@/components/Modals/EditProjectModal\";\nimport Header from \"./Header\";\nimport {\n  BoardContainer,\n  LoadContainer,\n  PageWrapper,\n} from \"./ProjectBoardPage.styled\";\nimport ProjectColumns from \"./ProjectColumns\";\n\nconst ProjectBoardPage = () => {\n  const { id: projectId } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const currentUser = useAppSelector(selectUser);\n  const project = useAppSelector(selectCurrentProject);\n  const isLoading = useAppSelector(selectProjectsLoading);\n  const columns = useAppSelector(selectColumns);\n  const tasks = useAppSelector(selectTasks);\n  const headerRef = useRef<HTMLDivElement>(null);\n  const [headerHeight, setHeaderHeight] = useState(0);\n  const [isEditMembersModalOpen, setIsEditMembersModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const [canEditProject, setCanEditProject] = useState(false);\n  const [canEditBoard, setCanEditBoard] = useState(false);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (!headerRef.current) return;\n\n    const observer = new ResizeObserver((entries) => {\n      for (let entry of entries) {\n        setHeaderHeight(entry.contentRect.height);\n      }\n    });\n\n    observer.observe(headerRef.current);\n\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    if (projectId) {\n      dispatch(fetchProjectById(projectId));\n    }\n  }, [dispatch, projectId]);\n\n  useEffect(() => {\n    const owners =\n      project?.members\n        ?.filter((member) => member.role === \"owner\")\n        .map((member) => member.user._id) || [];\n\n    const editors =\n      project?.members\n        ?.filter((member) => member.role === \"editor\")\n        .map((member) => member.user._id) || [];\n\n    const isCurrentUserOwner = owners.includes(currentUser._id);\n\n    const isCurrentUserEditor = editors.includes(currentUser._id);\n\n    setCanEditProject(isCurrentUserOwner);\n    setCanEditBoard(isCurrentUserOwner || isCurrentUserEditor);\n  }, [currentUser, project]);\n\n  const handleDelete = async () => {\n    if (!projectId || !project) return;\n\n    try {\n      await dispatch(deleteProject(project._id));\n      toast.success(t(\"Forms.deleteProject.success\") as string);\n      toggleSettingsModal();\n      navigate(\"/\", { replace: true });\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.deleteProject.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const toggleMembersModal = () => {\n    setIsEditMembersModalOpen((prev) => !prev);\n  };\n\n  const toggleSettingsModal = () => {\n    setIsSettingsModalOpen((prev) => !prev);\n  };\n\n  const tasksByColumn: Record<string, typeof tasks> = tasks.reduce(\n    (acc, task) => {\n      if (!acc[task.column]) {\n        acc[task.column] = [];\n      }\n      acc[task.column].push(task);\n      return acc;\n    },\n    {} as Record<string, typeof tasks>\n  );\n\n  return (\n    <PageWrapper>\n      <div ref={headerRef}>\n        <Header\n          name={project?.name || \"\"}\n          avatar={currentUser.avatar}\n          toggleMembersModal={toggleMembersModal}\n          toggleSettingsModal={toggleSettingsModal}\n        />\n      </div>\n\n      {isLoading ? (\n        <LoadContainer>\n          <Loader size=\"60px\" color=\"#3e85f3\" />\n        </LoadContainer>\n      ) : (\n        <BoardContainer>\n          <ProjectColumns\n            columns={columns.map((c) => ({\n              ...c,\n              tasks: tasksByColumn[c._id] || [],\n            }))}\n            topOffset={headerHeight}\n            withActions={canEditBoard}\n          />\n        </BoardContainer>\n      )}\n\n      {isEditMembersModalOpen && (\n        <EditProjectMembersModal\n          handlerCloseModal={() => toggleMembersModal()}\n          projectId={projectId || \"\"}\n          withActions={canEditProject}\n        />\n      )}\n\n      {isSettingsModalOpen && (\n        <EditProjecModal\n          handlerCloseModal={() => toggleSettingsModal()}\n          deleteAction={() => handleDelete()}\n          withActions={canEditProject}\n        />\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default ProjectBoardPage;\n"],"names":["selectProjects","state","projects","items","selectCurrentProject","current","selectProjectsLoading","loading","selectColumns","columns","selectTasks","tasks","LoadContainer","styled","div","EditProjectMembersSchema","yup","shape","members","of","email","required","role","oneOf","min","_ref","handlerCloseModal","formName","projectId","withActions","dispatch","useAppDispatch","project","useAppSelector","t","useTranslation","_jsx","children","Loader","size","color","initialValues","map","m","user","companyMembersWithRoles","member","Formik","enableReinitialize","validationSchema","onSubmit","async","updateProjectMembers","id","values","unwrap","toast","success","error","Error","message","String","_ref2","setFieldValue","_jsxs","_Fragment","FormikSubmitObserver","StyledForm","UserList","value","users","onChange","updated","editableRoles","availableRoles","Modal","ModalLayout","title","EditProjectMembersForm","EditProjectSchema","name","max","description","deadline","nullable","slice","updateProject","_id","payload","errors","touched","handleChange","handleBlur","InputContainer","Label","Input","placeholder","$hasError","disabled","ErrorText","Textarea","onBlur","type","deleteAction","EditProjectForm","HeaderWrapper","header","theme","background","borderColor","Title","h1","_ref3","primaryText","BackButton","Link","_ref4","_ref5","animation","_ref6","primary","Controls","ControlButton","button","_ref7","backgroundSecondary","_ref8","_ref9","_ref10","avatar","toggleMembersModal","toggleSettingsModal","isMobile","useMediaQuery","query","to","FaChevronLeft","LanguageSwitcher","ThemeToggle","onClick","HiUserGroup","FiSettings","UserAvatar","src","PageWrapper","BoardContainer","SearchInput","input","cardBackground","secondaryText","setQuery","useState","results","setResults","open","setOpen","position","setPosition","top","left","width","inputRef","useRef","dropdownRef","timeoutRef","useEffect","trim","clearTimeout","window","setTimeout","data","searchProjectMembers","rect","getBoundingClientRect","bottom","handleClickOutside","e","_inputRef$current","_dropdownRef$current","target","contains","document","addEventListener","removeEventListener","Wrapper","ref","onFocus","length","createPortal","Dropdown","$top","$left","$width","Option","find","u","handleSelect","body","updatedUsers","viewMode","Backdrop","ModalContainer","modalRoot","getElementById","onClose","handleKeyDown","useCallback","key","style","overflow","ReactDOM","currentTarget","GalleryWrapper","GalleryImage","img","NavButton","PrevButton","NextButton","images","startIndex","currentIndex","setCurrentIndex","showPrev","i","showNext","BasicModal","AiOutlineLeft","alt","AiOutlineRight","List","Thumb","RemoveButton","HiddenInput","FileInputZone","label","isDragActive","files","editable","fileInputRef","galleryIndex","setGalleryIndex","dragActive","setDragActive","handleFiles","fileList","newAttachments","Array","from","file","url","URL","createObjectURL","att","idx","stopPropagation","filter","_","handleRemove","FiX","accept","multiple","_fileInputRef$current","click","onDragEnter","preventDefault","onDragLeave","onDragOver","onDrop","dataTransfer","ImageGallery","f","EditTaskSchema","assignedTo","optional","priority","attachments","notRequired","CommentsSchema","text","Section","section","h3","CommentList","ul","CommentItem","li","Body","Header","InfoBlock","UserName","span","TimeStamp","ControlBlock","danger","Text","p","FormWrapper","Form","FormInputContainer","SubmitButton","FormSubmitButton","taskId","comments","comment","task","selectCommentsByTask","currentUserEmail","selectUserEmail","isInitializing","setIsInitializing","editId","setEditId","useTheme","fetchCommentsByTask","catch","finally","handleUpdate","setSubmitting","updateComment","then","c","isOwn","Date","createdAt","toLocaleString","toggleEdit","prev","FiEdit2","className","deleteComment","FiTrash2","isSubmitting","Boolean","autoFocus","buttonText","FormError","handleCreate","resetForm","createComment","_task$deadline","column","priorityColors","low","medium","high","critical","formData","FormData","append","assignedToIds","JSON","stringify","existingUrls","a","forEach","updateTask","CustomSelect","options","val","getLabel","getKey","getColor","AssigneeList","newValue","AttachmentList","CommentsSection","EditTaskForm","priorityBackgroundMap","priorityTextMap","Card","shadow","TopRow","PriorityTag","$priority","BottomRow","DateText","isEditTaskModalOpen","setIsEditTaskModalOpen","toggleEditTaskModal","charAt","toUpperCase","MembersAvatarGroup","EditTaskModal","deleteTask","createTaskSchema","default","columnId","assignees","setAssignees","priorityTextLow","priorityTextMedium","priorityTextHigh","priorityTextCritical","createTask","CreateTaskForm","isEmpty","Placeholder","AddButton","TitleInput","InlineControls","_ref11","_ref12","_ref13","hoverColor","Tasks","priorityMap","isEditable","onClickEmpty","isEditing","setIsEditing","setTitle","isCreateTaskModalOpen","setIsCreateTaskModalOpen","sortedTasks","useMemo","sort","b","_priorityMap$a$priori","_priorityMap$b$priori","pa","FiPlus","toggleCreateTaskModal","handleSave","updateColumn","FiCheck","primaryHover","handleDelete","deleteColumn","FiEdit3","Droppable","droppableId","provided","innerRef","droppableProps","index","Draggable","draggableId","draggableProps","dragHandleProps","TaskCard","CreateTaskModal","EditOrderButton","topOffset","invertedText","ColumnsRow","_useAppSelector","onEditOrder","isEditMode","setIsEditMode","getSortedColumns","order","TbEdit","DragDropContext","onDragEnd","source","destination","result","sourceColumn","col","movedTask","err","reordered","moved","splice","updatedColumns","reorderColumns","direction","ColumnCard","handleAddColumn","newColumn","createColumn","ProjectBoardPage","useParams","navigate","useNavigate","currentUser","selectUser","isLoading","headerRef","headerHeight","setHeaderHeight","isEditMembersModalOpen","setIsEditMembersModalOpen","isSettingsModalOpen","setIsSettingsModalOpen","canEditProject","setCanEditProject","canEditBoard","setCanEditBoard","observer","ResizeObserver","entries","entry","contentRect","height","observe","disconnect","fetchProjectById","_project$members","_project$members2","owners","editors","isCurrentUserOwner","includes","isCurrentUserEditor","tasksByColumn","reduce","acc","push","ProjectColumns","EditProjectMembersModal","EditProjecModal","deleteProject","replace"],"sourceRoot":""}