{"version":3,"file":"static/js/669.e8b44d0e.chunk.js","mappings":"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","sources":["components/ImageUploadField/ImageUploadField.styled.ts","components/ImageUploadField/ImageUploadField.tsx","components/Forms/EditCompanyForm/EditCompanyForm.styled.ts","components/Forms/EditCompanyForm/EditCompanySchema.ts","components/Forms/EditCompanyForm/EditCompanyForm.tsx","components/Modals/EditCompanyModal/EditCompanyModal.tsx","components/Forms/EditCompanyMembersForm/EditCompanyMembersForm.styled.ts","components/Forms/EditCompanyMembersForm/EditCompanyMembersSchema.ts","components/Forms/EditCompanyMembersForm/EditCompanyMembersForm.tsx","components/Modals/EditCompanyMembersModal/EditCompanyMembersModal.tsx","components/CompanyCard/CompanyCard.styled.ts","components/CompanyCard/CompanyCard.tsx","components/Forms/CreateCompanyForm/CreateCompanySchema.ts","components/Forms/CreateCompanyForm/CreateCompanyForm.tsx","components/Modals/CreateCompanyModal/CreateCompanyModal.tsx","pages/CompanyPage/CompanyPage.styled.ts","pages/CompanyPage/CompanyPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FileDropZone = styled.div`\n  border: 2px dashed ${({ theme }) => theme.borderColor};\n  border-radius: 8px;\n  padding: 32px 24px;\n  text-align: center;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const UploadText = styled.div`\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const UploadButton = styled.button`\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.secondaryText};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n\nexport const PreviewImage = styled.img`\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 12px;\n  background-color: #ccc;\n`;\n\nexport const HiddenFileInput = styled.input`\n  display: none;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n`;\n","import { useRef, useState, useEffect } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { useField } from \"formik\";\nimport { FaRegBuilding } from \"react-icons/fa\";\nimport {\n  FileDropZone,\n  HiddenFileInput,\n  PreviewImage,\n  UploadText,\n  UploadButton,\n  IconWrapper,\n} from \"./ImageUploadField.styled\";\nimport { ErrorText } from \"@/styles/form/Form.styled\";\n\ninterface Props {\n  name: string;\n  placeholderText: string;\n  buttonText: string;\n  initialPreview?: string | null;\n}\n\nconst ImageUploadField = ({\n  name,\n  placeholderText,\n  buttonText,\n  initialPreview = null,\n}: Props) => {\n  const theme = useTheme();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [field, meta, helpers] = useField(name);\n  const [preview, setPreview] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!field.value && initialPreview) {\n      setPreview(initialPreview);\n    }\n  }, [initialPreview, field.value]);\n\n  const handleFileChange = (file: File) => {\n    helpers.setValue(file);\n    setPreview(URL.createObjectURL(file));\n  };\n\n  return (\n    <>\n      <FileDropZone\n        onClick={() => fileInputRef.current?.click()}\n        onDrop={(e) => {\n          e.preventDefault();\n          const file = e.dataTransfer.files[0];\n          if (file) {\n            handleFileChange(file);\n          }\n        }}\n        onDragOver={(e) => e.preventDefault()}\n      >\n        {preview ? (\n          <PreviewImage src={preview} alt=\"Preview\" />\n        ) : (\n          <>\n            <IconWrapper>\n              <FaRegBuilding size={48} color={theme.secondaryText} />\n            </IconWrapper>\n            <UploadText>{placeholderText}</UploadText>\n            <UploadButton type=\"button\">{buttonText}</UploadButton>\n          </>\n        )}\n      </FileDropZone>\n\n      <HiddenFileInput\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => {\n          const file = e.target.files?.[0];\n          if (file) {\n            handleFileChange(file);\n          }\n        }}\n      />\n\n      {meta.touched && meta.error && <ErrorText>{meta.error}</ErrorText>}\n    </>\n  );\n};\n\nexport default ImageUploadField;\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditCompanySchema = yup.object({\n  name: yup.string().required(\"Required\"),\n  logo: yup.mixed().nullable(),\n});\n","import { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { fetchCompanyById, updateCompany } from \"@/redux/companies/operations\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport Loader from \"@/components/Loader\";\nimport ImageUploadField from \"@/components/ImageUploadField\";\nimport {\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  ErrorText,\n} from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditCompanyForm.styled\";\nimport { EditCompanySchema } from \"./EditCompanySchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  companyId: string;\n};\n\nconst EditCompanyForm = ({ handlerCloseModal, formName, companyId }: Props) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const [company, setCompany] = useState<Company | null>(null);\n\n  useEffect(() => {\n    const loadCompany = async () => {\n      try {\n        const result = await dispatch(fetchCompanyById(companyId)).unwrap();\n        setCompany(result);\n      } catch (error) {\n        toast.error(\n          `${t(\"Forms.editCompany.failedToLoad\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n        handlerCloseModal();\n      }\n    };\n\n    loadCompany();\n  }, [dispatch, companyId, t, handlerCloseModal]);\n\n  const initialValues = {\n    name: company?.name || \"\",\n    logo: null as File | null,\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n\n    if (values.logo) {\n      formData.append(\"logo\", values.logo);\n    }\n\n    try {\n      await dispatch(updateCompany({ id: companyId, formData })).unwrap();\n      toast.success(t(\"Forms.editCompany.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return !company ? (\n    <LoadContainer>\n      <Loader size=\"60px\" color=\"#3e85f3\" />\n    </LoadContainer>\n  ) : (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditCompanySchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <StyledForm id={formName}>\n          <InputContainer>\n            <Label>{t(\"Forms.editCompany.name\")}</Label>\n            <Input\n              name=\"name\"\n              placeholder={t(\"Forms.editCompany.namePlaceholder\")}\n              $hasError={touched.name && !!errors.name}\n            />\n            {touched.name && errors.name && (\n              <ErrorText>{errors.name}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.editCompany.logo\")}</Label>\n            <ImageUploadField\n              name=\"logo\"\n              placeholderText={t(\"Forms.common.dragOrClick\")}\n              buttonText={t(\"Forms.common.chooseFile\")}\n              initialPreview={company.logo}\n            />\n          </InputContainer>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditCompanyForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditCompanyForm from \"@/components/Forms/EditCompanyForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  deleteAction: () => void;\n  companyId: string;\n};\n\nconst EditCompanyModal = ({\n  handlerCloseModal,\n  deleteAction,\n  companyId,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-company-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editCompany.title\")}\n        formName={formName}\n        deleteAction={deleteAction}\n      >\n        <EditCompanyForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          companyId={companyId}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditCompanyModal;\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditCompanyMembersSchema = yup.object().shape({\n  members: yup.array().of(yup.string().email()).min(1).required(),\n});\n","import { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { fetchCompanyById, updateMembers } from \"@/redux/companies/operations\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport Loader from \"@/components/Loader\";\nimport UserList from \"@/components/UserList\";\nimport { StyledForm } from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditCompanyMembersForm.styled\";\nimport { EditCompanyMembersSchema } from \"./EditCompanyMembersSchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  companyId: string;\n  withActions?: boolean;\n};\n\nconst EditCompanyMembersForm = ({\n  handlerCloseModal,\n  formName,\n  companyId,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const [company, setCompany] = useState<Company | null>(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const loadCompany = async () => {\n      try {\n        const result = await dispatch(fetchCompanyById(companyId)).unwrap();\n        setCompany(result);\n      } catch (error) {\n        toast.error(\n          `${t(\"Forms.editCompanyMembers.failedToLoad\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n        handlerCloseModal();\n      }\n    };\n\n    loadCompany();\n  }, [dispatch, companyId, t, handlerCloseModal]);\n\n  if (!company) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  const initialValues = {\n    members: company.members.map((m) => m.email),\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      await dispatch(\n        updateMembers({ id: company._id, members: values.members })\n      ).unwrap();\n\n      toast.success(t(\"Forms.editCompanyMembers.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editCompanyMembers.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const companyMembersWithRoles = company.members.map((member) => ({\n    ...member,\n    role:\n      company.owner.email === member.email\n        ? (\"owner\" as const)\n        : (\"member\" as const),\n  }));\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditCompanyMembersSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, setFieldValue }) => {\n        return (\n          <StyledForm id={formName}>\n            <UserList\n              value={values.members}\n              users={companyMembersWithRoles}\n              onChange={(updated) => setFieldValue(\"members\", updated)}\n              withActions={withActions}\n            />\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default EditCompanyMembersForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditCompanyMembersForm from \"@/components/Forms/EditCompanyMembersForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  companyId: string;\n  withActions?: boolean;\n};\n\nconst EditCompanyMembersModal = ({\n  handlerCloseModal,\n  companyId,\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-company-members-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editCompanyMembers.title\")}\n        formName={formName}\n        withActions={withActions}\n      >\n        <EditCompanyMembersForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          companyId={companyId}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditCompanyMembersModal;\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 16px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.background};\n`;\n\nexport const UpperBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const BottomBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Logo = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 12px;\n  background-color: #ddd;\n`;\n\nexport const Name = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.primaryText};\n  word-break: break-word;\n  overflow-wrap: break-word;\n`;\n\nexport const RoleBadge = styled.span<{ color: string }>`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.roleTextColor};\n  background-color: ${({ color }) => color};\n  border-radius: 4px;\n  padding: 2px 8px;\n  align-self: start;\n`;\n\nexport const Actions = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  display: flex;\n  gap: 8px;\n`;\n\nexport const IconButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.secondaryText};\n  cursor: pointer;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectUserEmail } from \"@/redux/user/selectors\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport { deleteCompany } from \"@/redux/companies/operations\";\nimport MembersAvatarGroup from \"@/components/MembersAvatarGroup\";\nimport EditCompanyModal from \"@/components/Modals/EditCompanyModal\";\nimport EditCompanyMembersModal from \"@/components/Modals/EditCompanyMembersModal\";\nimport {\n  Card,\n  UpperBlock,\n  BottomBlock,\n  Logo,\n  Name,\n  RoleBadge,\n  Actions,\n  IconButton,\n} from \"./CompanyCard.styled\";\nimport { HiDotsVertical, HiUserGroup } from \"react-icons/hi\";\n\ninterface Props {\n  company: Company;\n}\n\nconst CompanyCard = ({ company }: Props) => {\n  const dispatch = useAppDispatch();\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isEditMembersModalOpen, setIsEditMembersModalOpen] = useState(false);\n  const myEmail = useAppSelector(selectUserEmail);\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const toggleEditModal = () => {\n    setIsEditModalOpen((prev) => !prev);\n  };\n\n  const toggleMembersModal = () => {\n    setIsEditMembersModalOpen((prev) => !prev);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCompany(company._id));\n      toast.success(t(\"Forms.deleteCompany.success\") as string);\n      toggleEditModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.deleteCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const role = company?.owner?.email === myEmail ? \"owner\" : \"member\";\n  const members = company.members;\n\n  const roleColors: Record<\"owner\" | \"member\", string> = {\n    owner: theme.roleOwner,\n    member: theme.roleMember,\n  };\n\n  return (\n    <>\n      <Card>\n        <UpperBlock>\n          <Logo src={company.logo} alt=\"Logo\" />\n\n          <Name>{company.name}</Name>\n        </UpperBlock>\n\n        <BottomBlock>\n          <RoleBadge color={roleColors[role]}>\n            {t(`Common.roles.${role}`)}\n          </RoleBadge>\n\n          <MembersAvatarGroup members={[...members].reverse()} />\n        </BottomBlock>\n\n        <Actions>\n          <IconButton onClick={toggleMembersModal}>\n            <HiUserGroup size={20} />\n          </IconButton>\n          {role === \"owner\" && (\n            <IconButton onClick={toggleEditModal}>\n              <HiDotsVertical size={20} />\n            </IconButton>\n          )}\n        </Actions>\n      </Card>\n      {isEditModalOpen && role === \"owner\" && (\n        <EditCompanyModal\n          handlerCloseModal={() => toggleEditModal()}\n          deleteAction={handleDelete}\n          companyId={company._id}\n        />\n      )}\n      {isEditMembersModalOpen && (\n        <EditCompanyMembersModal\n          handlerCloseModal={() => toggleMembersModal()}\n          companyId={company._id}\n          withActions={role === \"owner\"}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CompanyCard;\n","import * as yup from \"yup\";\n\nexport const CreateCompanySchema = yup.object({\n  name: yup.string().required(\"Required\"),\n  logo: yup.mixed().nullable(),\n});\n","import { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { createCompany } from \"@/redux/companies/operations\";\nimport ImageUploadField from \"@/components/ImageUploadField\";\nimport {\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  ErrorText,\n} from \"@/styles/form/Form.styled\";\nimport { CreateCompanySchema } from \"./CreateCompanySchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n};\n\nconst initialValues = {\n  name: \"\",\n  logo: null as File | null,\n};\n\nconst CreateCompanyForm = ({ handlerCloseModal, formName }: Props) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n\n    if (values.logo) {\n      formData.append(\"logo\", values.logo);\n    }\n\n    try {\n      await dispatch(createCompany(formData));\n      toast.success(t(\"Forms.createCompany.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.createCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={CreateCompanySchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <StyledForm id={formName}>\n          <InputContainer>\n            <Label>{t(\"Forms.createCompany.name\")}</Label>\n            <Input\n              name=\"name\"\n              placeholder={t(\"Forms.createCompany.namePlaceholder\")}\n              $hasError={touched.name && !!errors.name}\n            />\n            {touched.name && errors.name && (\n              <ErrorText>{errors.name}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.createCompany.logo\")}</Label>\n            <ImageUploadField\n              name=\"logo\"\n              placeholderText={t(\"Forms.common.dragOrClick\")}\n              buttonText={t(\"Forms.common.chooseFile\")}\n            />\n          </InputContainer>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateCompanyForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport CreateCompanyForm from \"@/components/Forms/CreateCompanyForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n};\n\nconst CreateCompanyModal = ({ handlerCloseModal }: Props) => {\n  const { t } = useTranslation();\n  const formName = \"create-company-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.createCompany.title\")}\n        formName={formName}\n      >\n        <CreateCompanyForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default CreateCompanyModal;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n`;\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const UpperBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.buttonBackground};\n  color: ${({ theme }) => theme.buttonText};\n  padding: 12px 24px;\n  border-radius: 4px;\n  border: none;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttonBackgroundHover};\n  }\n`;\n\nexport const TopBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  > * {\n    min-height: 44px;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  flex: 1;\n  padding: 12px 16px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.primaryText};\n  transition: border-color ${({ theme }) => theme.animation};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary};\n    outline: none;\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 200px;\n  }\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 16px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: 1280px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppSelector } from \"@/hooks\";\nimport {\n  selectCompanies,\n  selectCompaniesLoading,\n} from \"@/redux/companies/selectors\";\nimport Loader from \"@/components/Loader\";\nimport CustomSelect from \"@/components/CustomSelect\";\nimport CompanyCard from \"@/components/CompanyCard\";\nimport CreateCompanyModal from \"@/components/Modals/CreateCompanyModal\";\nimport {\n  PageWrapper,\n  PageHeader,\n  Title,\n  TopBar,\n  SearchInput,\n  Grid,\n  CreateButton,\n  SelectWrapper,\n  UpperBlock,\n  LoaderContainer,\n} from \"./CompanyPage.styled\";\n\nconst CompanyPage = () => {\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"name\");\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const loading = useAppSelector(selectCompaniesLoading);\n  const companies = useAppSelector(selectCompanies);\n  const { t } = useTranslation();\n\n  const toggleCreateModal = () => {\n    setIsCreateModalOpen((prev) => !prev);\n  };\n\n  const filteredCompanies = useMemo(() => {\n    return companies\n      .filter((company) =>\n        company.name.toLowerCase().includes(search.toLowerCase())\n      )\n      .sort((a, b) => {\n        if (sort === \"name\") {\n          return a.name.localeCompare(b.name);\n        }\n        if (sort === \"date\") {\n          return (\n            new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n          );\n        }\n        return 0;\n      });\n  }, [companies, search, sort]);\n\n  return (\n    <PageWrapper>\n      {loading ? (\n        <LoaderContainer>\n          <Loader size=\"48px\" color=\"#3e85f3\" />\n        </LoaderContainer>\n      ) : (\n        <>\n          <UpperBlock>\n            <PageHeader>\n              <Title>{t(\"Companies.title\")}</Title>\n              <CreateButton onClick={() => toggleCreateModal()}>\n                {t(\"Companies.create\")}\n              </CreateButton>\n            </PageHeader>\n\n            <TopBar>\n              <SearchInput\n                type=\"text\"\n                placeholder={t(\"Companies.searchPlaceholder\")}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <SelectWrapper>\n                <CustomSelect\n                  options={[\"name\", \"date\"]}\n                  value={sort}\n                  onChange={setSort}\n                  getLabel={(r) => t(`Companies.filters.${r}`)}\n                  getKey={(r) => r}\n                />\n              </SelectWrapper>\n            </TopBar>\n          </UpperBlock>\n\n          <Grid>\n            {filteredCompanies.map((company) => (\n              <CompanyCard key={company._id} company={company} />\n            ))}\n          </Grid>\n          {isCreateModalOpen && (\n            <CreateCompanyModal handlerCloseModal={toggleCreateModal} />\n          )}\n        </>\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default CompanyPage;\n"],"names":["FileDropZone","styled","div","_ref","theme","borderColor","_ref2","backgroundSecondary","UploadText","_ref3","secondaryText","UploadButton","button","_ref4","background","_ref5","_ref6","_ref7","animation","_ref8","PreviewImage","img","HiddenFileInput","input","IconWrapper","name","placeholderText","buttonText","initialPreview","useTheme","fileInputRef","useRef","field","meta","helpers","useField","preview","setPreview","useState","useEffect","value","handleFileChange","file","setValue","URL","createObjectURL","_jsxs","_Fragment","children","_jsx","onClick","_fileInputRef$current","current","click","onDrop","e","preventDefault","dataTransfer","files","onDragOver","src","alt","FaRegBuilding","size","color","type","ref","accept","onChange","_e$target$files","target","touched","error","ErrorText","LoadContainer","EditCompanySchema","yup","required","logo","nullable","handlerCloseModal","formName","companyId","dispatch","useAppDispatch","t","useTranslation","company","setCompany","async","result","fetchCompanyById","unwrap","toast","Error","message","String","loadCompany","initialValues","Formik","enableReinitialize","validationSchema","onSubmit","formData","FormData","append","values","updateCompany","id","success","errors","StyledForm","InputContainer","Label","Input","placeholder","$hasError","ImageUploadField","Loader","deleteAction","Modal","ModalLayout","title","EditCompanyForm","EditCompanyMembersSchema","shape","members","of","email","min","withActions","map","m","companyMembersWithRoles","member","role","owner","updateMembers","_id","setFieldValue","UserList","users","updated","EditCompanyMembersForm","Card","UpperBlock","BottomBlock","Logo","Name","h3","primaryText","RoleBadge","span","roleTextColor","Actions","IconButton","primary","_company$owner","isEditModalOpen","setIsEditModalOpen","isEditMembersModalOpen","setIsEditMembersModalOpen","myEmail","useAppSelector","selectUserEmail","toggleEditModal","prev","toggleMembersModal","roleColors","roleOwner","roleMember","MembersAvatarGroup","reverse","HiUserGroup","HiDotsVertical","EditCompanyModal","deleteCompany","EditCompanyMembersModal","CreateCompanySchema","createCompany","CreateCompanyForm","PageWrapper","LoaderContainer","PageHeader","Title","h2","CreateButton","buttonBackground","buttonBackgroundHover","TopBar","SearchInput","_ref9","_ref10","_ref11","SelectWrapper","Grid","CompanyPage","search","setSearch","sort","setSort","isCreateModalOpen","setIsCreateModalOpen","loading","selectCompaniesLoading","companies","selectCompanies","toggleCreateModal","filteredCompanies","useMemo","filter","toLowerCase","includes","a","b","localeCompare","Date","createdAt","getTime","CustomSelect","options","getLabel","r","getKey","CompanyCard","CreateCompanyModal"],"sourceRoot":""}