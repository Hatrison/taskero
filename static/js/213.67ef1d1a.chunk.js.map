{"version":3,"file":"static/js/213.67ef1d1a.chunk.js","mappings":"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","sources":["components/ImageUploadField/ImageUploadField.styled.ts","components/ImageUploadField/ImageUploadField.tsx","components/Forms/EditCompanyForm/EditCompanyForm.styled.ts","components/Forms/EditCompanyForm/EditCompanySchema.ts","components/Forms/EditCompanyForm/EditCompanyForm.tsx","components/Modals/EditCompanyModal/EditCompanyModal.tsx","components/UserList/UserList.styled.ts","components/UserList/UserList.tsx","components/Forms/EditCompanyMembersForm/EditCompanyMembersForm.styled.ts","components/Forms/EditCompanyMembersForm/EditCompanyMembersSchema.ts","components/Forms/EditCompanyMembersForm/EditCompanyMembersForm.tsx","components/Modals/EditCompanyMembersModal/EditCompanyMembersModal.tsx","components/CompanyCard/CompanyCard.styled.ts","components/CompanyCard/CompanyCard.tsx","components/Forms/CreateCompanyForm/CreateCompanySchema.ts","components/Forms/CreateCompanyForm/CreateCompanyForm.tsx","components/Modals/CreateCompanyModal/CreateCompanyModal.tsx","pages/CompanyPage/CompanyPage.styled.ts","pages/CompanyPage/CompanyPage.tsx","components/MembersAvatarGroup/MembersAvatarGroup.styled.ts","components/MembersAvatarGroup/MembersAvatarGroup.tsx","styles/form/Form.styled.ts","images/svg/closeModal.svg","components/Modal/ModalLayout/ModalLayout.styled.ts","components/Modal/ModalLayout/ModalLayout.tsx","components/Modal/Modal.styled.ts","components/Modal/Modal.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FileDropZone = styled.div`\n  border: 2px dashed ${({ theme }) => theme.borderColor};\n  border-radius: 8px;\n  padding: 32px 24px;\n  text-align: center;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const UploadText = styled.div`\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const UploadButton = styled.button`\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.secondaryText};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n\nexport const PreviewImage = styled.img`\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 12px;\n  background-color: #ccc;\n`;\n\nexport const HiddenFileInput = styled.input`\n  display: none;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n`;\n","import { useRef, useState, useEffect } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { useField } from \"formik\";\nimport { FaRegBuilding } from \"react-icons/fa\";\nimport {\n  FileDropZone,\n  HiddenFileInput,\n  PreviewImage,\n  UploadText,\n  UploadButton,\n  IconWrapper,\n} from \"./ImageUploadField.styled\";\nimport { ErrorText } from \"@/styles/form/Form.styled\";\n\ninterface Props {\n  name: string;\n  placeholderText: string;\n  buttonText: string;\n  initialPreview?: string | null;\n}\n\nconst ImageUploadField = ({\n  name,\n  placeholderText,\n  buttonText,\n  initialPreview = null,\n}: Props) => {\n  const theme = useTheme();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [field, meta, helpers] = useField(name);\n  const [preview, setPreview] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!field.value && initialPreview) {\n      setPreview(initialPreview);\n    }\n  }, [initialPreview, field.value]);\n\n  const handleFileChange = (file: File) => {\n    helpers.setValue(file);\n    setPreview(URL.createObjectURL(file));\n  };\n\n  return (\n    <>\n      <FileDropZone\n        onClick={() => fileInputRef.current?.click()}\n        onDrop={(e) => {\n          e.preventDefault();\n          const file = e.dataTransfer.files[0];\n          if (file) {\n            handleFileChange(file);\n          }\n        }}\n        onDragOver={(e) => e.preventDefault()}\n      >\n        {preview ? (\n          <PreviewImage src={preview} alt=\"Preview\" />\n        ) : (\n          <>\n            <IconWrapper>\n              <FaRegBuilding size={48} color={theme.secondaryText} />\n            </IconWrapper>\n            <UploadText>{placeholderText}</UploadText>\n            <UploadButton type=\"button\">{buttonText}</UploadButton>\n          </>\n        )}\n      </FileDropZone>\n\n      <HiddenFileInput\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => {\n          const file = e.target.files?.[0];\n          if (file) {\n            handleFileChange(file);\n          }\n        }}\n      />\n\n      {meta.touched && meta.error && <ErrorText>{meta.error}</ErrorText>}\n    </>\n  );\n};\n\nexport default ImageUploadField;\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditCompanySchema = yup.object({\n  name: yup.string().required(\"Required\"),\n  logo: yup.mixed().nullable(),\n});\n","import { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { fetchCompanyById, updateCompany } from \"@/redux/companies/operations\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport Loader from \"@/components/Loader\";\nimport ImageUploadField from \"@/components/ImageUploadField\";\nimport {\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  ErrorText,\n} from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditCompanyForm.styled\";\nimport { EditCompanySchema } from \"./EditCompanySchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  companyId: string;\n};\n\nconst EditCompanyForm = ({ handlerCloseModal, formName, companyId }: Props) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const [company, setCompany] = useState<Company | null>(null);\n\n  useEffect(() => {\n    const loadCompany = async () => {\n      try {\n        const result = await dispatch(fetchCompanyById(companyId)).unwrap();\n        setCompany(result);\n      } catch (error) {\n        toast.error(\n          `${t(\"Forms.editCompany.failedToLoad\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n        handlerCloseModal();\n      }\n    };\n\n    loadCompany();\n  }, [dispatch, companyId, t, handlerCloseModal]);\n\n  const initialValues = {\n    name: company?.name || \"\",\n    logo: null as File | null,\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n\n    if (values.logo) {\n      formData.append(\"logo\", values.logo);\n    }\n\n    try {\n      await dispatch(updateCompany({ id: companyId, formData })).unwrap();\n      toast.success(t(\"Forms.editCompany.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return !company ? (\n    <LoadContainer>\n      <Loader size=\"60px\" color=\"#3e85f3\" />\n    </LoadContainer>\n  ) : (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditCompanySchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <StyledForm id={formName}>\n          <InputContainer>\n            <Label>{t(\"Forms.editCompany.name\")}</Label>\n            <Input\n              name=\"name\"\n              placeholder={t(\"Forms.editCompany.namePlaceholder\")}\n              $hasError={touched.name && !!errors.name}\n            />\n            {touched.name && errors.name && (\n              <ErrorText>{errors.name}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.editCompany.logo\")}</Label>\n            <ImageUploadField\n              name=\"logo\"\n              placeholderText={t(\"Forms.common.dragOrClick\")}\n              buttonText={t(\"Forms.common.chooseFile\")}\n              initialPreview={company.logo}\n            />\n          </InputContainer>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditCompanyForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditCompanyForm from \"@/components/Forms/EditCompanyForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  deleteAction: () => void;\n  companyId: string;\n};\n\nconst EditCompanyModal = ({\n  handlerCloseModal,\n  deleteAction,\n  companyId,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-company-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editCompany.title\")}\n        formName={formName}\n        deleteAction={deleteAction}\n      >\n        <EditCompanyForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          companyId={companyId}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditCompanyModal;\n","import styled from \"styled-components\";\n\nexport const MemberRow = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 12px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.cardBackground};\n`;\n\nexport const AvatarPlaceholder = styled.div`\n  width: 40px;\n  height: 40px;\n  border-radius: 8px;\n  background-color: #ccc;\n  flex-shrink: 0;\n`;\n\nexport const MemberInfo = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n\nexport const Name = styled.div`\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 16px;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const Email = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.secondaryText};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const RoleBadge = styled.span`\n  font-size: 12px;\n  background-color: ${({ theme }) => theme.tagBackground};\n  color: ${({ theme }) => theme.primary};\n  padding: 2px 6px;\n  border-radius: 4px;\n  white-space: nowrap;\n`;\n\nexport const RemoveButton = styled.button`\n  border: 1px solid ${({ theme }) => theme.danger};\n  color: ${({ theme }) => theme.danger};\n  background: none;\n  padding: 6px 12px;\n  border-radius: 6px;\n  font-size: 14px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) =>\n      theme.dangerHover || \"rgba(255, 0, 0, 0.05)\"};\n  }\n`;\n","import {\n  AvatarPlaceholder,\n  MemberRow,\n  MemberInfo,\n  Name,\n  Email,\n  RoleBadge,\n  RemoveButton,\n} from \"./UserList.styled\";\nimport { useTranslation } from \"react-i18next\";\n\nexport interface UserListItem {\n  id: string;\n  name: string;\n  email: string;\n  avatarUrl?: string;\n  role?: string;\n}\n\ninterface Props {\n  users: UserListItem[];\n  onRemove?: (email: string) => void;\n  canRemove?: (role: string) => boolean;\n  renderRole?: (role: string) => React.ReactNode;\n  renderActions?: (user: UserListItem) => React.ReactNode;\n}\n\nconst UserList = ({\n  users,\n  onRemove,\n  canRemove = () => true,\n  renderRole,\n  renderActions,\n}: Props) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {users.map((user) => (\n        <MemberRow key={user.id}>\n          {user.avatarUrl ? (\n            <img\n              src={user.avatarUrl}\n              alt={user.name}\n              width={40}\n              height={40}\n              style={{ borderRadius: 8 }}\n            />\n          ) : (\n            <AvatarPlaceholder />\n          )}\n          <MemberInfo>\n            <Name>\n              {user.name}\n              {user.role && (\n                <>\n                  {\" \"}\n                  <RoleBadge>\n                    {renderRole\n                      ? renderRole(user.role)\n                      : t(`Common.roles.${user.role}`)}\n                  </RoleBadge>\n                </>\n              )}\n            </Name>\n            <Email>{user.email}</Email>\n          </MemberInfo>\n\n          {renderActions?.(user)}\n\n          {!renderActions && onRemove && user.role && canRemove(user.role) && (\n            <RemoveButton type=\"button\" onClick={() => onRemove(user.email)}>\n              {t(\"Forms.common.remove\")}\n            </RemoveButton>\n          )}\n        </MemberRow>\n      ))}\n    </>\n  );\n};\n\nexport default UserList;\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditCompanyMembersSchema = yup.object().shape({\n  members: yup.array().of(yup.string().email()).min(1).required(),\n  newMembers: yup.string(),\n});\n","import { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectUserEmail } from \"@/redux/user/selectors\";\nimport { fetchCompanyById, updateMembers } from \"@/redux/companies/operations\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport Loader from \"@/components/Loader\";\nimport UserList from \"@/components/UserList\";\nimport {\n  StyledForm,\n  Textarea,\n  SubmitButtonModal,\n} from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditCompanyMembersForm.styled\";\nimport { EditCompanyMembersSchema } from \"./EditCompanyMembersSchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  companyId: string;\n};\n\nconst EditCompanyMembersForm = ({\n  handlerCloseModal,\n  formName,\n  companyId,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const myEmail = useAppSelector(selectUserEmail);\n  const [company, setCompany] = useState<Company | null>(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const loadCompany = async () => {\n      try {\n        const result = await dispatch(fetchCompanyById(companyId)).unwrap();\n        setCompany(result);\n      } catch (error) {\n        toast.error(\n          `${t(\"Forms.editCompanyMembers.failedToLoad\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n        handlerCloseModal();\n      }\n    };\n\n    loadCompany();\n  }, [dispatch, companyId, t, handlerCloseModal]);\n\n  if (!company) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  const initialValues = {\n    members: company.members.map((m) => m.email),\n    newMembers: \"\",\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    const uniqueEmails = new Set([\n      ...values.members,\n      ...values.newMembers\n        .split(\"\\n\")\n        .map((email) => email.trim())\n        .filter(Boolean),\n    ]);\n\n    try {\n      await dispatch(\n        updateMembers({ id: company._id, members: Array.from(uniqueEmails) })\n      ).unwrap();\n\n      toast.success(t(\"Forms.editCompanyMembers.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editCompanyMembers.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditCompanyMembersSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, setFieldValue }) => {\n        const handleAddMembers = () => {\n          const newEmails = values.newMembers\n            .split(\"\\n\")\n            .map((email) => email.trim())\n            .filter((email) => !!email && !values.members.includes(email));\n\n          if (newEmails.length === 0) return;\n\n          setFieldValue(\"members\", [...values.members, ...newEmails]);\n          setFieldValue(\"newMembers\", \"\");\n        };\n\n        return (\n          <StyledForm id={formName}>\n            <UserList\n              users={company.members.map((m) => {\n                const role = m.email === myEmail ? \"owner\" : \"member\";\n\n                return {\n                  id: m._id,\n                  name: m.name,\n                  email: m.email,\n                  role,\n                  avatarUrl: m.avatar,\n                };\n              })}\n              onRemove={(email) => {\n                const updated = values.members.filter((e) => e !== email);\n                setFieldValue(\"members\", updated);\n              }}\n              canRemove={(role) => role !== \"owner\"}\n            />\n\n            <label>{t(\"Forms.editCompanyMembers.add\")}</label>\n            <Textarea\n              name=\"newMembers\"\n              placeholder={t(\"Forms.editCompanyMembers.addPlaceholder\")}\n            />\n\n            <SubmitButtonModal type=\"button\" onClick={handleAddMembers}>\n              {t(\"Forms.editCompanyMembers.add\")}\n            </SubmitButtonModal>\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default EditCompanyMembersForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditCompanyMembersForm from \"@/components/Forms/EditCompanyMembersForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  companyId: string;\n};\n\nconst EditCompanyMembersModal = ({ handlerCloseModal, companyId }: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-company-members-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editCompanyMembers.title\")}\n        formName={formName}\n      >\n        <EditCompanyMembersForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          companyId={companyId}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditCompanyMembersModal;\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 16px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.background};\n`;\n\nexport const UpperBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const BottomBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Logo = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 12px;\n  background-color: #ddd;\n`;\n\nexport const Name = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const RoleBadge = styled.span<{ color: string }>`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.roleTextColor};\n  background-color: ${({ color }) => color};\n  border-radius: 4px;\n  padding: 2px 8px;\n  align-self: start;\n`;\n\nexport const Actions = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  display: flex;\n  gap: 8px;\n`;\n\nexport const IconButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.secondaryText};\n  cursor: pointer;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectUserEmail } from \"@/redux/user/selectors\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport { deleteCompany } from \"@/redux/companies/operations\";\nimport MembersAvatarGroup from \"@/components/MembersAvatarGroup\";\nimport EditCompanyModal from \"@/components/Modals/EditCompanyModal\";\nimport EditCompanyMembersModal from \"@/components/Modals/EditCompanyMembersModal\";\nimport {\n  Card,\n  UpperBlock,\n  BottomBlock,\n  Logo,\n  Name,\n  RoleBadge,\n  Actions,\n  IconButton,\n} from \"./CompanyCard.styled\";\nimport { HiDotsVertical, HiUserGroup } from \"react-icons/hi\";\n\ninterface Props {\n  company: Company;\n}\n\nconst CompanyCard = ({ company }: Props) => {\n  const dispatch = useAppDispatch();\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isEditMembersModalOpen, setIsEditMembersModalOpen] = useState(false);\n  const myEmail = useAppSelector(selectUserEmail);\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const toggleEditModal = () => {\n    setIsEditModalOpen((prev) => !prev);\n  };\n\n  const toggleMembersModal = () => {\n    setIsEditMembersModalOpen((prev) => !prev);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCompany(company._id));\n      toast.success(t(\"Forms.deleteCompany.success\") as string);\n      toggleEditModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.deleteCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const role = company?.owner?.email === myEmail ? \"owner\" : \"member\";\n  const members = company.members;\n\n  const roleColors: Record<\"owner\" | \"member\", string> = {\n    owner: theme.roleOwner,\n    member: theme.roleViewer,\n  };\n\n  return (\n    <>\n      <Card>\n        <UpperBlock>\n          <Logo src={company.logo} alt=\"Logo\" />\n\n          <Name>{company.name}</Name>\n        </UpperBlock>\n\n        <BottomBlock>\n          <RoleBadge color={roleColors[role]}>\n            {t(`Companies.role.${role}`)}\n          </RoleBadge>\n\n          <MembersAvatarGroup members={[...members].reverse()} />\n        </BottomBlock>\n\n        <Actions>\n          <IconButton onClick={() => toggleMembersModal()}>\n            <HiUserGroup size={20} />\n          </IconButton>\n          <IconButton onClick={() => toggleEditModal()}>\n            <HiDotsVertical size={20} />\n          </IconButton>\n        </Actions>\n      </Card>\n      {isEditModalOpen && (\n        <EditCompanyModal\n          handlerCloseModal={() => toggleEditModal()}\n          deleteAction={handleDelete}\n          companyId={company._id}\n        />\n      )}\n      {isEditMembersModalOpen && (\n        <EditCompanyMembersModal\n          handlerCloseModal={() => toggleMembersModal()}\n          companyId={company._id}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CompanyCard;\n","import * as yup from \"yup\";\n\nexport const CreateCompanySchema = yup.object({\n  name: yup.string().required(\"Required\"),\n  logo: yup.mixed().nullable(),\n});\n","import { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { createCompany } from \"@/redux/companies/operations\";\nimport ImageUploadField from \"@/components/ImageUploadField\";\nimport {\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  ErrorText,\n} from \"@/styles/form/Form.styled\";\nimport { CreateCompanySchema } from \"./CreateCompanySchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n};\n\nconst initialValues = {\n  name: \"\",\n  logo: null as File | null,\n};\n\nconst CreateCompanyForm = ({ handlerCloseModal, formName }: Props) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n\n    if (values.logo) {\n      formData.append(\"logo\", values.logo);\n    }\n\n    try {\n      await dispatch(createCompany(formData));\n      toast.success(t(\"Forms.createCompany.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.createCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={CreateCompanySchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <StyledForm id={formName}>\n          <InputContainer>\n            <Label>{t(\"Forms.createCompany.name\")}</Label>\n            <Input\n              name=\"name\"\n              placeholder={t(\"Forms.createCompany.namePlaceholder\")}\n              $hasError={touched.name && !!errors.name}\n            />\n            {touched.name && errors.name && (\n              <ErrorText>{errors.name}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.createCompany.logo\")}</Label>\n            <ImageUploadField\n              name=\"logo\"\n              placeholderText={t(\"Forms.common.dragOrClick\")}\n              buttonText={t(\"Forms.common.chooseFile\")}\n            />\n          </InputContainer>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateCompanyForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport CreateCompanyForm from \"@/components/Forms/CreateCompanyForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n};\n\nconst CreateCompanyModal = ({ handlerCloseModal }: Props) => {\n  const { t } = useTranslation();\n  const formName = \"create-company-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.createCompany.title\")}\n        formName={formName}\n      >\n        <CreateCompanyForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default CreateCompanyModal;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n`;\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const UpperBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.buttonBackground};\n  color: ${({ theme }) => theme.buttonText};\n  padding: 12px 24px;\n  border-radius: 4px;\n  border: none;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttonBackgroundHover};\n  }\n`;\n\nexport const TopBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  > * {\n    min-height: 44px;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  flex: 1;\n  padding: 12px 16px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.primaryText};\n  transition: border-color ${({ theme }) => theme.animation};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary};\n    outline: none;\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 200px;\n  }\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 16px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: 1280px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppSelector } from \"@/hooks\";\nimport {\n  selectCompanies,\n  selectCompaniesLoading,\n} from \"@/redux/companies/selectors\";\nimport Loader from \"@/components/Loader\";\nimport CustomSelect from \"@/components/CustomSelect\";\nimport CompanyCard from \"@/components/CompanyCard\";\nimport CreateCompanyModal from \"@/components/Modals/CreateCompanyModal\";\nimport {\n  PageWrapper,\n  PageHeader,\n  Title,\n  TopBar,\n  SearchInput,\n  Grid,\n  CreateButton,\n  SelectWrapper,\n  UpperBlock,\n  LoaderContainer,\n} from \"./CompanyPage.styled\";\n\nconst CompanyPage = () => {\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"name\");\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const loading = useAppSelector(selectCompaniesLoading);\n  const companies = useAppSelector(selectCompanies);\n  const { t } = useTranslation();\n\n  const toggleCreateModal = () => {\n    setIsCreateModalOpen((prev) => !prev);\n  };\n\n  const filteredCompanies = useMemo(() => {\n    return companies\n      .filter((company) =>\n        company.name.toLowerCase().includes(search.toLowerCase())\n      )\n      .sort((a, b) => {\n        if (sort === \"name\") {\n          return a.name.localeCompare(b.name);\n        }\n        if (sort === \"date\") {\n          return (\n            new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n          );\n        }\n        return 0;\n      });\n  }, [companies, search, sort]);\n\n  return (\n    <PageWrapper>\n      {loading ? (\n        <LoaderContainer>\n          <Loader size=\"48px\" color=\"#3e85f3\" />\n        </LoaderContainer>\n      ) : (\n        <>\n          <UpperBlock>\n            <PageHeader>\n              <Title>{t(\"Companies.title\")}</Title>\n              <CreateButton onClick={() => toggleCreateModal()}>\n                {t(\"Companies.create\")}\n              </CreateButton>\n            </PageHeader>\n\n            <TopBar>\n              <SearchInput\n                type=\"text\"\n                placeholder={t(\"Companies.searchPlaceholder\")}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <SelectWrapper>\n                <CustomSelect\n                  options={[\"name\", \"date\"]}\n                  value={sort}\n                  onChange={setSort}\n                  getLabel={(r) => t(`Companies.filters.${r}`)}\n                  getKey={(r) => r}\n                />\n              </SelectWrapper>\n            </TopBar>\n          </UpperBlock>\n\n          <Grid>\n            {filteredCompanies.map((company) => (\n              <CompanyCard key={company._id} company={company} />\n            ))}\n          </Grid>\n          {isCreateModalOpen && (\n            <CreateCompanyModal handlerCloseModal={toggleCreateModal} />\n          )}\n        </>\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default CompanyPage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: relative;\n  height: 28px;\n  width: fit-content;\n`;\n\nexport const MemberItem = styled.div<{ index: number }>`\n  position: absolute;\n  left: ${({ index }) => index * 20}px;\n  z-index: ${({ index }) => 10 - index};\n`;\n\nexport const ExtraAvatar = styled.div<{ size: number }>`\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.membersAvatarBackground};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  color: ${({ theme }) => theme.primaryText};\n  font-weight: 500;\n`;\n","import UserAvatar from \"@/components/UserAvatar\";\nimport { ExtraAvatar, MemberItem, Wrapper } from \"./MembersAvatarGroup.styled\";\n\ntype User = {\n  _id: string;\n  avatar?: string;\n};\n\ntype Props = {\n  members: User[];\n  maxVisible?: number;\n  size?: number;\n};\n\nconst MembersAvatarGroup = ({ members, maxVisible = 4, size = 28 }: Props) => {\n  const visibleMembers = members.slice(0, maxVisible);\n  const remaining = members.length - maxVisible;\n\n  return (\n    <Wrapper>\n      {visibleMembers.map((user, index) => (\n        <MemberItem key={user._id} index={index}>\n          <UserAvatar\n            src={\n              user.avatar?.startsWith(\"http\")\n                ? user.avatar\n                : `https:${user.avatar}`\n            }\n            size={size}\n          />\n        </MemberItem>\n      ))}\n      {remaining > 0 && (\n        <MemberItem index={maxVisible}>\n          <ExtraAvatar size={size}>+{remaining}</ExtraAvatar>\n        </MemberItem>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MembersAvatarGroup;\n","import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const Input = styled(Field)<{ $hasError?: boolean }>`\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid\n    ${({ $hasError, theme }) => ($hasError ? \"#e74a3b\" : theme.borderColor)};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.primaryText};\n  background-color: ${({ theme }) => theme.cardBackground};\n  outline: none;\n  transition: border-color ${({ theme }) => theme.animation};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const TogglePassword = styled.button`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  right: 12px;\n  top: 50%;\n  transform: translateY(-50%);\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const CheckboxRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 4px;\n`;\n\nexport const CustomCheckbox = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 14px;\n  color: ${({ theme }) => theme.primaryText};\n  cursor: pointer;\n  user-select: none;\n\n  input {\n    display: none;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n    width: 20px;\n    height: 20px;\n    border: 2px solid ${({ theme }) => theme.borderColor};\n    border-radius: 4px;\n    position: relative;\n    transition: all ${({ theme }) => theme.animation};\n  }\n\n  input:checked + span {\n    background-color: ${({ theme }) => theme.primary};\n    border-color: ${({ theme }) => theme.primary};\n  }\n\n  input:checked + span::after {\n    content: \"\";\n    position: absolute;\n    left: 6px;\n    top: 2px;\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 2px 2px 0;\n    transform: rotate(45deg);\n  }\n`;\n\nexport const ForgotLink = styled(Link)`\n  font-size: 14px;\n  color: ${({ theme }) => theme.primary};\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 12px;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.buttonText};\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const SubmitButtonModal = styled.button`\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.buttonText};\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const CancelButtonModal = styled.button`\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.secondaryText};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n\nexport const DeleteButtonModal = styled.button`\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.danger};\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation},\n    background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.dangerHover};\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: #e74a3b;\n  font-size: 12px;\n  margin-top: -4px;\n`;\n\nexport const TermsLink = styled(Link)`\n  font-size: 14px;\n  color: ${({ theme }) => theme.primary};\n  text-decoration: underline;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primaryHover};\n  }\n`;\n\nexport const Textarea = styled(Input).attrs({ as: \"textarea\" })`\n  resize: vertical;\n  min-height: 100px;\n`;\n","var _path, _path2;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCloseModal(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 6L6 18\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 6L18 18\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseModal);\nexport default __webpack_public_path__ + \"static/media/closeModal.0e0a9f31172f3e216fed15e7db621f0a.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport { ReactComponent as CloseIcon } from \"@/images/svg/closeModal.svg\";\n\nexport const LayoutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const ModalHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 16px;\n  position: relative;\n  padding: 24px;\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n`;\n\nexport const CloseButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none;\n  cursor: pointer;\n\n  &:hover svg {\n    stroke: ${({ theme }) => theme.modalCloseIconColorHover};\n    scale: 1.1;\n  }\n`;\n\nexport const MyCloseIcon = styled(CloseIcon)`\n  stroke: ${({ theme }) => theme.modalCloseIconColor};\n  width: 24px;\n  height: 24px;\n  transition: stroke ${({ theme }) => theme.animation},\n    scale ${({ theme }) => theme.animation};\n`;\n\nexport const ModalTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport const ChildrenWrapper = styled.div`\n  padding: 24px;\n`;\n\nexport const ModalActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n  width: 100%;\n  padding: 24px;\n  border-top: 1px solid ${({ theme }) => theme.borderColor};\n`;\n","import { useTranslation } from \"react-i18next\";\nimport {\n  CancelButtonModal,\n  SubmitButtonModal,\n  DeleteButtonModal,\n} from \"@/styles/form/Form.styled\";\nimport {\n  LayoutWrapper,\n  ModalHeader,\n  CloseButton,\n  ModalTitle,\n  ChildrenWrapper,\n  ModalActions,\n  MyCloseIcon,\n} from \"./ModalLayout.styled\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  title: string;\n  formName: string;\n  deleteAction?: () => void;\n  children: React.ReactNode;\n};\n\nconst ModalLayout = ({\n  handlerCloseModal,\n  title,\n  formName,\n  deleteAction,\n  children,\n}: Props) => {\n  const { t } = useTranslation();\n\n  return (\n    <LayoutWrapper>\n      <ModalHeader>\n        <ModalTitle>{title}</ModalTitle>\n        <CloseButton onClick={handlerCloseModal}>\n          <MyCloseIcon />\n        </CloseButton>\n      </ModalHeader>\n      <ChildrenWrapper>{children}</ChildrenWrapper>\n      <ModalActions>\n        {deleteAction && (\n          <DeleteButtonModal type=\"button\" onClick={() => deleteAction()}>\n            {t(\"Modals.common.delete\")}\n          </DeleteButtonModal>\n        )}\n        <div style={{ display: \"flex\", gap: \"8px\", marginLeft: \"auto\" }}>\n          <CancelButtonModal type=\"button\" onClick={handlerCloseModal}>\n            {t(\"Modals.common.cancel\")}\n          </CancelButtonModal>\n          <SubmitButtonModal type=\"submit\" form={formName}>\n            {t(\"Modals.common.save\")}\n          </SubmitButtonModal>\n        </div>\n      </ModalActions>\n    </LayoutWrapper>\n  );\n};\n\nexport default ModalLayout;\n","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  background-color: rgba(0, 0, 0, 0.6);\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 24px;\n  z-index: 999;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 800px;\n  min-width: 200px;\n  min-height: 200px;\n  background-color: ${({ theme }) => theme.background};\n  border: ${({ theme }) => theme.modalBorder};\n  border-radius: 8px;\n\n  box-shadow: ${({ theme }) => theme.shadow};\n`;\n","import { useCallback, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Backdrop, ModalContainer } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\ntype Props = {\n  children: React.ReactNode;\n  handlerCloseModal: () => void;\n};\n\nexport const Modal = ({ children, handlerCloseModal }: Props) => {\n  const onEsc = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.code === \"Escape\") handlerCloseModal();\n    },\n    [handlerCloseModal]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", onEsc);\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      window.removeEventListener(\"keydown\", onEsc);\n      document.body.style.overflow = \"auto\";\n    };\n  }, [onEsc]);\n\n  const handleBackdropClick = (event: React.MouseEvent) => {\n    if (event.currentTarget === event.target) handlerCloseModal();\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalContainer>{children}</ModalContainer>\n    </Backdrop>,\n    modalRoot as HTMLElement\n  );\n};\n\nexport default Modal;\n"],"names":["FileDropZone","styled","div","_ref","theme","borderColor","_ref2","backgroundSecondary","UploadText","_ref3","secondaryText","UploadButton","button","_ref4","background","_ref5","_ref6","_ref7","animation","_ref8","PreviewImage","img","HiddenFileInput","input","IconWrapper","name","placeholderText","buttonText","initialPreview","useTheme","fileInputRef","useRef","field","meta","helpers","useField","preview","setPreview","useState","useEffect","value","handleFileChange","file","setValue","URL","createObjectURL","_jsxs","_Fragment","children","_jsx","onClick","_fileInputRef$current","current","click","onDrop","e","preventDefault","dataTransfer","files","onDragOver","src","alt","FaRegBuilding","size","color","type","ref","accept","onChange","_e$target$files","target","touched","error","ErrorText","LoadContainer","EditCompanySchema","yup","required","logo","nullable","handlerCloseModal","formName","companyId","dispatch","useAppDispatch","t","useTranslation","company","setCompany","async","result","fetchCompanyById","unwrap","toast","Error","message","String","loadCompany","initialValues","Formik","enableReinitialize","validationSchema","onSubmit","formData","FormData","append","values","updateCompany","id","success","errors","StyledForm","InputContainer","Label","Input","placeholder","$hasError","ImageUploadField","Loader","deleteAction","Modal","ModalLayout","title","EditCompanyForm","MemberRow","cardBackground","AvatarPlaceholder","MemberInfo","Name","primaryText","Email","RoleBadge","span","tagBackground","primary","RemoveButton","danger","_ref9","dangerHover","users","onRemove","canRemove","renderRole","renderActions","map","user","avatarUrl","width","height","style","borderRadius","role","email","EditCompanyMembersSchema","shape","members","of","min","newMembers","myEmail","useAppSelector","selectUserEmail","m","uniqueEmails","Set","split","trim","filter","Boolean","updateMembers","_id","Array","from","setFieldValue","UserList","avatar","updated","Textarea","SubmitButtonModal","handleAddMembers","newEmails","includes","length","EditCompanyMembersForm","Card","UpperBlock","BottomBlock","Logo","h3","roleTextColor","Actions","IconButton","_company$owner","isEditModalOpen","setIsEditModalOpen","isEditMembersModalOpen","setIsEditMembersModalOpen","toggleEditModal","prev","toggleMembersModal","owner","roleColors","roleOwner","member","roleViewer","MembersAvatarGroup","reverse","HiUserGroup","HiDotsVertical","EditCompanyModal","deleteCompany","EditCompanyMembersModal","CreateCompanySchema","createCompany","CreateCompanyForm","PageWrapper","LoaderContainer","PageHeader","Title","h2","CreateButton","buttonBackground","buttonBackgroundHover","TopBar","SearchInput","_ref10","_ref11","SelectWrapper","Grid","CompanyPage","search","setSearch","sort","setSort","isCreateModalOpen","setIsCreateModalOpen","loading","selectCompaniesLoading","companies","selectCompanies","toggleCreateModal","filteredCompanies","useMemo","toLowerCase","a","b","localeCompare","Date","createdAt","getTime","CustomSelect","options","getLabel","r","getKey","CompanyCard","CreateCompanyModal","Wrapper","MemberItem","index","ExtraAvatar","membersAvatarBackground","maxVisible","visibleMembers","slice","remaining","_user$avatar","UserAvatar","startsWith","Form","label","Field","InputWrapper","TogglePassword","CheckboxRow","CustomCheckbox","_ref12","_ref13","ForgotLink","Link","_ref14","_ref15","_ref16","primaryHover","SubmitButton","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","CancelButtonModal","_ref25","_ref26","_ref27","_ref28","_ref29","DeleteButtonModal","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","p","TermsLink","_ref36","_ref37","_ref38","attrs","as","_path","_path2","_extends","Object","assign","bind","n","arguments","hasOwnProperty","call","apply","SvgCloseModal","svgRef","titleId","props","xmlns","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","LayoutWrapper","ModalHeader","CloseButton","modalCloseIconColorHover","MyCloseIcon","CloseIcon","modalCloseIconColor","ModalTitle","ChildrenWrapper","ModalActions","display","gap","marginLeft","form","Backdrop","ModalContainer","modalBorder","shadow","modalRoot","document","querySelector","onEsc","useCallback","event","code","window","addEventListener","body","overflow","removeEventListener","createPortal","currentTarget"],"sourceRoot":""}