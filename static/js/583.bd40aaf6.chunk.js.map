{"version":3,"file":"static/js/583.bd40aaf6.chunk.js","mappings":"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","sources":["redux/projects/selectors.ts","redux/columns/selectors.ts","redux/tasks/selectors.ts","components/Forms/EditProjectMembersForm/EditProjectMembersForm.styled.ts","components/Forms/EditProjectMembersForm/EditProjectMembersSchema.ts","components/Forms/EditProjectMembersForm/EditProjectMembersForm.tsx","components/Modals/EditProjectMembersModal/EditProjectMembersModal.tsx","components/Forms/EditProjectForm/EditProjectSchema.ts","components/Forms/EditProjectForm/EditProjectForm.styled.ts","components/Forms/EditProjectForm/EditProjectForm.tsx","components/Modals/EditProjectModal/EditProjectModal.tsx","pages/ProjectBoardPage/Header/Header.styled.ts","pages/ProjectBoardPage/Header/Header.tsx","pages/ProjectBoardPage/ProjectBoardPage.styled.ts","components/AssigneeList/AssigneeList.styled.ts","components/AssigneeList/AssigneeList.tsx","components/AttachmentList/BasicModal/BasicModal.styled.ts","components/AttachmentList/BasicModal/BasicModal.tsx","components/AttachmentList/ImageGallery/ImageGallery.styled.ts","components/AttachmentList/ImageGallery/ImageGallery.tsx","components/AttachmentList/AttachmentList.styled.ts","components/AttachmentList/AttachmentList.tsx","components/Forms/EditTaskForm/EditTaskSchema.ts","components/Forms/EditTaskForm/EditTaskForm.styled.ts","redux/comments/selectors.ts","components/CommentsSection/CommentsSchema.ts","components/CommentsSection/CommentsSection.styled.ts","components/CommentsSection/CommentsSection.tsx","components/Forms/EditTaskForm/EditTaskForm.tsx","components/Modals/EditTaskModal/EditTaskModal.tsx","components/TaskCard/TaskCard.styled.ts","components/TaskCard/TaskCard.tsx","components/Forms/CreateTaskForm/CreateTaskSchema.ts","components/Forms/CreateTaskForm/CreateTaskForm.tsx","components/Modals/CreateTaskModal/CreateTaskModal.tsx","components/ColumnCard/ColumnCard.styled.ts","components/ColumnCard/ColumnCard.tsx","pages/ProjectBoardPage/ProjectColumns/ProjectColumns.styled.ts","pages/ProjectBoardPage/ProjectColumns/ProjectColumns.tsx","pages/ProjectBoardPage/ProjectBoardPage.tsx"],"sourcesContent":["import { RootState } from \"@/redux/store\";\n\nexport const selectProjects = (state: RootState) => state.projects.items;\nexport const selectCurrentProject = (state: RootState) =>\n  state.projects.current;\nexport const selectProjectsLoading = (state: RootState) =>\n  state.projects.loading;\nexport const selectProjectsError = (state: RootState) => state.projects.error;\n","import { RootState } from \"@/redux/store\";\n\nexport const selectColumns = (state: RootState) => state.columns.items;\nexport const selectColumnsLoading = (state: RootState) => state.columns.loading;\nexport const selectColumnsError = (state: RootState) => state.columns.error;\n","import { RootState } from \"@/redux/store\";\n\nexport const selectTasks = (state: RootState) => state.tasks.items;\nexport const selectTasksLoading = (state: RootState) => state.tasks.loading;\nexport const selectTasksError = (state: RootState) => state.tasks.error;\n\nexport const selectTasksByColumn = (columnId: string) => (state: RootState) =>\n  state.tasks.items.filter((task) => task.column === columnId);\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditProjectMembersSchema = yup.object().shape({\n  members: yup\n    .array()\n    .of(\n      yup.object().shape({\n        email: yup.string().email().required(),\n        role: yup.string().oneOf([\"owner\", \"editor\", \"viewer\"]).required(),\n      })\n    )\n    .min(1)\n    .required(),\n});\n","import { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { updateProjectMembers } from \"@/redux/projects/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport Loader from \"@/components/Loader\";\nimport UserList from \"@/components/UserList\";\nimport { StyledForm } from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditProjectMembersForm.styled\";\nimport { EditProjectMembersSchema } from \"./EditProjectMembersSchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  projectId: string;\n  withActions?: boolean;\n};\n\nconst EditProjectMembersForm = ({\n  handlerCloseModal,\n  formName,\n  projectId,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const { t } = useTranslation();\n\n  if (!project) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  const initialValues = {\n    members: project.members.map((m) => ({\n      email: m.user.email,\n      role: m.role,\n    })),\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      await dispatch(\n        updateProjectMembers({ id: projectId, members: values.members })\n      ).unwrap();\n\n      toast.success(t(\"Forms.editProjectMembers.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editProjectMembers.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const companyMembersWithRoles = project.members.map((member) => ({\n    ...member.user,\n    role: member.role,\n  }));\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditProjectMembersSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, setFieldValue }) => {\n        return (\n          <StyledForm id={formName}>\n            <UserList\n              value={values.members}\n              users={companyMembersWithRoles}\n              onChange={(updated) => setFieldValue(\"members\", updated)}\n              withActions={withActions}\n              editableRoles\n              availableRoles={[\"owner\", \"editor\", \"viewer\"]}\n            />\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default EditProjectMembersForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditProjectMembersForm from \"@/components/Forms/EditProjectMembersForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  projectId: string;\n  withActions?: boolean;\n};\n\nconst EditProjectMembersModal = ({\n  handlerCloseModal,\n  projectId,\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-project-members-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editProjectMembers.title\")}\n        formName={formName}\n        withActions={withActions}\n      >\n        <EditProjectMembersForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          projectId={projectId}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditProjectMembersModal;\n","import * as yup from \"yup\";\n\nexport const EditProjectSchema = yup.object({\n  name: yup.string().min(2).max(100).required(\"Required\"),\n  description: yup.string().max(1000),\n  deadline: yup.date().nullable(),\n});\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { updateProject } from \"@/redux/projects/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport Loader from \"@/components/Loader\";\nimport { EditProjectSchema } from \"./EditProjectSchema\";\nimport { LoadContainer } from \"./EditProjectForm.styled\";\nimport {\n  ErrorText,\n  Input,\n  InputContainer,\n  Label,\n  StyledForm,\n  Textarea,\n} from \"@/styles/form/Form.styled\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  withActions?: boolean;\n};\n\nconst EditProjectForm = ({\n  handlerCloseModal,\n  formName,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const { t } = useTranslation();\n\n  if (!project) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      await dispatch(\n        updateProject({ id: project._id, payload: values })\n      ).unwrap();\n      toast.success(t(\"Forms.editProject.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editProject.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const initialValues = {\n    name: project.name || \"\",\n    description: project.description || \"\",\n    deadline: project.deadline ? project.deadline.slice(0, 10) : \"\",\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={EditProjectSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <StyledForm id={formName}>\n          <InputContainer>\n            <Label>{t(\"Forms.editProject.name\")}</Label>\n            <Input\n              name=\"name\"\n              placeholder={t(\"Forms.editProject.namePlaceholder\")}\n              $hasError={touched.name && !!errors.name}\n              disabled={!withActions}\n            />\n            {touched.name && errors.name && (\n              <ErrorText>{errors.name}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.editProject.description\")}</Label>\n            <Textarea\n              name=\"description\"\n              placeholder={t(\"Forms.editProject.descriptionPlaceholder\")}\n              value={values.description}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              $hasError={touched.description && !!errors.description}\n              disabled={!withActions}\n            />\n            {touched.description && errors.description && (\n              <ErrorText>{errors.description}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.editProject.deadline\")}</Label>\n            <Input name=\"deadline\" type=\"date\" disabled={!withActions} />\n          </InputContainer>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditProjectForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditProjectForm from \"@/components/Forms/EditProjectForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  deleteAction?: () => void;\n  withActions?: boolean;\n};\n\nconst EditProjectModal = ({\n  handlerCloseModal,\n  deleteAction = () => {},\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-project-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editProject.title\")}\n        formName={formName}\n        deleteAction={deleteAction}\n        withActions={withActions}\n      >\n        <EditProjectForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditProjectModal;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const HeaderWrapper = styled.header`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n  gap: 10px;\n  padding: 2px 16px 12px 16px;\n  background-color: ${({ theme }) => theme.background};\n  border-bottom: 1px solid ${({ theme }) => theme.borderColor};\n\n  & div {\n    align-self: center;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n    gap: 24px;\n    padding: 8px 16px;\n    height: 56px;\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  top: 21%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 20px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.primaryText};\n\n  max-width: 220px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  @media (min-width: 420px) {\n    max-width: 250px;\n  }\n\n  @media (min-width: 768px) {\n    top: 50%;\n  }\n\n  @media (min-width: 900px) {\n    max-width: 300px;\n  }\n\n  @media (min-width: 1280px) {\n    max-width: 50%;\n  }\n`;\n\nexport const BackButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  font-size: 16px;\n  background: none;\n  border: none;\n  font-weight: 500;\n  padding: 10px;\n  color: ${({ theme }) => theme.primaryText};\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  flex-shrink: 0;\n`;\n\nexport const ControlButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  color: ${({ theme }) => theme.primaryText};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n","import { useTranslation } from \"react-i18next\";\nimport LanguageSwitcher from \"@/components/LanguageSwitcher\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport UserAvatar from \"@/components/UserAvatar\";\nimport {\n  BackButton,\n  ControlButton,\n  Controls,\n  HeaderWrapper,\n  Title,\n} from \"./Header.styled\";\nimport { Link } from \"react-router-dom\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FiSettings } from \"react-icons/fi\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { useMediaQuery } from \"react-responsive\";\n\ntype Props = {\n  name: string;\n  avatar: string;\n  toggleMembersModal: () => void;\n  toggleSettingsModal: () => void;\n};\n\nconst Header = ({\n  name,\n  avatar,\n  toggleMembersModal,\n  toggleSettingsModal,\n}: Props) => {\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery({ query: \"(max-width: 768px)\" });\n\n  return (\n    <>\n      <HeaderWrapper>\n        <BackButton to={\"/\"}>\n          <FaChevronLeft size={16} /> {!isMobile && t(\"Project.backToProjects\")}\n        </BackButton>\n        <Title>{name}</Title>\n        <Controls>\n          <LanguageSwitcher />\n          <ThemeToggle />\n          <ControlButton type=\"button\" onClick={() => toggleMembersModal()}>\n            <HiUserGroup size={20} />\n          </ControlButton>\n          <ControlButton type=\"button\" onClick={() => toggleSettingsModal()}>\n            <FiSettings size={20} />\n          </ControlButton>\n          <Link to=\"/account\">\n            <UserAvatar src={avatar} size={36} />\n          </Link>\n        </Controls>\n      </HeaderWrapper>\n    </>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n`;\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.background};\n`;\n\nexport const BoardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.background};\n  overflow: hidden;\n`;\n","import styled from \"styled-components\";\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.primaryText};\n  background-color: ${({ theme }) => theme.cardBackground};\n  outline: none;\n  transition: border-color ${({ theme }) => theme.animation};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary};\n  }\n`;\n","import { useEffect, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { searchProjectMembers } from \"@/redux/projects/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport { UserBase } from \"@/redux/user/user.types\";\nimport UserList from \"@/components/UserList\";\nimport {\n  Wrapper,\n  Dropdown,\n  Option,\n} from \"@/components/CustomSelect/CustomSelect.styled\";\nimport { SearchInput } from \"./AssigneeList.styled\";\n\ntype Props = {\n  value: UserBase[];\n  onChange: (updated: UserBase[]) => void;\n  placeholder?: string;\n  withActions?: boolean;\n};\n\nconst AssigneeList = ({\n  value,\n  onChange,\n  placeholder = \"Search...\",\n  withActions = false,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<UserBase[]>([]);\n  const [open, setOpen] = useState(false);\n  const [position, setPosition] = useState({ top: 0, left: 0, width: 0 });\n  const inputRef = useRef<HTMLInputElement>(null);\n  const dropdownRef = useRef<HTMLUListElement>(null);\n  const timeoutRef = useRef<number>(0);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (!query.trim() || !project?._id) {\n      setResults([]);\n      return;\n    }\n\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n\n    timeoutRef.current = window.setTimeout(async () => {\n      try {\n        const data = await dispatch(\n          searchProjectMembers({ projectId: project._id, query })\n        ).unwrap();\n        setResults(data);\n        setOpen(true);\n      } catch (error) {\n        toast.error(\n          `${t(\"Forms.createTask.searchFailed\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n        setResults([]);\n      }\n    }, 400);\n\n    return () => clearTimeout(timeoutRef.current);\n  }, [query, project, dispatch, t]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      const rect = inputRef.current.getBoundingClientRect();\n      setPosition({\n        top: rect.bottom + 4,\n        left: rect.left,\n        width: rect.width,\n      });\n    }\n  }, [open, results]);\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      const target = e.target as Node;\n      if (\n        !inputRef.current?.contains(target) &&\n        !dropdownRef.current?.contains(target)\n      ) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  const handleSelect = (user: UserBase) => {\n    if (!value.find((u) => u._id === user._id)) {\n      onChange([...value, user]);\n    }\n    setQuery(\"\");\n    setResults([]);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {withActions && (\n        <Wrapper>\n          <SearchInput\n            ref={inputRef}\n            value={query}\n            placeholder={placeholder}\n            onChange={(e) => setQuery(e.target.value)}\n            onFocus={() => results.length && setOpen(true)}\n          />\n          {open &&\n            createPortal(\n              <Dropdown\n                ref={dropdownRef}\n                $top={position.top}\n                $left={position.left}\n                $width={position.width}\n              >\n                {results.map((user) => (\n                  <Option key={user._id} onClick={() => handleSelect(user)}>\n                    {user.name} ({user.email})\n                  </Option>\n                ))}\n              </Dropdown>,\n              document.body\n            )}\n        </Wrapper>\n      )}\n      <UserList\n        users={value}\n        withActions={withActions}\n        onChange={(updatedUsers) => onChange(updatedUsers as UserBase[])}\n        viewMode\n      />\n    </>\n  );\n};\n\nexport default AssigneeList;\n","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  max-width: 90vw;\n  max-height: 90vh;\n  overflow: hidden;\n`;\n","import React, { useCallback, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Backdrop, ModalContainer } from \"./BasicModal.styled\";\n\ntype Props = {\n  children: React.ReactNode;\n  onClose: () => void;\n};\n\nconst modalRoot = document.getElementById(\"modal-root\")!;\n\nconst BasicModal = ({ children, onClose }: Props) => {\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === \"Escape\") onClose();\n    },\n    [onClose]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    document.body.style.overflow = \"hidden\";\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      document.body.style.overflow = \"\";\n    };\n  }, [handleKeyDown]);\n\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) onClose();\n  };\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalContainer>{children}</ModalContainer>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default BasicModal;\n","import styled from \"styled-components\";\n\nexport const GalleryWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const GalleryImage = styled.img`\n  max-width: 90vw;\n  max-height: 90vh;\n  object-fit: contain;\n`;\n\nconst NavButton = styled.button`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.4);\n  border: none;\n  border-radius: 50%;\n  color: white;\n  font-size: 1.5rem;\n  width: 36px;\n  height: 36px;\n  cursor: pointer;\n  transition: background ${({ theme }) => theme.animation};\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.6);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const PrevButton = styled(NavButton)`\n  left: 16px;\n`;\n\nexport const NextButton = styled(NavButton)`\n  right: 16px;\n`;\n","import { useState, useCallback, useEffect } from \"react\";\nimport { AiOutlineLeft, AiOutlineRight } from \"react-icons/ai\";\nimport BasicModal from \"../BasicModal\";\nimport {\n  GalleryWrapper,\n  GalleryImage,\n  PrevButton,\n  NextButton,\n} from \"./ImageGallery.styled\";\n\ntype Props = {\n  images: string[];\n  startIndex: number;\n  onClose: () => void;\n};\n\nconst ImageGallery = ({ images, startIndex, onClose }: Props) => {\n  const [currentIndex, setCurrentIndex] = useState(startIndex);\n\n  const showPrev = useCallback(() => {\n    setCurrentIndex((i) => (i === 0 ? images.length - 1 : i - 1));\n  }, [images.length]);\n\n  const showNext = useCallback(() => {\n    setCurrentIndex((i) => (i === images.length - 1 ? 0 : i + 1));\n  }, [images.length]);\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === \"ArrowLeft\") showPrev();\n      if (e.key === \"ArrowRight\") showNext();\n    },\n    [showPrev, showNext]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [handleKeyDown]);\n\n  return (\n    <BasicModal onClose={onClose}>\n      <GalleryWrapper>\n        <PrevButton type=\"button\" onClick={showPrev}>\n          <AiOutlineLeft size={32} />\n        </PrevButton>\n        <GalleryImage\n          src={images[currentIndex]}\n          alt={`Image ${currentIndex + 1}`}\n        />\n        <NextButton type=\"button\" onClick={showNext}>\n          <AiOutlineRight size={32} />\n        </NextButton>\n      </GalleryWrapper>\n    </BasicModal>\n  );\n};\n\nexport default ImageGallery;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const List = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 8px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  width: 100%;\n  aspect-ratio: 1;\n  border-radius: 4px;\n  overflow: hidden;\n  cursor: pointer;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const RemoveButton = styled.button`\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.6);\n  border: none;\n  border-radius: 4px;\n  padding: 3px;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const HiddenInput = styled.input`\n  display: none;\n`;\n\nexport const FileInputZone = styled.label<{ isDragActive: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 24px;\n  background-color: ${({ theme, isDragActive }) =>\n    isDragActive ? theme.background : theme.backgroundSecondary};\n  color: ${({ theme }) => theme.secondaryText};\n  border: 2px dashed\n    ${({ theme, isDragActive }) =>\n      isDragActive ? theme.primary : theme.borderColor};\n  border-radius: 4px;\n  text-align: center;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation},\n    border-color ${({ theme }) => theme.animation};\n`;\n","import { useCallback, useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FiX } from \"react-icons/fi\";\nimport ImageGallery from \"./ImageGallery\";\nimport {\n  List,\n  RemoveButton,\n  Thumb,\n  HiddenInput,\n  FileInputZone,\n  Wrapper,\n} from \"./AttachmentList.styled\";\n\nexport interface Attachment {\n  url: string;\n  file?: File;\n}\n\ninterface Props {\n  files: Attachment[];\n  editable?: boolean;\n  onChange: (files: Attachment[]) => void;\n}\n\nconst AttachmentList = ({ files, editable, onChange }: Props) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [galleryIndex, setGalleryIndex] = useState<number | null>(null);\n  const [dragActive, setDragActive] = useState(false);\n  const { t } = useTranslation();\n\n  const handleFileInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) return;\n\n    const newAttachments: Attachment[] = Array.from(e.target.files).map(\n      (file) => ({\n        url: URL.createObjectURL(file),\n        file,\n      })\n    );\n\n    onChange([...files, ...newAttachments]);\n    e.target.value = \"\";\n  };\n\n  const handleRemove = (idx: number) => {\n    const updated = files.filter((_, i) => i !== idx);\n    onChange(updated);\n  };\n\n  const handleFiles = useCallback(\n    (fileList: FileList) => {\n      const newAttachments: Attachment[] = Array.from(fileList).map((file) => ({\n        url: URL.createObjectURL(file),\n        file,\n      }));\n      onChange([...files, ...newAttachments]);\n    },\n    [files, onChange]\n  );\n\n  const onDragEnter = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(true);\n  };\n  const onDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(false);\n  };\n  const onDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n  const onDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    setDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files.length) {\n      handleFiles(e.dataTransfer.files);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <List>\n        {files.map((att, idx) => (\n          <Thumb key={idx} onClick={() => setGalleryIndex(idx)}>\n            <img src={att.url} alt={`attachment-${idx}`} />\n            {editable && (\n              <RemoveButton\n                type=\"button\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleRemove(idx);\n                }}\n              >\n                <FiX size={20} />\n              </RemoveButton>\n            )}\n          </Thumb>\n        ))}\n      </List>\n      {editable && (\n        <>\n          <HiddenInput\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\"image/*\"\n            multiple\n            onChange={handleFileInput}\n          />\n          <FileInputZone\n            isDragActive={dragActive}\n            onClick={() => fileInputRef.current?.click()}\n            onDragEnter={onDragEnter}\n            onDragLeave={onDragLeave}\n            onDragOver={onDragOver}\n            onDrop={onDrop}\n          >\n            {t(\"Forms.editTask.dragOrClick\")}\n          </FileInputZone>\n        </>\n      )}\n\n      {galleryIndex !== null && (\n        <ImageGallery\n          images={files.map((f) => f.url)}\n          startIndex={galleryIndex}\n          onClose={() => setGalleryIndex(null)}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default AttachmentList;\n","import * as yup from \"yup\";\n\nexport const EditTaskSchema = yup.object({\n  title: yup\n    .string()\n    .min(2, \"Title must be at least 2 characters\")\n    .max(200, \"Title must be at most 200 characters\")\n    .required(),\n\n  description: yup\n    .string()\n    .max(2000, \"Description must be at most 2000 characters\")\n    .nullable(),\n\n  assignedTo: yup.array().of(yup.object().required()).optional(),\n\n  priority: yup\n    .string()\n    .oneOf([\"low\", \"medium\", \"high\", \"critical\"])\n    .optional(),\n\n  deadline: yup.date().nullable().optional(),\n\n  attachments: yup\n    .array()\n    .of(\n      yup.object({\n        url: yup.string().required(),\n        file: yup.mixed().notRequired(),\n      })\n    )\n    .optional(),\n});\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import { RootState } from \"@/redux/store\";\n\nexport const selectComments = (state: RootState) => state.comments.items;\nexport const selectCommentsLoading = (state: RootState) =>\n  state.comments.loading;\nexport const selectCommentsError = (state: RootState) => state.comments.error;\n\nexport const selectCommentsByTask = (taskId: string) => (state: RootState) =>\n  state.comments.items.filter((comment) => comment.task === taskId);\n","import * as yup from \"yup\";\n\nexport const CommentsSchema = yup.object().shape({\n  text: yup.string().trim().required(\"Cannot be empty\"),\n});\n","import styled from \"styled-components\";\nimport {\n  StyledForm as Form,\n  InputContainer as FormInputContainer,\n  SubmitButton as FormSubmitButton,\n} from \"@/styles/form/Form.styled\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 40px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 18px;\n`;\n\nexport const CommentList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const CommentItem = styled.li`\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n`;\n\nexport const Body = styled.div`\n  flex: 1;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n\n  button {\n  }\n`;\n\nexport const InfoBlock = styled.div``;\n\nexport const UserName = styled.span`\n  font-weight: 600;\n`;\n\nexport const TimeStamp = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const ControlBlock = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const ControlButton = styled.button`\n  background: none;\n  border: none;\n  padding: 4px;\n  margin-left: 4px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.secondaryText};\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n\n  &.delete:hover {\n    color: ${({ theme }) => theme.danger};\n  }\n`;\n\nexport const Text = styled.p`\n  word-break: break-word;\n`;\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const StyledForm = styled(Form)`\n  flex-direction: row;\n  width: 100%;\n`;\n\nexport const InputContainer = styled(FormInputContainer)`\n  flex: 1;\n`;\n\nexport const SubmitButton = styled(FormSubmitButton)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 70px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { FiEdit2, FiTrash2 } from \"react-icons/fi\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport {\n  fetchCommentsByTask,\n  createComment,\n  updateComment,\n  deleteComment,\n} from \"@/redux/comments/operations\";\nimport { selectCommentsByTask } from \"@/redux/comments/selectors\";\nimport { Comment } from \"@/redux/comments/comments.types\";\nimport Loader from \"@/components/Loader\";\nimport UserAvatar from \"@/components/UserAvatar\";\nimport { CommentsSchema } from \"./CommentsSchema\";\nimport { Input, ErrorText as FormError } from \"@/styles/form/Form.styled\";\nimport {\n  LoadContainer,\n  Body,\n  CommentItem,\n  CommentList,\n  Header,\n  Section,\n  Text,\n  Title,\n  StyledForm,\n  InputContainer,\n  SubmitButton,\n  FormWrapper,\n  InfoBlock,\n  UserName,\n  TimeStamp,\n  ControlBlock,\n  ControlButton,\n} from \"./CommentsSection.styled\";\n\ninterface Props {\n  taskId: string;\n}\n\ninterface FormValues {\n  text: string;\n}\n\nconst CommentsSection = ({ taskId }: Props) => {\n  const { t } = useTranslation();\n  const dispatch = useAppDispatch();\n  const [isInitializing, setIsInitializing] = useState(true);\n  const comments = useAppSelector((state) =>\n    selectCommentsByTask(taskId)(state)\n  );\n\n  const [editId, setEditId] = useState<string | null>(null);\n\n  useEffect(() => {\n    dispatch(fetchCommentsByTask(taskId))\n      .catch((error) => {\n        toast.error(\n          `${t(\"Forms.comments.fetchFailed\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n      })\n      .finally(() => {\n        setIsInitializing(false);\n      });\n  }, [dispatch, t, taskId]);\n\n  const toggleEdit = (id: string) => {\n    setEditId((prev) => (prev === id ? null : id));\n  };\n\n  const handleCreate = (\n    values: FormValues,\n    { resetForm, setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    dispatch(createComment({ task: taskId, text: values.text }))\n      .then(() => {\n        resetForm();\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  const handleUpdate = (\n    values: FormValues,\n    { setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    if (!editId) return;\n    dispatch(updateComment({ id: editId, text: values.text }))\n      .then(() => {\n        setEditId(null);\n      })\n      .finally(() => setSubmitting(false));\n  };\n\n  if (isInitializing) {\n    return (\n      <Section>\n        <Title>{t(\"Forms.comments.title\")}</Title>\n        <LoadContainer>\n          <Loader size=\"40px\" color=\"#3e85f3\" />\n        </LoadContainer>\n      </Section>\n    );\n  }\n\n  return (\n    <Section>\n      <Title>{t(\"Forms.comments.title\")}</Title>\n\n      <CommentList>\n        {comments.map((c: Comment) => (\n          <CommentItem key={c._id}>\n            <UserAvatar src={c.user.avatar || \"\"} alt={c.user.name} />\n            <Body>\n              <Header>\n                <InfoBlock>\n                  <UserName>{c.user.name}</UserName>{\" \"}\n                  <TimeStamp>\n                    {new Date(c.createdAt).toLocaleString()}\n                  </TimeStamp>\n                </InfoBlock>\n                <ControlBlock>\n                  <ControlButton onClick={() => toggleEdit(c._id)}>\n                    <FiEdit2 size={16} />\n                  </ControlButton>\n                  <ControlButton\n                    className=\"delete\"\n                    onClick={() => dispatch(deleteComment(c._id))}\n                  >\n                    <FiTrash2 size={16} />\n                  </ControlButton>\n                </ControlBlock>\n              </Header>\n\n              {editId === c._id ? (\n                <Formik\n                  initialValues={{ text: c.text }}\n                  validationSchema={CommentsSchema}\n                  onSubmit={handleUpdate}\n                >\n                  {({ errors, isSubmitting }) => (\n                    <FormWrapper>\n                      <StyledForm>\n                        <InputContainer>\n                          <Input\n                            name=\"text\"\n                            placeholder={t(\"Forms.comments.editPlaceholder\")}\n                            $hasError={Boolean(errors.text)}\n                            autoFocus\n                          />\n                        </InputContainer>\n                        <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                          {isSubmitting ? (\n                            <Loader size=\"16px\" color=\"#fff\" />\n                          ) : (\n                            t(\"Forms.comments.save\")\n                          )}\n                        </SubmitButton>\n                      </StyledForm>\n                      <FormError>{errors.text}</FormError>\n                    </FormWrapper>\n                  )}\n                </Formik>\n              ) : (\n                <Text>{c.text}</Text>\n              )}\n            </Body>\n          </CommentItem>\n        ))}\n      </CommentList>\n\n      <Formik\n        initialValues={{ text: \"\" }}\n        validationSchema={CommentsSchema}\n        onSubmit={handleCreate}\n      >\n        {({ errors, isSubmitting }) => (\n          <FormWrapper>\n            <StyledForm>\n              <InputContainer>\n                <Input\n                  name=\"text\"\n                  placeholder={t(\"Forms.comments.addPlaceholder\")}\n                  $hasError={Boolean(errors.text)}\n                />\n              </InputContainer>\n              <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting ? (\n                  <Loader size=\"16px\" color=\"#fff\" />\n                ) : (\n                  t(\"Forms.comments.post\")\n                )}\n              </SubmitButton>\n            </StyledForm>\n            <FormError>{errors.text}</FormError>\n          </FormWrapper>\n        )}\n      </Formik>\n    </Section>\n  );\n};\n\nexport default CommentsSection;\n","import { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { updateTask } from \"@/redux/tasks/operations\";\nimport CustomSelect from \"@/components/CustomSelect\";\nimport AssigneeList from \"@/components/AssigneeList\";\nimport AttachmentList, { Attachment } from \"@/components/AttachmentList\";\nimport Loader from \"@/components/Loader\";\nimport { EditTaskSchema } from \"./EditTaskSchema\";\nimport { Task, TaskPriority } from \"@/redux/tasks/tasks.types\";\nimport {\n  ErrorText,\n  Input,\n  InputContainer,\n  Label,\n  StyledForm,\n  Textarea,\n} from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditTaskForm.styled\";\nimport CommentsSection from \"@/components/CommentsSection\";\n\ntype Props = {\n  task: Task;\n  handlerCloseModal: () => void;\n  formName: string;\n  withActions?: boolean;\n};\n\nconst EditTaskForm = ({\n  task,\n  handlerCloseModal,\n  formName,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n\n  const initialValues = {\n    title: task.title || \"\",\n    description: task.description || \"\",\n    column: task.column || \"\",\n    priority: task.priority || \"medium\",\n    assignedTo: task.assignedTo || [],\n    deadline: task.deadline?.slice(0, 10) || \"\",\n    attachments: (task.attachments || []).map((url) => ({\n      url,\n    })) as Attachment[],\n  };\n\n  const priorityColors: Record<TaskPriority, string> = {\n    low: \"#4CAF50\",\n    medium: \"#FF9800\",\n    high: \"#F44336\",\n    critical: \"#9C27B0\",\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      const formData = new FormData();\n\n      formData.append(\"title\", values.title);\n      formData.append(\"description\", values.description || \"\");\n      formData.append(\"priority\", values.priority);\n      formData.append(\"deadline\", values.deadline || \"\");\n\n      const assignedToIds = values.assignedTo.map((user) => user._id);\n      formData.append(\"assignedTo\", JSON.stringify(assignedToIds));\n\n      const existingUrls = values.attachments\n        .filter((a) => !a.file)\n        .map((a) => a.url);\n      formData.append(\"attachments\", JSON.stringify(existingUrls));\n\n      values.attachments\n        .filter((a) => a.file)\n        .forEach((a) => {\n          formData.append(\"files\", a.file!);\n        });\n\n      await dispatch(updateTask({ id: task._id, formData })).unwrap();\n\n      toast.success(t(\"Forms.editTask.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editTask.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  if (!task) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={EditTaskSchema}\n        onSubmit={handleSubmit}\n        enableReinitialize\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          setFieldValue,\n        }) => (\n          <StyledForm id={formName}>\n            <InputContainer>\n              <Label>{t(\"Forms.editTask.title\")}</Label>\n              <Input\n                name=\"title\"\n                placeholder={t(\"Forms.editTask.titlePlaceholder\")}\n                $hasError={touched.title && !!errors.title}\n                disabled={!withActions}\n              />\n              {touched.title && errors.title && (\n                <ErrorText>{errors.title}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.editTask.description\")}</Label>\n              <Textarea\n                name=\"description\"\n                placeholder={t(\"Forms.editTask.descriptionPlaceholder\")}\n                value={values.description}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                $hasError={touched.description && !!errors.description}\n                disabled={!withActions}\n              />\n              {touched.description && errors.description && (\n                <ErrorText>{errors.description}</ErrorText>\n              )}\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.editTask.priority\")}</Label>\n              <CustomSelect\n                options={[\"low\", \"medium\", \"high\", \"critical\"]}\n                value={values.priority}\n                onChange={(val) => setFieldValue(\"priority\", val)}\n                getLabel={(p) => t(`Common.priority.${p}`)}\n                getKey={(p) => p}\n                getColor={(p) => priorityColors[p as TaskPriority]}\n                placeholder={t(\"Forms.editTask.priority\")}\n                disabled={!withActions}\n              />\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.editTask.assignedTo\")}</Label>\n              <AssigneeList\n                value={values.assignedTo}\n                onChange={(newValue) => setFieldValue(\"assignedTo\", newValue)}\n                placeholder={t(\"Forms.editTask.assigneePlaceholder\")}\n                withActions={withActions}\n              />\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.editTask.deadline\")}</Label>\n              <Input\n                name=\"deadline\"\n                type=\"date\"\n                value={values.deadline}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                disabled={!withActions}\n              />\n            </InputContainer>\n\n            <InputContainer>\n              <Label>{t(\"Forms.editTask.attachments\")}</Label>\n              <AttachmentList\n                files={values.attachments}\n                editable={withActions}\n                onChange={(updated) => setFieldValue(\"attachments\", updated)}\n              />\n            </InputContainer>\n          </StyledForm>\n        )}\n      </Formik>\n      <CommentsSection taskId={task._id} />\n    </>\n  );\n};\n\nexport default EditTaskForm;\n","import { useTranslation } from \"react-i18next\";\nimport { Task } from \"@/redux/tasks/tasks.types\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditTaskForm from \"@/components/Forms/EditTaskForm\";\n\ntype Props = {\n  task: Task;\n  handlerCloseModal: () => void;\n  deleteAction?: () => void;\n  withActions?: boolean;\n};\n\nconst EditTaskModal = ({\n  task,\n  handlerCloseModal,\n  deleteAction = () => {},\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-task-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editTask.title\")}\n        formName={formName}\n        deleteAction={deleteAction}\n        withActions={withActions}\n      >\n        <EditTaskForm\n          task={task}\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditTaskModal;\n","import styled from \"styled-components\";\nimport { DefaultTheme } from \"styled-components/dist/types\";\nimport { TaskPriority } from \"@/redux/tasks/tasks.types\";\n\nconst priorityBackgroundMap: Record<TaskPriority, keyof DefaultTheme> = {\n  low: \"priorityLow\",\n  medium: \"priorityMedium\",\n  high: \"priorityHigh\",\n  critical: \"priorityCritical\",\n};\n\nconst priorityTextMap: Record<TaskPriority, keyof DefaultTheme> = {\n  low: \"priorityTextLow\",\n  medium: \"priorityTextMedium\",\n  high: \"priorityTextHigh\",\n  critical: \"priorityTextCritical\",\n};\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 16px;\n  background-color: ${({ theme }) => theme.background};\n  border-radius: 4px;\n  box-shadow: ${({ theme }) => theme.shadow};\n`;\n\nexport const TopRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 12px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const PriorityTag = styled.span<{ $priority: TaskPriority }>`\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  white-space: nowrap;\n  color: ${({ theme, $priority }) => theme[priorityTextMap[$priority]]};\n  background-color: ${({ theme, $priority }) =>\n    theme[priorityBackgroundMap[$priority]]};\n`;\n\nexport const BottomRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const DateText = styled.span`\n  font-size: 14px;\n  color: ${({ theme }) => theme.secondaryText};\n`;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { deleteTask } from \"@/redux/tasks/operations\";\nimport { Task } from \"@/redux/tasks/tasks.types\";\nimport MembersAvatarGroup from \"@/components/MembersAvatarGroup\";\nimport EditTaskModal from \"@/components/Modals/EditTaskModal\";\nimport {\n  BottomRow,\n  Card,\n  DateText,\n  PriorityTag,\n  Title,\n  TopRow,\n} from \"./TaskCard.styled\";\n\ntype Props = {\n  task: Task;\n  withActions?: boolean;\n};\n\nconst TaskCard = ({ task, withActions = false }: Props) => {\n  const { title, deadline, priority, assignedTo } = task;\n  const dispatch = useAppDispatch();\n  const [isEditTaskModalOpen, setIsEditTaskModalOpen] = useState(false);\n  const { t } = useTranslation();\n\n  const handleDeleteTask = async () => {\n    if (!task?._id) return;\n\n    try {\n      await dispatch(deleteTask(task._id));\n      toast.success(t(\"Forms.deleteTask.success\") as string);\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.deleteTask.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const toggleEditTaskModal = () => {\n    setIsEditTaskModalOpen((prev) => !prev);\n  };\n\n  const formatPriority = (p: string) => p.charAt(0).toUpperCase() + p.slice(1);\n\n  return (\n    <>\n      <Card onClick={toggleEditTaskModal}>\n        <TopRow>\n          <Title>{title}</Title>\n          <PriorityTag $priority={priority}>\n            {formatPriority(priority)}\n          </PriorityTag>\n        </TopRow>\n\n        <BottomRow>\n          <MembersAvatarGroup members={assignedTo} />\n          {deadline && <DateText>{deadline?.slice(0, 10)}</DateText>}\n        </BottomRow>\n      </Card>\n\n      {isEditTaskModalOpen && (\n        <EditTaskModal\n          task={task}\n          handlerCloseModal={toggleEditTaskModal}\n          deleteAction={handleDeleteTask}\n          withActions={withActions}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskCard;\n","import * as yup from \"yup\";\n\nexport const createTaskSchema = yup.object({\n  title: yup.string().min(2).max(200).required(),\n  description: yup.string().max(2000).nullable(),\n  assignedTo: yup.array().of(yup.string()),\n  priority: yup\n    .mixed<\"low\" | \"medium\" | \"high\" | \"critical\">()\n    .oneOf([\"low\", \"medium\", \"high\", \"critical\"])\n    .default(\"medium\"),\n  deadline: yup.date().nullable(),\n});\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useTheme } from \"styled-components\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { createTask } from \"@/redux/tasks/operations\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport { UserBase } from \"@/redux/user/user.types\";\nimport { TaskPriority } from \"@/redux/tasks/tasks.types\";\nimport CustomSelect from \"@/components/CustomSelect\";\nimport AssigneeList from \"@/components/AssigneeList\";\nimport { createTaskSchema } from \"./CreateTaskSchema\";\nimport {\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  ErrorText,\n  Textarea,\n} from \"@/styles/form/Form.styled\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  columnId?: string;\n};\n\nconst initialValues = {\n  title: \"\",\n  description: \"\",\n  deadline: \"\",\n  priority: \"medium\",\n};\n\nconst CreateTaskForm = ({ handlerCloseModal, formName, columnId }: Props) => {\n  const dispatch = useAppDispatch();\n  const project = useAppSelector(selectCurrentProject);\n  const [assignees, setAssignees] = useState<UserBase[]>([]);\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const priorityColors: Record<TaskPriority, string> = {\n    low: theme.priorityTextLow,\n    medium: theme.priorityTextMedium,\n    high: theme.priorityTextHigh,\n    critical: theme.priorityTextCritical,\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    if (!project?._id || !columnId) {\n      toast.error(t(\"Forms.createTask.failed\") as string);\n      return;\n    }\n\n    const payload = {\n      ...values,\n      project: project._id,\n      column: columnId,\n      assignedTo: assignees.map((u) => u._id),\n      priority: values.priority as TaskPriority,\n    };\n\n    try {\n      await dispatch(createTask(payload)).unwrap();\n      toast.success(t(\"Forms.createTask.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.createTask.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={createTaskSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <StyledForm id={formName}>\n          <InputContainer>\n            <Label>{t(\"Forms.createTask.title\")}</Label>\n            <Input\n              name=\"title\"\n              placeholder={t(\"Forms.createTask.titlePlaceholder\")}\n              $hasError={touched.title && !!errors.title}\n            />\n            {touched.title && errors.title && (\n              <ErrorText>{errors.title}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.createTask.description\")}</Label>\n            <Textarea\n              name=\"description\"\n              placeholder={t(\"Forms.createTask.descriptionPlaceholder\")}\n              value={values.description}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              $hasError={touched.description && !!errors.description}\n            />\n            {touched.description && errors.description && (\n              <ErrorText>{errors.description}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.createTask.deadline\")}</Label>\n            <Input name=\"deadline\" type=\"date\" />\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.createTask.priority\")}</Label>\n            <CustomSelect\n              options={[\"low\", \"medium\", \"high\", \"critical\"]}\n              value={values.priority as TaskPriority}\n              onChange={(value) => {\n                handleChange({\n                  target: { name: \"priority\", value },\n                });\n              }}\n              getLabel={(p) => t(`Common.priority.${p}`)}\n              getKey={(p) => p}\n              getColor={(p) => priorityColors[p as TaskPriority]}\n              placeholder={t(\"Forms.createTask.priority\")}\n            />\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.createTask.assignedTo\")}</Label>\n            <AssigneeList\n              value={assignees}\n              onChange={setAssignees}\n              placeholder={t(\"Forms.createTask.assigneePlaceholder\")}\n              withActions\n            />\n          </InputContainer>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateTaskForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport CreateTaskForm from \"@/components/Forms/CreateTaskForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  columnId?: string;\n};\n\nconst CreateTaskModal = ({ handlerCloseModal, columnId }: Props) => {\n  const { t } = useTranslation();\n  const formName = \"create-task-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.createTask.title\")}\n        formName={formName}\n      >\n        <CreateTaskForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          columnId={columnId}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default CreateTaskModal;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div<{ isEmpty?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 290px;\n  height: 100%;\n  padding: ${({ isEmpty }) => (isEmpty ? \"0\" : \"16px\")};\n  color: ${({ theme }) => theme.secondaryText};\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  border: 2px dashed ${({ theme }) => theme.borderColor};\n  border-radius: 8px;\n  cursor: default;\n`;\n\nexport const Placeholder = styled.div<{ loading?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 290px;\n  height: 100%;\n  padding: 16px;\n  font-size: 16px;\n  text-align: center;\n  cursor: ${({ loading }) => (loading ? \"default\" : \"pointer\")};\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  background-color: transparent;\n  color: ${({ theme }) => theme.secondaryText};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.primaryText};\n  word-break: break-word;\n  overflow-wrap: break-word;\n`;\n\nexport const TitleInput = styled.input`\n  font-size: 16px;\n  font-weight: 600;\n  width: 100%;\n  background-color: transparent;\n  color: ${({ theme }) => theme.primaryText};\n  border: none;\n  padding: 0px;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const InlineControls = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const ControlButton = styled.button<{ hoverColor?: string }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n  color: ${({ theme }) => theme.primaryText};\n  border: none;\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ hoverColor, theme }) => hoverColor || theme.primary};\n  }\n`;\n\nexport const Tasks = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  gap: 8px;\n  overflow-y: auto;\n  min-height: 100px;\n`;\n","import { useState, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useTheme } from \"styled-components\";\nimport { FiEdit3, FiTrash2, FiCheck, FiX, FiPlus } from \"react-icons/fi\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { deleteColumn, updateColumn } from \"@/redux/columns/operations\";\nimport { ColumnWithTasks } from \"@/redux/columns/columns.types\";\nimport TaskCard from \"@/components/TaskCard\";\nimport CreateTaskModal from \"@/components/Modals/CreateTaskModal\";\nimport Loader from \"@/components/Loader\";\nimport {\n  Draggable,\n  Droppable,\n  DraggableProvided,\n  DroppableProvided,\n} from \"@hello-pangea/dnd\";\nimport {\n  Wrapper,\n  Header,\n  Title,\n  TitleInput,\n  Tasks,\n  Placeholder,\n  InlineControls,\n  ControlButton,\n  AddButton,\n} from \"./ColumnCard.styled\";\n\ntype Props = {\n  column?: ColumnWithTasks;\n  isEmpty?: boolean;\n  withActions?: boolean;\n  isEditable?: boolean;\n  onClickEmpty?: () => void;\n};\n\nconst priorityMap: Record<string, number> = {\n  critical: 3,\n  high: 2,\n  medium: 1,\n  low: 0,\n};\n\nconst ColumnCard = ({\n  column,\n  isEmpty,\n  withActions,\n  isEditable = false,\n  onClickEmpty,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(column?.name || \"\");\n  const [isCreateTaskModalOpen, setIsCreateTaskModalOpen] = useState(false);\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const sortedTasks = useMemo(() => {\n    if (!column?.tasks) return [];\n    return [...column.tasks].sort((a, b) => {\n      const pa = priorityMap[a.priority] ?? 0;\n      const pb = priorityMap[b.priority] ?? 0;\n      return pb - pa;\n    });\n  }, [column?.tasks]);\n\n  if (isEmpty) {\n    if (!withActions) return null;\n\n    return (\n      <Wrapper isEmpty onClick={onClickEmpty}>\n        <Placeholder>\n          <AddButton>\n            <FiPlus size={16} /> {t(\"Project.columns.addColumn\")}\n          </AddButton>\n        </Placeholder>\n      </Wrapper>\n    );\n  }\n\n  if (!column) {\n    return (\n      <Wrapper isEmpty>\n        <Placeholder loading>\n          <Loader size=\"60px\" color=\"#3e85f3\" />\n        </Placeholder>\n      </Wrapper>\n    );\n  }\n\n  const handleSave = () => {\n    if (!column?._id) return;\n\n    try {\n      dispatch(\n        updateColumn({\n          id: column._id,\n          data: { name: title },\n        })\n      );\n    } catch (error) {\n      toast.error(\n        `${t(\"Project.columns.updateFailed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    } finally {\n      setIsEditing(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setTitle(column?.name || \"\");\n    setIsEditing(false);\n  };\n\n  const handleDelete = () => {\n    if (!column?._id) return;\n\n    try {\n      dispatch(deleteColumn(column._id));\n    } catch (error) {\n      toast.error(\n        `${t(\"Project.columns.deleteFailed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const toggleCreateTaskModal = () => {\n    setIsCreateTaskModalOpen((prev) => !prev);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Header>\n          {isEditing ? (\n            <>\n              <TitleInput\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                autoFocus\n              />\n              <InlineControls>\n                <ControlButton\n                  type=\"button\"\n                  hoverColor={theme.success}\n                  onClick={() => handleSave()}\n                >\n                  <FiCheck size={20} />\n                </ControlButton>\n                <ControlButton\n                  type=\"button\"\n                  hoverColor={theme.primaryHover}\n                  onClick={() => handleCancel()}\n                >\n                  <FiX size={20} />\n                </ControlButton>\n                <ControlButton\n                  type=\"button\"\n                  hoverColor={theme.danger}\n                  onClick={() => handleDelete()}\n                >\n                  <FiTrash2 size={20} />\n                </ControlButton>\n              </InlineControls>\n            </>\n          ) : (\n            <>\n              <Title>{column?.name}</Title>\n              {withActions && (\n                <InlineControls>\n                  {isEditable && (\n                    <ControlButton\n                      type=\"button\"\n                      onClick={() => setIsEditing(true)}\n                    >\n                      <FiEdit3 size={20} />\n                    </ControlButton>\n                  )}\n                  <ControlButton\n                    type=\"button\"\n                    onClick={() => toggleCreateTaskModal()}\n                  >\n                    <FiPlus size={20} />\n                  </ControlButton>\n                </InlineControls>\n              )}\n            </>\n          )}\n        </Header>\n\n        {withActions ? (\n          <Droppable droppableId={column._id} type=\"task\">\n            {(provided: DroppableProvided) => (\n              <Tasks ref={provided.innerRef} {...provided.droppableProps}>\n                {sortedTasks.map((task, index) => (\n                  <Draggable\n                    draggableId={task._id}\n                    index={index}\n                    key={task._id}\n                  >\n                    {(provided: DraggableProvided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <TaskCard task={task} withActions={withActions} />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </Tasks>\n            )}\n          </Droppable>\n        ) : (\n          <Tasks>\n            {sortedTasks.map((task) => (\n              <TaskCard key={task._id} task={task} withActions={withActions} />\n            ))}\n          </Tasks>\n        )}\n      </Wrapper>\n\n      {isCreateTaskModalOpen && (\n        <CreateTaskModal\n          handlerCloseModal={toggleCreateTaskModal}\n          columnId={column?._id}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ColumnCard;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  gap: 24px;\n  width: 100%;\n  height: 100%;\n  padding: 24px;\n  overflow-x: auto;\n`;\n\nexport const EditOrderButton = styled.button<{ topOffset: number }>`\n  position: fixed;\n  top: ${({ topOffset }) => `${topOffset}px`};\n  right: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  color: ${({ theme }) => theme.primaryText};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 8px;\n  padding: 8px;\n  cursor: pointer;\n  transition: color ${({ theme }) => theme.animation},\n    border-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n    border-color: ${({ theme }) => theme.primary};\n  }\n\n  &[data-active=\"true\"] {\n    color: ${({ theme }) => theme.invertedText};\n    background-color: ${({ theme }) => theme.primary};\n    border-color: ${({ theme }) => theme.primary};\n  }\n`;\n\nexport const ColumnsRow = styled.div`\n  display: flex;\n  align-items: stretch;\n  height: 100%;\n  gap: 24px;\n`;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectCurrentProject } from \"@/redux/projects/selectors\";\nimport { createColumn, reorderColumns } from \"@/redux/columns/operations\";\nimport { ColumnWithTasks } from \"@/redux/columns/columns.types\";\nimport { updateTask } from \"@/redux/tasks/operations\";\nimport ColumnCard from \"@/components/ColumnCard\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"@hello-pangea/dnd\";\nimport { TbEdit } from \"react-icons/tb\";\nimport { Wrapper, ColumnsRow, EditOrderButton } from \"./ProjectColumns.styled\";\n\ntype Props = {\n  columns: ColumnWithTasks[];\n  topOffset?: number;\n  withActions?: boolean;\n  onEditOrder?: () => void;\n};\n\nconst ProjectColumns = ({\n  columns,\n  topOffset = 24,\n  withActions = false,\n  onEditOrder,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const projectId = useAppSelector(selectCurrentProject)?._id;\n  const [isEditMode, setIsEditMode] = useState(false);\n  const { t } = useTranslation();\n\n  const toggleEditMode = () => setIsEditMode((prev) => !prev);\n\n  const getSortedColumns = () => {\n    return [...columns].sort((a, b) => a.order - b.order);\n  };\n\n  const handleAddColumn = () => {\n    if (!projectId) return;\n\n    try {\n      const newColumn = {\n        name: t(\"Project.columns.newColumn\") as string,\n        order: columns.length,\n        project: projectId,\n      };\n\n      dispatch(createColumn(newColumn));\n    } catch (error) {\n      toast.error(\n        `${t(\"Project.columns.addFailed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const handleDragEnd = async (result: DropResult) => {\n    const { source, destination, draggableId, type } = result;\n\n    if (!destination) return;\n\n    if (type === \"column\") {\n      if (!isEditMode || source.index === destination.index) return;\n\n      const sortedColumns = getSortedColumns();\n      const reordered = [...sortedColumns];\n      const [moved] = reordered.splice(source.index, 1);\n      reordered.splice(destination.index, 0, moved);\n\n      const updatedColumns = reordered.map((col, index) => ({\n        id: col._id,\n        order: index,\n      }));\n\n      dispatch(reorderColumns({ columns: updatedColumns }))\n        .unwrap()\n        .catch((err) => {\n          toast.error(`${t(\"Project.columns.reorderFailed\")}: ${err.message}`);\n        });\n\n      return;\n    }\n\n    if (type === \"task\") {\n      if (\n        source.droppableId === destination.droppableId &&\n        source.index === destination.index\n      )\n        return;\n\n      const sourceColumn = columns.find(\n        (col) => col._id === source.droppableId\n      );\n      const movedTask = sourceColumn?.tasks.find((t) => t._id === draggableId);\n\n      if (!movedTask) return;\n\n      const formData = new FormData();\n      formData.append(\"column\", destination.droppableId);\n\n      dispatch(updateTask({ id: result.draggableId, formData }))\n        .unwrap()\n        .catch((err) => {\n          toast.error(`${t(\"Project.columns.moveTaskFailed\")}: ${err.message}`);\n        });\n\n      return;\n    }\n  };\n\n  return (\n    <Wrapper>\n      {withActions && (\n        <EditOrderButton\n          type=\"button\"\n          topOffset={topOffset + 24}\n          data-active={isEditMode}\n          onClick={() => {\n            toggleEditMode();\n            onEditOrder?.();\n          }}\n        >\n          <TbEdit size={20} />\n        </EditOrderButton>\n      )}\n\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {isEditMode && withActions ? (\n          <Droppable droppableId=\"columns\" direction=\"horizontal\" type=\"column\">\n            {(provided) => (\n              <ColumnsRow ref={provided.innerRef} {...provided.droppableProps}>\n                {getSortedColumns().map((column, index) => (\n                  <Draggable\n                    draggableId={column._id}\n                    index={index}\n                    key={column._id}\n                  >\n                    {(provided) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <ColumnCard\n                          column={column}\n                          withActions={withActions}\n                          isEditable={isEditMode}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </ColumnsRow>\n            )}\n          </Droppable>\n        ) : (\n          <ColumnsRow>\n            {getSortedColumns().map((column) => (\n              <ColumnCard\n                key={column._id}\n                column={column}\n                withActions={withActions}\n              />\n            ))}\n          </ColumnsRow>\n        )}\n\n        {isEditMode && (\n          <ColumnCard\n            isEmpty\n            withActions={withActions}\n            onClickEmpty={handleAddColumn}\n          />\n        )}\n      </DragDropContext>\n    </Wrapper>\n  );\n};\n\nexport default ProjectColumns;\n","import { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectUser } from \"@/redux/user/selectors\";\nimport { deleteProject, fetchProjectById } from \"@/redux/projects/operations\";\nimport {\n  selectCurrentProject,\n  selectProjectsLoading,\n} from \"@/redux/projects/selectors\";\nimport { selectColumns } from \"@/redux/columns/selectors\";\nimport { selectTasks } from \"@/redux/tasks/selectors\";\nimport Loader from \"@/components/Loader\";\nimport EditProjectMembersModal from \"@/components/Modals/EditProjectMembersModal/EditProjectMembersModal\";\nimport EditProjecModal from \"@/components/Modals/EditProjectModal\";\nimport Header from \"./Header\";\nimport {\n  BoardContainer,\n  LoadContainer,\n  PageWrapper,\n} from \"./ProjectBoardPage.styled\";\nimport ProjectColumns from \"./ProjectColumns\";\n\nconst ProjectBoardPage = () => {\n  const { id: projectId } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const currentUser = useAppSelector(selectUser);\n  const project = useAppSelector(selectCurrentProject);\n  const isLoading = useAppSelector(selectProjectsLoading);\n  const columns = useAppSelector(selectColumns);\n  const tasks = useAppSelector(selectTasks);\n  const headerRef = useRef<HTMLDivElement>(null);\n  const [headerHeight, setHeaderHeight] = useState(0);\n  const [isEditMembersModalOpen, setIsEditMembersModalOpen] = useState(false);\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const [canEditProject, setCanEditProject] = useState(false);\n  const [canEditBoard, setCanEditBoard] = useState(false);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    if (!headerRef.current) return;\n\n    const observer = new ResizeObserver((entries) => {\n      for (let entry of entries) {\n        setHeaderHeight(entry.contentRect.height);\n      }\n    });\n\n    observer.observe(headerRef.current);\n\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    if (projectId) {\n      dispatch(fetchProjectById(projectId));\n    }\n  }, [dispatch, projectId]);\n\n  useEffect(() => {\n    const owners =\n      project?.members\n        ?.filter((member) => member.role === \"owner\")\n        .map((member) => member.user._id) || [];\n\n    const editors =\n      project?.members\n        ?.filter((member) => member.role === \"editor\")\n        .map((member) => member.user._id) || [];\n\n    const isCurrentUserOwner = owners.includes(currentUser._id);\n\n    const isCurrentUserEditor = editors.includes(currentUser._id);\n\n    setCanEditProject(isCurrentUserOwner);\n    setCanEditBoard(isCurrentUserOwner || isCurrentUserEditor);\n  }, [currentUser, project]);\n\n  const handleDelete = async () => {\n    if (!projectId || !project) return;\n\n    try {\n      await dispatch(deleteProject(project._id));\n      toast.success(t(\"Forms.deleteProject.success\") as string);\n      toggleSettingsModal();\n      navigate(\"/\", { replace: true });\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.deleteProject.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const toggleMembersModal = () => {\n    setIsEditMembersModalOpen((prev) => !prev);\n  };\n\n  const toggleSettingsModal = () => {\n    setIsSettingsModalOpen((prev) => !prev);\n  };\n\n  const tasksByColumn: Record<string, typeof tasks> = tasks.reduce(\n    (acc, task) => {\n      if (!acc[task.column]) {\n        acc[task.column] = [];\n      }\n      acc[task.column].push(task);\n      return acc;\n    },\n    {} as Record<string, typeof tasks>\n  );\n\n  return (\n    <PageWrapper>\n      <div ref={headerRef}>\n        <Header\n          name={project?.name || \"\"}\n          avatar={currentUser.avatar}\n          toggleMembersModal={toggleMembersModal}\n          toggleSettingsModal={toggleSettingsModal}\n        />\n      </div>\n\n      {isLoading ? (\n        <LoadContainer>\n          <Loader size=\"60px\" color=\"#3e85f3\" />\n        </LoadContainer>\n      ) : (\n        <BoardContainer>\n          <ProjectColumns\n            columns={columns.map((c) => ({\n              ...c,\n              tasks: tasksByColumn[c._id] || [],\n            }))}\n            topOffset={headerHeight}\n            withActions={canEditBoard}\n          />\n        </BoardContainer>\n      )}\n\n      {isEditMembersModalOpen && (\n        <EditProjectMembersModal\n          handlerCloseModal={() => toggleMembersModal()}\n          projectId={projectId || \"\"}\n          withActions={canEditProject}\n        />\n      )}\n\n      {isSettingsModalOpen && (\n        <EditProjecModal\n          handlerCloseModal={() => toggleSettingsModal()}\n          deleteAction={() => handleDelete()}\n          withActions={canEditProject}\n        />\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default ProjectBoardPage;\n"],"names":["selectProjects","state","projects","items","selectCurrentProject","current","selectProjectsLoading","loading","selectColumns","columns","selectTasks","tasks","LoadContainer","styled","div","EditProjectMembersSchema","yup","shape","members","of","email","required","role","oneOf","min","_ref","handlerCloseModal","formName","projectId","withActions","dispatch","useAppDispatch","project","useAppSelector","t","useTranslation","_jsx","children","Loader","size","color","initialValues","map","m","user","companyMembersWithRoles","member","Formik","enableReinitialize","validationSchema","onSubmit","async","updateProjectMembers","id","values","unwrap","toast","success","error","Error","message","String","_ref2","setFieldValue","StyledForm","UserList","value","users","onChange","updated","editableRoles","availableRoles","Modal","ModalLayout","title","EditProjectMembersForm","EditProjectSchema","name","max","description","deadline","nullable","slice","updateProject","_id","payload","errors","touched","handleChange","handleBlur","_jsxs","InputContainer","Label","Input","placeholder","$hasError","disabled","ErrorText","Textarea","onBlur","type","deleteAction","EditProjectForm","HeaderWrapper","header","theme","background","borderColor","Title","h1","_ref3","primaryText","BackButton","Link","_ref4","_ref5","animation","_ref6","primary","Controls","ControlButton","button","_ref7","backgroundSecondary","_ref8","_ref9","_ref10","avatar","toggleMembersModal","toggleSettingsModal","isMobile","useMediaQuery","query","_Fragment","to","FaChevronLeft","LanguageSwitcher","ThemeToggle","onClick","HiUserGroup","FiSettings","UserAvatar","src","PageWrapper","BoardContainer","SearchInput","input","cardBackground","secondaryText","setQuery","useState","results","setResults","open","setOpen","position","setPosition","top","left","width","inputRef","useRef","dropdownRef","timeoutRef","useEffect","trim","clearTimeout","window","setTimeout","data","searchProjectMembers","rect","getBoundingClientRect","bottom","handleClickOutside","e","_inputRef$current","_dropdownRef$current","target","contains","document","addEventListener","removeEventListener","Wrapper","ref","onFocus","length","createPortal","Dropdown","$top","$left","$width","Option","find","u","handleSelect","body","updatedUsers","viewMode","Backdrop","ModalContainer","modalRoot","getElementById","onClose","handleKeyDown","useCallback","key","style","overflow","ReactDOM","currentTarget","GalleryWrapper","GalleryImage","img","NavButton","PrevButton","NextButton","images","startIndex","currentIndex","setCurrentIndex","showPrev","i","showNext","BasicModal","AiOutlineLeft","alt","AiOutlineRight","List","Thumb","RemoveButton","HiddenInput","FileInputZone","label","isDragActive","files","editable","fileInputRef","galleryIndex","setGalleryIndex","dragActive","setDragActive","handleFiles","fileList","newAttachments","Array","from","file","url","URL","createObjectURL","att","idx","stopPropagation","filter","_","handleRemove","FiX","accept","multiple","_fileInputRef$current","click","onDragEnter","preventDefault","onDragLeave","onDragOver","onDrop","dataTransfer","ImageGallery","f","EditTaskSchema","assignedTo","optional","priority","attachments","notRequired","CommentsSchema","text","Section","section","h3","CommentList","ul","CommentItem","li","Body","Header","InfoBlock","UserName","span","TimeStamp","ControlBlock","danger","Text","p","FormWrapper","Form","FormInputContainer","SubmitButton","FormSubmitButton","taskId","isInitializing","setIsInitializing","comments","comment","task","selectCommentsByTask","editId","setEditId","fetchCommentsByTask","catch","finally","handleUpdate","setSubmitting","updateComment","then","c","Date","createdAt","toLocaleString","toggleEdit","prev","FiEdit2","className","deleteComment","FiTrash2","isSubmitting","Boolean","autoFocus","FormError","handleCreate","resetForm","createComment","_task$deadline","column","priorityColors","low","medium","high","critical","formData","FormData","append","assignedToIds","JSON","stringify","existingUrls","a","forEach","updateTask","CustomSelect","options","val","getLabel","getKey","getColor","AssigneeList","newValue","AttachmentList","CommentsSection","EditTaskForm","priorityBackgroundMap","priorityTextMap","Card","shadow","TopRow","PriorityTag","$priority","BottomRow","DateText","isEditTaskModalOpen","setIsEditTaskModalOpen","toggleEditTaskModal","charAt","toUpperCase","MembersAvatarGroup","EditTaskModal","deleteTask","createTaskSchema","default","columnId","assignees","setAssignees","useTheme","priorityTextLow","priorityTextMedium","priorityTextHigh","priorityTextCritical","createTask","CreateTaskForm","isEmpty","Placeholder","AddButton","TitleInput","InlineControls","_ref11","_ref12","_ref13","hoverColor","Tasks","priorityMap","isEditable","onClickEmpty","isEditing","setIsEditing","setTitle","isCreateTaskModalOpen","setIsCreateTaskModalOpen","sortedTasks","useMemo","sort","b","_priorityMap$a$priori","_priorityMap$b$priori","pa","FiPlus","toggleCreateTaskModal","handleSave","updateColumn","FiCheck","primaryHover","handleDelete","deleteColumn","FiEdit3","Droppable","droppableId","provided","innerRef","droppableProps","index","Draggable","draggableId","draggableProps","dragHandleProps","TaskCard","CreateTaskModal","EditOrderButton","topOffset","invertedText","ColumnsRow","_useAppSelector","onEditOrder","isEditMode","setIsEditMode","getSortedColumns","order","TbEdit","DragDropContext","onDragEnd","source","destination","result","sourceColumn","col","movedTask","err","reordered","moved","splice","updatedColumns","reorderColumns","direction","ColumnCard","handleAddColumn","newColumn","createColumn","ProjectBoardPage","useParams","navigate","useNavigate","currentUser","selectUser","isLoading","headerRef","headerHeight","setHeaderHeight","isEditMembersModalOpen","setIsEditMembersModalOpen","isSettingsModalOpen","setIsSettingsModalOpen","canEditProject","setCanEditProject","canEditBoard","setCanEditBoard","observer","ResizeObserver","entries","entry","contentRect","height","observe","disconnect","fetchProjectById","_project$members","_project$members2","owners","editors","isCurrentUserOwner","includes","isCurrentUserEditor","tasksByColumn","reduce","acc","push","ProjectColumns","EditProjectMembersModal","EditProjecModal","deleteProject","replace"],"sourceRoot":""}