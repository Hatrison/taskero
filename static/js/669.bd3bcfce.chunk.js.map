{"version":3,"file":"static/js/669.bd3bcfce.chunk.js","mappings":"0IAEO,MAAMA,EAAUC,EAAAA,GAAOC,GAAG;;;;EAMpBC,EAAaF,EAAAA,GAAOC,GAAsB;;UAE7CE,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAa,GAARC,CAAU;aACtBC,IAAA,IAAC,MAAED,GAAOC,EAAA,OAAK,GAAKD,CAAK;EAGzBE,EAAcN,EAAAA,GAAOC,GAAqB;WAC5CM,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAAKC,CAAI;YACjBC,IAAA,IAAC,KAAED,GAAMC,EAAA,OAAKD,CAAI;;sBAERE,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAMC,uBAAuB;sBAC5CC,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAAKF,EAAMG,WAAW;;;;;WAK3CC,IAAA,IAAC,MAAEJ,GAAOI,EAAA,OAAKJ,EAAMK,WAAW;;eCV3C,MA2BA,EA3B2Bb,IAAoD,IAAnD,QAAEc,EAAO,WAAEC,EAAa,EAAC,KAAEV,EAAO,IAAWL,EACvE,MAAMgB,EAAiBF,EAAQG,MAAM,EAAGF,GAClCG,EAAYJ,EAAQK,OAASJ,EAEnC,OACEK,EAAAA,EAAAA,MAACxB,EAAO,CAAAyB,SAAA,CACLL,EAAeM,KAAI,CAACC,EAAMtB,KAAK,IAAAuB,EAAA,OAC9BC,EAAAA,EAAAA,KAAC1B,EAAU,CAAgBE,MAAOA,EAAMoB,UACtCI,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTC,IACa,QAAXH,EAAAD,EAAKK,cAAM,IAAAJ,GAAXA,EAAaK,WAAW,QACpBN,EAAKK,OACL,SAASL,EAAKK,SAEpBvB,KAAMA,KAPOkB,EAAKO,IAST,IAEdZ,EAAY,IACXO,EAAAA,EAAAA,KAAC1B,EAAU,CAACE,MAAOc,EAAWM,UAC5BD,EAAAA,EAAAA,MAACjB,EAAW,CAACE,KAAMA,EAAKgB,SAAA,CAAC,IAAEH,SAGvB,C,wMCnCP,MAAMa,EAAelC,EAAAA,GAAOC,GAAG;uBACfE,IAAA,IAAC,MAAEQ,GAAOR,EAAA,OAAKQ,EAAMG,WAAW;;;;;sBAKjCT,IAAA,IAAC,MAAEM,GAAON,EAAA,OAAKM,EAAMwB,mBAAmB;;;;;EAOjDC,EAAapC,EAAAA,GAAOC,GAAG;WACzBM,IAAA,IAAC,MAAEI,GAAOJ,EAAA,OAAKI,EAAM0B,aAAa;EAGhCC,EAAetC,EAAAA,GAAOuC,MAAM;;sBAEnB9B,IAAA,IAAC,MAAEE,GAAOF,EAAA,OAAKE,EAAM6B,UAAU;WAC1C9B,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAM0B,aAAa;sBACvBxB,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAAKF,EAAMG,WAAW;;;;;iCAKrBC,IAAA,IAAC,MAAEJ,GAAOI,EAAA,OAAKJ,EAAM8B,SAAS;;;wBAGvCC,IAAA,IAAC,MAAE/B,GAAO+B,EAAA,OAAK/B,EAAMwB,mBAAmB;;EAInDQ,EAAe3C,EAAAA,GAAO4C,GAAG;;;;;;EAQzBC,EAAkB7C,EAAAA,GAAO8C,KAAK;;EAI9BC,EAAc/C,EAAAA,GAAOC,GAAG;;;;;;yBC1BrC,MAiEA,EAjEyBE,IAKX,IALY,KACxB6C,EAAI,gBACJC,EAAe,WACfC,EAAU,eACVC,EAAiB,MACXhD,EACN,MAAMQ,GAAQyC,EAAAA,EAAAA,MACRC,GAAeC,EAAAA,EAAAA,QAAyB,OACvCC,EAAOC,EAAMC,IAAWC,EAAAA,EAAAA,IAASV,IACjCW,EAASC,IAAcC,EAAAA,EAAAA,UAAwB,OAEtDC,EAAAA,EAAAA,YAAU,MACHP,EAAMQ,OAASZ,GAClBS,EAAWT,EACb,GACC,CAACA,EAAgBI,EAAMQ,QAE1B,MAAMC,EAAoBC,IACxBR,EAAQS,SAASD,GACjBL,EAAWO,IAAIC,gBAAgBH,GAAM,EAGvC,OACE1C,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAA7C,SAAA,EACEI,EAAAA,EAAAA,KAACM,EAAY,CACXoC,QAASA,KAAA,IAAAC,EAAA,OAA0B,QAA1BA,EAAMlB,EAAamB,eAAO,IAAAD,OAAA,EAApBA,EAAsBE,OAAO,EAC5CC,OAASC,IACPA,EAAEC,iBACF,MAAMX,EAAOU,EAAEE,aAAaC,MAAM,GAC9Bb,GACFD,EAAiBC,EACnB,EAEFc,WAAaJ,GAAMA,EAAEC,iBAAiBpD,SAErCmC,GACC/B,EAAAA,EAAAA,KAACe,EAAY,CAACb,IAAK6B,EAASqB,IAAI,aAEhCzD,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAA7C,SAAA,EACEI,EAAAA,EAAAA,KAACmB,EAAW,CAAAvB,UACVI,EAAAA,EAAAA,KAACqD,EAAAA,IAAa,CAACzE,KAAM,GAAI0E,MAAOvE,EAAM0B,mBAExCT,EAAAA,EAAAA,KAACQ,EAAU,CAAAZ,SAAEyB,KACbrB,EAAAA,EAAAA,KAACU,EAAY,CAAC6C,KAAK,SAAQ3D,SAAE0B,UAKnCtB,EAAAA,EAAAA,KAACiB,EAAe,CACduC,IAAK/B,EACL8B,KAAK,OACLE,OAAO,UACPC,SAAWX,IAAO,IAADY,EACf,MAAMtB,EAAqB,QAAjBsB,EAAGZ,EAAEa,OAAOV,aAAK,IAAAS,OAAA,EAAdA,EAAiB,GAC1BtB,GACFD,EAAiBC,EACnB,IAIHT,EAAKiC,SAAWjC,EAAKkC,QAAS9D,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAnE,SAAEgC,EAAKkC,UAC/C,EChFME,EAAgB5F,EAAAA,GAAOC,GAAG;;;;;eCAhC,MAAM4F,EAAoBC,EAAAA,GAAW,CAC1C9C,KAAM8C,EAAAA,KAAaC,SAAS,YAC5BC,KAAMF,EAAAA,KAAYG,aC8GpB,EAzFwB9F,IAAwD,IAAvD,kBAAE+F,EAAiB,SAAEC,EAAQ,UAAEC,GAAkBjG,EACxE,MAAMkG,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,MACPC,EAASC,IAAc7C,EAAAA,EAAAA,UAAyB,OAEvDC,EAAAA,EAAAA,YAAU,KACY6C,WAClB,IACE,MAAMC,QAAeP,GAASQ,EAAAA,EAAAA,IAAiBT,IAAYU,SAC3DJ,EAAWE,EACb,CAAE,MAAOlB,GACPqB,EAAAA,GAAMrB,MACJ,GAAGa,EAAE,sCACHb,aAAiBsB,MAAQtB,EAAMuB,QAAUC,OAAOxB,MAGpDQ,GACF,GAGFiB,EAAa,GACZ,CAACd,EAAUD,EAAWG,EAAGL,IAE5B,MAAMkB,EAAgB,CACpBpE,MAAa,OAAPyD,QAAO,IAAPA,OAAO,EAAPA,EAASzD,OAAQ,GACvBgD,KAAM,MAwBR,OAAQS,GAKN7E,EAAAA,EAAAA,KAACyF,EAAAA,GAAM,CACLC,oBAAkB,EAClBF,cAAeA,EACfG,iBAAkB1B,EAClB2B,SA9BiBb,UACnB,MAAMc,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQC,EAAO5E,MAE3B4E,EAAO5B,MACTyB,EAASE,OAAO,OAAQC,EAAO5B,MAGjC,UACQK,GAASwB,EAAAA,EAAAA,IAAc,CAAEC,GAAI1B,EAAWqB,cAAaX,SAC3DC,EAAAA,GAAMgB,QAAQxB,EAAE,8BAChBL,GACF,CAAE,MAAOR,GACPqB,EAAAA,GAAMrB,MACJ,GAAGa,EAAE,gCACHb,aAAiBsB,MAAQtB,EAAMuB,QAAUC,OAAOxB,KAGtD,GAYyBlE,SAEtBnB,IAAA,IAAC,OAAE2H,EAAM,QAAEvC,GAASpF,EAAA,OACnBkB,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAACH,GAAI3B,EAAS3E,SAAA,EACvBD,EAAAA,EAAAA,MAAC2G,EAAAA,GAAc,CAAA1G,SAAA,EACbI,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CAAA3G,SAAE+E,EAAE,6BACV3E,EAAAA,EAAAA,KAACwG,EAAAA,GAAK,CACJpF,KAAK,OACLqF,YAAa9B,EAAE,qCACf+B,UAAW7C,EAAQzC,QAAUgF,EAAOhF,OAErCyC,EAAQzC,MAAQgF,EAAOhF,OACtBpB,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAnE,SAAEwG,EAAOhF,WAIvBzB,EAAAA,EAAAA,MAAC2G,EAAAA,GAAc,CAAA1G,SAAA,EACbI,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CAAA3G,SAAE+E,EAAE,6BACV3E,EAAAA,EAAAA,KAAC2G,EAAgB,CACfvF,KAAK,OACLC,gBAAiBsD,EAAE,4BACnBrD,WAAYqD,EAAE,2BACdpD,eAAgBsD,EAAQT,YAGjB,KAjCjBpE,EAAAA,EAAAA,KAACgE,EAAa,CAAApE,UACZI,EAAAA,EAAAA,KAAC4G,EAAAA,EAAM,CAAChI,KAAK,OAAO0E,MAAM,aAmC7B,EC1EH,EA1ByB/E,IAIX,IAJY,kBACxB+F,EAAiB,aACjBuC,EAAY,UACZrC,GACMjG,EACN,MAAM,EAAEoG,IAAMC,EAAAA,EAAAA,KACRL,EAAW,oBAEjB,OACEvE,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CAACxC,kBAAmBA,EAAkB1E,UAC1CI,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVzC,kBAAmBA,EACnB0C,MAAOrC,EAAE,4BACTJ,SAAUA,EACVsC,aAAcA,EAAajH,UAE3BI,EAAAA,EAAAA,KAACiH,EAAe,CACd3C,kBAAmBA,EACnBC,SAAUA,EACVC,UAAWA,OAGT,E,cC/BL,MAAMR,EAAgB5F,EAAAA,GAAOC,GAAG;;;;;ECA1B6I,EAA2BhD,EAAAA,KAAaiD,MAAM,CACzD9H,QAAS6E,EAAAA,KAAYkD,GAAGlD,EAAAA,KAAamD,SAASC,IAAI,GAAGnD,aCyGvD,EAxF+B5F,IAKjB,IALkB,kBAC9B+F,EAAiB,SACjBC,EAAQ,UACRC,EAAS,YACT+C,GAAc,GACRhJ,EACN,MAAMkG,GAAWC,EAAAA,EAAAA,OACVG,EAASC,IAAc7C,EAAAA,EAAAA,UAAyB,OACjD,EAAE0C,IAAMC,EAAAA,EAAAA,KAoBd,IAlBA1C,EAAAA,EAAAA,YAAU,KACY6C,WAClB,IACE,MAAMC,QAAeP,GAASQ,EAAAA,EAAAA,IAAiBT,IAAYU,SAC3DJ,EAAWE,EACb,CAAE,MAAOlB,GACPqB,EAAAA,GAAMrB,MACJ,GAAGa,EAAE,6CACHb,aAAiBsB,MAAQtB,EAAMuB,QAAUC,OAAOxB,MAGpDQ,GACF,GAGFiB,EAAa,GACZ,CAACd,EAAUD,EAAWG,EAAGL,KAEvBO,EACH,OACE7E,EAAAA,EAAAA,KAACgE,EAAa,CAAApE,UACZI,EAAAA,EAAAA,KAAC4G,EAAAA,EAAM,CAAChI,KAAK,OAAO0E,MAAM,cAKhC,MAAMkC,EAAgB,CACpBnG,QAASwF,EAAQxF,QAAQQ,KAAK2H,GAAMA,EAAEH,SAoBlCI,EAA0B5C,EAAQxF,QAAQQ,KAAK6H,IAAM,IACtDA,EACHC,KACE9C,EAAQ+C,MAAMP,QAAUK,EAAOL,MAC1B,QACA,aAGT,OACErH,EAAAA,EAAAA,KAACyF,EAAAA,GAAM,CACLC,oBAAkB,EAClBF,cAAeA,EACfG,iBAAkBuB,EAClBtB,SA9BiBb,UACnB,UACQN,GACJoD,EAAAA,EAAAA,IAAc,CAAE3B,GAAIrB,EAAQxE,IAAKhB,QAAS2G,EAAO3G,WACjD6F,SAEFC,EAAAA,GAAMgB,QAAQxB,EAAE,qCAChBL,GACF,CAAE,MAAOR,GACPqB,EAAAA,GAAMrB,MACJ,GAAGa,EAAE,uCACHb,aAAiBsB,MAAQtB,EAAMuB,QAAUC,OAAOxB,KAGtD,GAgByBlE,SAEtBnB,IAAgC,IAA/B,OAAEuH,EAAM,cAAE8B,GAAerJ,EACzB,OACEuB,EAAAA,EAAAA,KAACqG,EAAAA,EAAU,CAACH,GAAI3B,EAAS3E,UACvBI,EAAAA,EAAAA,KAAC+H,EAAAA,EAAQ,CACP5F,MAAO6D,EAAO3G,QACd2I,MAAOP,EACP/D,SAAWuE,GAAYH,EAAc,UAAWG,GAChDV,YAAaA,KAEJ,GAGV,EClEb,EA3BgChJ,IAIlB,IAJmB,kBAC/B+F,EAAiB,UACjBE,EAAS,YACT+C,GAAc,GACRhJ,EACN,MAAM,EAAEoG,IAAMC,EAAAA,EAAAA,KACRL,EAAW,4BAEjB,OACEvE,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CAACxC,kBAAmBA,EAAkB1E,UAC1CI,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVzC,kBAAmBA,EACnB0C,MAAOrC,EAAE,mCACTJ,SAAUA,EACVgD,YAAaA,EAAY3H,UAEzBI,EAAAA,EAAAA,KAACkI,EAAsB,CACrB5D,kBAAmBA,EACnBC,SAAUA,EACVC,UAAWA,EACX+C,YAAaA,OAGX,EChCCY,EAAO/J,EAAAA,GAAOC,GAAG;;;;;;;sBAORE,IAAA,IAAC,MAAEQ,GAAOR,EAAA,OAAKQ,EAAMG,WAAW;;sBAEhCT,IAAA,IAAC,MAAEM,GAAON,EAAA,OAAKM,EAAM6B,UAAU;EAGxCwH,EAAahK,EAAAA,GAAOC,GAAG;;;;EAMvBgK,EAAcjK,EAAAA,GAAOC,GAAG;;;;EAMxBiK,EAAOlK,EAAAA,GAAO4C,GAAG;;;;;;EAQjBuH,EAAOnK,EAAAA,GAAOoK,EAAE;;;WAGlB7J,IAAA,IAAC,MAAEI,GAAOJ,EAAA,OAAKI,EAAMK,WAAW;EAG9BqJ,EAAYrK,EAAAA,GAAOsK,IAAuB;;;WAG5C7J,IAAA,IAAC,MAAEE,GAAOF,EAAA,OAAKE,EAAM4J,aAAa;sBACvB7J,IAAA,IAAC,MAAEwE,GAAOxE,EAAA,OAAKwE,CAAK;;;;EAM7BsF,EAAUxK,EAAAA,GAAOC,GAAG;;;;;;EAQpBwK,EAAazK,EAAAA,GAAOuC,MAAM;;;WAG5B1B,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAAKF,EAAM0B,aAAa;;;;;;sBAMvBtB,IAAA,IAAC,MAAEJ,GAAOI,EAAA,OAAKJ,EAAM8B,SAAS;;;aAGvCC,IAAA,IAAC,MAAE/B,GAAO+B,EAAA,OAAK/B,EAAM+J,OAAO;;gBC3CzC,MAoFA,EApFoBvK,IAAyB,IAADwK,EAAA,IAAvB,QAAElE,GAAgBtG,EACrC,MAAMkG,GAAWC,EAAAA,EAAAA,OACVsE,EAAiBC,IAAsBhH,EAAAA,EAAAA,WAAS,IAChDiH,EAAwBC,IAA6BlH,EAAAA,EAAAA,WAAS,GAC/DmH,GAAUC,EAAAA,EAAAA,IAAeC,EAAAA,KACzB,EAAE3E,IAAMC,EAAAA,EAAAA,KACR7F,GAAQyC,EAAAA,EAAAA,MAER+H,EAAkBA,KACtBN,GAAoBO,IAAUA,GAAK,EAG/BC,EAAqBA,KACzBN,GAA2BK,IAAUA,GAAK,EAiBtC7B,GAAc,OAAP9C,QAAO,IAAPA,GAAc,QAAPkE,EAAPlE,EAAS+C,aAAK,IAAAmB,OAAP,EAAPA,EAAgB1B,SAAU+B,EAAU,QAAU,SACrD/J,EAAUwF,EAAQxF,QAElBqK,EAAiD,CACrD9B,MAAO7I,EAAM4K,UACbjC,OAAQ3I,EAAM6K,YAGhB,OACEjK,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAA7C,SAAA,EACED,EAAAA,EAAAA,MAACwI,EAAI,CAAAvI,SAAA,EACHD,EAAAA,EAAAA,MAACyI,EAAU,CAAAxI,SAAA,EACTI,EAAAA,EAAAA,KAACsI,EAAI,CAACpI,IAAK2E,EAAQT,KAAMhB,IAAI,UAE7BpD,EAAAA,EAAAA,KAACuI,EAAI,CAAA3I,SAAEiF,EAAQzD,WAGjBzB,EAAAA,EAAAA,MAAC0I,EAAW,CAAAzI,SAAA,EACVI,EAAAA,EAAAA,KAACyI,EAAS,CAACnF,MAAOoG,EAAW/B,GAAM/H,SAChC+E,EAAE,gBAAgBgD,QAGrB3H,EAAAA,EAAAA,KAAC6J,EAAAA,EAAkB,CAACxK,QAAS,IAAIA,GAASyK,gBAG5CnK,EAAAA,EAAAA,MAACiJ,EAAO,CAAAhJ,SAAA,EACNI,EAAAA,EAAAA,KAAC6I,EAAU,CAACnG,QAAS+G,EAAmB7J,UACtCI,EAAAA,EAAAA,KAAC+J,EAAAA,IAAW,CAACnL,KAAM,OAEX,UAAT+I,IACC3H,EAAAA,EAAAA,KAAC6I,EAAU,CAACnG,QAAS6G,EAAgB3J,UACnCI,EAAAA,EAAAA,KAACgK,EAAAA,IAAc,CAACpL,KAAM,aAK7BoK,GAA4B,UAATrB,IAClB3H,EAAAA,EAAAA,KAACiK,EAAgB,CACf3F,kBAAmBA,IAAMiF,IACzB1C,aArDa9B,UACnB,UACQN,GAASyF,EAAAA,EAAAA,IAAcrF,EAAQxE,MACrC8E,EAAAA,GAAMgB,QAAQxB,EAAE,gCAChB4E,GACF,CAAE,MAAOzF,GACPqB,EAAAA,GAAMrB,MACJ,GAAGa,EAAE,kCACHb,aAAiBsB,MAAQtB,EAAMuB,QAAUC,OAAOxB,KAGtD,GA2CMU,UAAWK,EAAQxE,MAGtB6I,IACClJ,EAAAA,EAAAA,KAACmK,EAAuB,CACtB7F,kBAAmBA,IAAMmF,IACzBjF,UAAWK,EAAQxE,IACnBkH,YAAsB,UAATI,MAGhB,ECzGMyC,EAAsBlG,EAAAA,GAAW,CAC5C9C,KAAM8C,EAAAA,KAAaC,SAAS,YAC5BC,KAAMF,EAAAA,KAAYG,aCgBdmB,EAAgB,CACpBpE,KAAM,GACNgD,KAAM,MA8DR,EA3D0B7F,IAA6C,IAA5C,kBAAE+F,EAAiB,SAAEC,GAAiBhG,EAC/D,MAAMkG,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,KAuBd,OACE5E,EAAAA,EAAAA,KAACyF,EAAAA,GAAM,CACLD,cAAeA,EACfG,iBAAkByE,EAClBxE,SAzBiBb,UACnB,MAAMc,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQC,EAAO5E,MAE3B4E,EAAO5B,MACTyB,EAASE,OAAO,OAAQC,EAAO5B,MAGjC,UACQK,GAAS4F,EAAAA,EAAAA,IAAcxE,IAC7BV,EAAAA,GAAMgB,QAAQxB,EAAE,gCAChBL,GACF,CAAE,MAAOR,GACPqB,EAAAA,GAAMrB,MACJ,GAAGa,EAAE,kCACHb,aAAiBsB,MAAQtB,EAAMuB,QAAUC,OAAOxB,KAGtD,GAOyBlE,SAEtBnB,IAAA,IAAC,OAAE2H,EAAM,QAAEvC,GAASpF,EAAA,OACnBkB,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAACH,GAAI3B,EAAS3E,SAAA,EACvBD,EAAAA,EAAAA,MAAC2G,EAAAA,GAAc,CAAA1G,SAAA,EACbI,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CAAA3G,SAAE+E,EAAE,+BACV3E,EAAAA,EAAAA,KAACwG,EAAAA,GAAK,CACJpF,KAAK,OACLqF,YAAa9B,EAAE,uCACf+B,UAAW7C,EAAQzC,QAAUgF,EAAOhF,OAErCyC,EAAQzC,MAAQgF,EAAOhF,OACtBpB,EAAAA,EAAAA,KAAC+D,EAAAA,GAAS,CAAAnE,SAAEwG,EAAOhF,WAIvBzB,EAAAA,EAAAA,MAAC2G,EAAAA,GAAc,CAAA1G,SAAA,EACbI,EAAAA,EAAAA,KAACuG,EAAAA,GAAK,CAAA3G,SAAE+E,EAAE,+BACV3E,EAAAA,EAAAA,KAAC2G,EAAgB,CACfvF,KAAK,OACLC,gBAAiBsD,EAAE,4BACnBrD,WAAYqD,EAAE,kCAGP,GAER,ECnDb,EApB2BpG,IAAmC,IAAlC,kBAAE+F,GAA0B/F,EACtD,MAAM,EAAEoG,IAAMC,EAAAA,EAAAA,KACRL,EAAW,sBAEjB,OACEvE,EAAAA,EAAAA,KAAC8G,EAAAA,EAAK,CAACxC,kBAAmBA,EAAkB1E,UAC1CI,EAAAA,EAAAA,KAAC+G,EAAAA,EAAW,CACVzC,kBAAmBA,EACnB0C,MAAOrC,EAAE,8BACTJ,SAAUA,EAAS3E,UAEnBI,EAAAA,EAAAA,KAACsK,EAAiB,CAChBhG,kBAAmBA,EACnBC,SAAUA,OAGR,ECvBCgG,EAAcnM,EAAAA,GAAOC,GAAG;;;;;EAOxBmM,EAAkBpM,EAAAA,GAAOC,GAAG;;;;;;EAQ5B+J,EAAahK,EAAAA,GAAOC,GAAG;;;;EAMvBoM,GAAarM,EAAAA,GAAOC,GAAG;;;;;EAOvBqM,GAAQtM,EAAAA,GAAOuM,EAAE;;;WAGnBpM,IAAA,IAAC,MAAEQ,GAAOR,EAAA,OAAKQ,EAAMK,WAAW;EAG9BwL,GAAexM,EAAAA,GAAOuC,MAAM;sBACnBlC,IAAA,IAAC,MAAEM,GAAON,EAAA,OAAKM,EAAM8L,gBAAgB;WAChDlM,IAAA,IAAC,MAAEI,GAAOJ,EAAA,OAAKI,EAAMuC,UAAU;;;;;;;iCAOTzC,IAAA,IAAC,MAAEE,GAAOF,EAAA,OAAKE,EAAM8B,SAAS;;;wBAGvC/B,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKC,EAAM+L,qBAAqB;;EAIrDC,GAAS3M,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;EAenB2M,GAAc5M,EAAAA,GAAO8C,KAAK;;;sBAGjBjC,IAAA,IAAC,MAAEF,GAAOE,EAAA,OAAKF,EAAMG,WAAW;;sBAEhCC,IAAA,IAAC,MAAEJ,GAAOI,EAAA,OAAKJ,EAAM6B,UAAU;WAC1CE,IAAA,IAAC,MAAE/B,GAAO+B,EAAA,OAAK/B,EAAMK,WAAW;6BACd6L,IAAA,IAAC,MAAElM,GAAOkM,EAAA,OAAKlM,EAAM8B,SAAS;;;aAG9CqK,IAAA,IAAC,MAAEnM,GAAOmM,EAAA,OAAKnM,EAAM0B,aAAa;;;;oBAI3B0K,IAAA,IAAC,MAAEpM,GAAOoM,EAAA,OAAKpM,EAAM+J,OAAO;;;EAKnCsC,GAAgBhN,EAAAA,GAAOC,GAAG;;;;;;;;EAU1BgN,GAAOjN,EAAAA,GAAOC,GAAG;;;;;;;;;;;;ECO9B,GA/EoBiN,KAClB,MAAOC,EAAQC,IAAavJ,EAAAA,EAAAA,UAAS,KAC9BwJ,EAAMC,IAAWzJ,EAAAA,EAAAA,UAAS,SAC1B0J,EAAmBC,IAAwB3J,EAAAA,EAAAA,WAAS,GACrD4J,GAAUxC,EAAAA,EAAAA,IAAeyC,EAAAA,IACzBC,GAAY1C,EAAAA,EAAAA,IAAe2C,EAAAA,KAC3B,EAAErH,IAAMC,EAAAA,EAAAA,KAERqH,EAAoBA,KACxBL,GAAsBpC,IAAUA,GAAK,EAGjC0C,GAAoBC,EAAAA,EAAAA,UAAQ,IACzBJ,EACJK,QAAQvH,GACPA,EAAQzD,KAAKiL,cAAcC,SAASf,EAAOc,iBAE5CZ,MAAK,CAACc,EAAGC,IACK,SAATf,EACKc,EAAEnL,KAAKqL,cAAcD,EAAEpL,MAEnB,SAATqK,EAEA,IAAIiB,KAAKF,EAAEG,WAAWC,UAAY,IAAIF,KAAKH,EAAEI,WAAWC,UAGrD,KAEV,CAACb,EAAWR,EAAQE,IAEvB,OACEzL,EAAAA,EAAAA,KAACuK,EAAW,CAAA3K,SACTiM,GACC7L,EAAAA,EAAAA,KAACwK,EAAe,CAAA5K,UACdI,EAAAA,EAAAA,KAAC4G,EAAAA,EAAM,CAAChI,KAAK,OAAO0E,MAAM,eAG5B3D,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAA7C,SAAA,EACED,EAAAA,EAAAA,MAACyI,EAAU,CAAAxI,SAAA,EACTD,EAAAA,EAAAA,MAAC8K,GAAU,CAAA7K,SAAA,EACTI,EAAAA,EAAAA,KAAC0K,GAAK,CAAA9K,SAAE+E,EAAE,sBACV3E,EAAAA,EAAAA,KAAC4K,GAAY,CAAClI,QAASA,IAAMuJ,IAAoBrM,SAC9C+E,EAAE,0BAIPhF,EAAAA,EAAAA,MAACoL,GAAM,CAAAnL,SAAA,EACLI,EAAAA,EAAAA,KAACgL,GAAW,CACVzH,KAAK,OACLkD,YAAa9B,EAAE,+BACfxC,MAAOoJ,EACP7H,SAAWX,GAAMyI,EAAUzI,EAAEa,OAAOzB,UAEtCnC,EAAAA,EAAAA,KAACoL,GAAa,CAAAxL,UACZI,EAAAA,EAAAA,KAAC6M,EAAAA,EAAY,CACXC,QAAS,CAAC,OAAQ,QAClB3K,MAAOsJ,EACP/H,SAAUgI,EACVqB,SAAWC,GAAMrI,EAAE,qBAAqBqI,KACxCC,OAASD,GAAMA,aAMvBhN,EAAAA,EAAAA,KAACqL,GAAI,CAAAzL,SACFsM,EAAkBrM,KAAKgF,IACtB7E,EAAAA,EAAAA,KAACkN,EAAW,CAAmBrI,QAASA,GAAtBA,EAAQxE,SAG7BsL,IACC3L,EAAAA,EAAAA,KAACmN,EAAkB,CAAC7I,kBAAmB2H,QAIjC,C","sources":["components/MembersAvatarGroup/MembersAvatarGroup.styled.ts","components/MembersAvatarGroup/MembersAvatarGroup.tsx","components/ImageUploadField/ImageUploadField.styled.ts","components/ImageUploadField/ImageUploadField.tsx","components/Forms/EditCompanyForm/EditCompanyForm.styled.ts","components/Forms/EditCompanyForm/EditCompanySchema.ts","components/Forms/EditCompanyForm/EditCompanyForm.tsx","components/Modals/EditCompanyModal/EditCompanyModal.tsx","components/Forms/EditCompanyMembersForm/EditCompanyMembersForm.styled.ts","components/Forms/EditCompanyMembersForm/EditCompanyMembersSchema.ts","components/Forms/EditCompanyMembersForm/EditCompanyMembersForm.tsx","components/Modals/EditCompanyMembersModal/EditCompanyMembersModal.tsx","components/CompanyCard/CompanyCard.styled.ts","components/CompanyCard/CompanyCard.tsx","components/Forms/CreateCompanyForm/CreateCompanySchema.ts","components/Forms/CreateCompanyForm/CreateCompanyForm.tsx","components/Modals/CreateCompanyModal/CreateCompanyModal.tsx","pages/CompanyPage/CompanyPage.styled.ts","pages/CompanyPage/CompanyPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: relative;\n  height: 28px;\n  width: fit-content;\n`;\n\nexport const MemberItem = styled.div<{ index: number }>`\n  position: absolute;\n  left: ${({ index }) => index * 20}px;\n  z-index: ${({ index }) => 10 - index};\n`;\n\nexport const ExtraAvatar = styled.div<{ size: number }>`\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.membersAvatarBackground};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  color: ${({ theme }) => theme.primaryText};\n  font-weight: 500;\n`;\n","import UserAvatar from \"@/components/UserAvatar\";\nimport { ExtraAvatar, MemberItem, Wrapper } from \"./MembersAvatarGroup.styled\";\n\ntype User = {\n  _id: string;\n  avatar?: string;\n};\n\ntype Props = {\n  members: User[];\n  maxVisible?: number;\n  size?: number;\n};\n\nconst MembersAvatarGroup = ({ members, maxVisible = 4, size = 28 }: Props) => {\n  const visibleMembers = members.slice(0, maxVisible);\n  const remaining = members.length - maxVisible;\n\n  return (\n    <Wrapper>\n      {visibleMembers.map((user, index) => (\n        <MemberItem key={user._id} index={index}>\n          <UserAvatar\n            src={\n              user.avatar?.startsWith(\"http\")\n                ? user.avatar\n                : `https:${user.avatar}`\n            }\n            size={size}\n          />\n        </MemberItem>\n      ))}\n      {remaining > 0 && (\n        <MemberItem index={maxVisible}>\n          <ExtraAvatar size={size}>+{remaining}</ExtraAvatar>\n        </MemberItem>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default MembersAvatarGroup;\n","import styled from \"styled-components\";\n\nexport const FileDropZone = styled.div`\n  border: 2px dashed ${({ theme }) => theme.borderColor};\n  border-radius: 8px;\n  padding: 32px 24px;\n  text-align: center;\n  cursor: pointer;\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const UploadText = styled.div`\n  color: ${({ theme }) => theme.secondaryText};\n`;\n\nexport const UploadButton = styled.button`\n  padding: 8px 16px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.secondaryText};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: 400;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n  }\n`;\n\nexport const PreviewImage = styled.img`\n  width: 100px;\n  height: 100px;\n  object-fit: cover;\n  border-radius: 12px;\n  background-color: #ccc;\n`;\n\nexport const HiddenFileInput = styled.input`\n  display: none;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 64px;\n  height: 64px;\n`;\n","import { useRef, useState, useEffect } from \"react\";\nimport { useTheme } from \"styled-components\";\nimport { useField } from \"formik\";\nimport { FaRegBuilding } from \"react-icons/fa\";\nimport {\n  FileDropZone,\n  HiddenFileInput,\n  PreviewImage,\n  UploadText,\n  UploadButton,\n  IconWrapper,\n} from \"./ImageUploadField.styled\";\nimport { ErrorText } from \"@/styles/form/Form.styled\";\n\ninterface Props {\n  name: string;\n  placeholderText: string;\n  buttonText: string;\n  initialPreview?: string | null;\n}\n\nconst ImageUploadField = ({\n  name,\n  placeholderText,\n  buttonText,\n  initialPreview = null,\n}: Props) => {\n  const theme = useTheme();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [field, meta, helpers] = useField(name);\n  const [preview, setPreview] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!field.value && initialPreview) {\n      setPreview(initialPreview);\n    }\n  }, [initialPreview, field.value]);\n\n  const handleFileChange = (file: File) => {\n    helpers.setValue(file);\n    setPreview(URL.createObjectURL(file));\n  };\n\n  return (\n    <>\n      <FileDropZone\n        onClick={() => fileInputRef.current?.click()}\n        onDrop={(e) => {\n          e.preventDefault();\n          const file = e.dataTransfer.files[0];\n          if (file) {\n            handleFileChange(file);\n          }\n        }}\n        onDragOver={(e) => e.preventDefault()}\n      >\n        {preview ? (\n          <PreviewImage src={preview} alt=\"Preview\" />\n        ) : (\n          <>\n            <IconWrapper>\n              <FaRegBuilding size={48} color={theme.secondaryText} />\n            </IconWrapper>\n            <UploadText>{placeholderText}</UploadText>\n            <UploadButton type=\"button\">{buttonText}</UploadButton>\n          </>\n        )}\n      </FileDropZone>\n\n      <HiddenFileInput\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => {\n          const file = e.target.files?.[0];\n          if (file) {\n            handleFileChange(file);\n          }\n        }}\n      />\n\n      {meta.touched && meta.error && <ErrorText>{meta.error}</ErrorText>}\n    </>\n  );\n};\n\nexport default ImageUploadField;\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditCompanySchema = yup.object({\n  name: yup.string().required(\"Required\"),\n  logo: yup.mixed().nullable(),\n});\n","import { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { fetchCompanyById, updateCompany } from \"@/redux/companies/operations\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport Loader from \"@/components/Loader\";\nimport ImageUploadField from \"@/components/ImageUploadField\";\nimport {\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  ErrorText,\n} from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditCompanyForm.styled\";\nimport { EditCompanySchema } from \"./EditCompanySchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  companyId: string;\n};\n\nconst EditCompanyForm = ({ handlerCloseModal, formName, companyId }: Props) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n  const [company, setCompany] = useState<Company | null>(null);\n\n  useEffect(() => {\n    const loadCompany = async () => {\n      try {\n        const result = await dispatch(fetchCompanyById(companyId)).unwrap();\n        setCompany(result);\n      } catch (error) {\n        toast.error(\n          `${t(\"Forms.editCompany.failedToLoad\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n        handlerCloseModal();\n      }\n    };\n\n    loadCompany();\n  }, [dispatch, companyId, t, handlerCloseModal]);\n\n  const initialValues = {\n    name: company?.name || \"\",\n    logo: null as File | null,\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n\n    if (values.logo) {\n      formData.append(\"logo\", values.logo);\n    }\n\n    try {\n      await dispatch(updateCompany({ id: companyId, formData })).unwrap();\n      toast.success(t(\"Forms.editCompany.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return !company ? (\n    <LoadContainer>\n      <Loader size=\"60px\" color=\"#3e85f3\" />\n    </LoadContainer>\n  ) : (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditCompanySchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <StyledForm id={formName}>\n          <InputContainer>\n            <Label>{t(\"Forms.editCompany.name\")}</Label>\n            <Input\n              name=\"name\"\n              placeholder={t(\"Forms.editCompany.namePlaceholder\")}\n              $hasError={touched.name && !!errors.name}\n            />\n            {touched.name && errors.name && (\n              <ErrorText>{errors.name}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.editCompany.logo\")}</Label>\n            <ImageUploadField\n              name=\"logo\"\n              placeholderText={t(\"Forms.common.dragOrClick\")}\n              buttonText={t(\"Forms.common.chooseFile\")}\n              initialPreview={company.logo}\n            />\n          </InputContainer>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default EditCompanyForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditCompanyForm from \"@/components/Forms/EditCompanyForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  deleteAction: () => void;\n  companyId: string;\n};\n\nconst EditCompanyModal = ({\n  handlerCloseModal,\n  deleteAction,\n  companyId,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-company-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editCompany.title\")}\n        formName={formName}\n        deleteAction={deleteAction}\n      >\n        <EditCompanyForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          companyId={companyId}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditCompanyModal;\n","import styled from \"styled-components\";\n\nexport const LoadContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 295px;\n`;\n","import * as yup from \"yup\";\n\nexport const EditCompanyMembersSchema = yup.object().shape({\n  members: yup.array().of(yup.string().email()).min(1).required(),\n});\n","import { useEffect, useState } from \"react\";\nimport { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { fetchCompanyById, updateMembers } from \"@/redux/companies/operations\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport Loader from \"@/components/Loader\";\nimport UserList from \"@/components/UserList\";\nimport { StyledForm } from \"@/styles/form/Form.styled\";\nimport { LoadContainer } from \"./EditCompanyMembersForm.styled\";\nimport { EditCompanyMembersSchema } from \"./EditCompanyMembersSchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n  companyId: string;\n  withActions?: boolean;\n};\n\nconst EditCompanyMembersForm = ({\n  handlerCloseModal,\n  formName,\n  companyId,\n  withActions = true,\n}: Props) => {\n  const dispatch = useAppDispatch();\n  const [company, setCompany] = useState<Company | null>(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const loadCompany = async () => {\n      try {\n        const result = await dispatch(fetchCompanyById(companyId)).unwrap();\n        setCompany(result);\n      } catch (error) {\n        toast.error(\n          `${t(\"Forms.editCompanyMembers.failedToLoad\")}: ${\n            error instanceof Error ? error.message : String(error)\n          }`\n        );\n        handlerCloseModal();\n      }\n    };\n\n    loadCompany();\n  }, [dispatch, companyId, t, handlerCloseModal]);\n\n  if (!company) {\n    return (\n      <LoadContainer>\n        <Loader size=\"60px\" color=\"#3e85f3\" />\n      </LoadContainer>\n    );\n  }\n\n  const initialValues = {\n    members: company.members.map((m) => m.email),\n  };\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    try {\n      await dispatch(\n        updateMembers({ id: company._id, members: values.members })\n      ).unwrap();\n\n      toast.success(t(\"Forms.editCompanyMembers.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.editCompanyMembers.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const companyMembersWithRoles = company.members.map((member) => ({\n    ...member,\n    role:\n      company.owner.email === member.email\n        ? (\"owner\" as const)\n        : (\"member\" as const),\n  }));\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      validationSchema={EditCompanyMembersSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, setFieldValue }) => {\n        return (\n          <StyledForm id={formName}>\n            <UserList\n              value={values.members}\n              users={companyMembersWithRoles}\n              onChange={(updated) => setFieldValue(\"members\", updated)}\n              withActions={withActions}\n            />\n          </StyledForm>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default EditCompanyMembersForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport EditCompanyMembersForm from \"@/components/Forms/EditCompanyMembersForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  companyId: string;\n  withActions?: boolean;\n};\n\nconst EditCompanyMembersModal = ({\n  handlerCloseModal,\n  companyId,\n  withActions = true,\n}: Props) => {\n  const { t } = useTranslation();\n  const formName = \"edit-company-members-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.editCompanyMembers.title\")}\n        formName={formName}\n        withActions={withActions}\n      >\n        <EditCompanyMembersForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n          companyId={companyId}\n          withActions={withActions}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default EditCompanyMembersModal;\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 16px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.background};\n`;\n\nexport const UpperBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const BottomBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Logo = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 12px;\n  background-color: #ddd;\n`;\n\nexport const Name = styled.h3`\n  font-size: 18px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const RoleBadge = styled.span<{ color: string }>`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.roleTextColor};\n  background-color: ${({ color }) => color};\n  border-radius: 4px;\n  padding: 2px 8px;\n  align-self: start;\n`;\n\nexport const Actions = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  display: flex;\n  gap: 8px;\n`;\n\nexport const IconButton = styled.button`\n  background: none;\n  border: none;\n  color: ${({ theme }) => theme.secondaryText};\n  cursor: pointer;\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: color ${({ theme }) => theme.animation};\n\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n","import { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport { useAppDispatch, useAppSelector } from \"@/hooks\";\nimport { selectUserEmail } from \"@/redux/user/selectors\";\nimport { Company } from \"@/redux/companies/companies.types\";\nimport { deleteCompany } from \"@/redux/companies/operations\";\nimport MembersAvatarGroup from \"@/components/MembersAvatarGroup\";\nimport EditCompanyModal from \"@/components/Modals/EditCompanyModal\";\nimport EditCompanyMembersModal from \"@/components/Modals/EditCompanyMembersModal\";\nimport {\n  Card,\n  UpperBlock,\n  BottomBlock,\n  Logo,\n  Name,\n  RoleBadge,\n  Actions,\n  IconButton,\n} from \"./CompanyCard.styled\";\nimport { HiDotsVertical, HiUserGroup } from \"react-icons/hi\";\n\ninterface Props {\n  company: Company;\n}\n\nconst CompanyCard = ({ company }: Props) => {\n  const dispatch = useAppDispatch();\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isEditMembersModalOpen, setIsEditMembersModalOpen] = useState(false);\n  const myEmail = useAppSelector(selectUserEmail);\n  const { t } = useTranslation();\n  const theme = useTheme();\n\n  const toggleEditModal = () => {\n    setIsEditModalOpen((prev) => !prev);\n  };\n\n  const toggleMembersModal = () => {\n    setIsEditMembersModalOpen((prev) => !prev);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCompany(company._id));\n      toast.success(t(\"Forms.deleteCompany.success\") as string);\n      toggleEditModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.deleteCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  const role = company?.owner?.email === myEmail ? \"owner\" : \"member\";\n  const members = company.members;\n\n  const roleColors: Record<\"owner\" | \"member\", string> = {\n    owner: theme.roleOwner,\n    member: theme.roleMember,\n  };\n\n  return (\n    <>\n      <Card>\n        <UpperBlock>\n          <Logo src={company.logo} alt=\"Logo\" />\n\n          <Name>{company.name}</Name>\n        </UpperBlock>\n\n        <BottomBlock>\n          <RoleBadge color={roleColors[role]}>\n            {t(`Common.roles.${role}`)}\n          </RoleBadge>\n\n          <MembersAvatarGroup members={[...members].reverse()} />\n        </BottomBlock>\n\n        <Actions>\n          <IconButton onClick={toggleMembersModal}>\n            <HiUserGroup size={20} />\n          </IconButton>\n          {role === \"owner\" && (\n            <IconButton onClick={toggleEditModal}>\n              <HiDotsVertical size={20} />\n            </IconButton>\n          )}\n        </Actions>\n      </Card>\n      {isEditModalOpen && role === \"owner\" && (\n        <EditCompanyModal\n          handlerCloseModal={() => toggleEditModal()}\n          deleteAction={handleDelete}\n          companyId={company._id}\n        />\n      )}\n      {isEditMembersModalOpen && (\n        <EditCompanyMembersModal\n          handlerCloseModal={() => toggleMembersModal()}\n          companyId={company._id}\n          withActions={role === \"owner\"}\n        />\n      )}\n    </>\n  );\n};\n\nexport default CompanyCard;\n","import * as yup from \"yup\";\n\nexport const CreateCompanySchema = yup.object({\n  name: yup.string().required(\"Required\"),\n  logo: yup.mixed().nullable(),\n});\n","import { Formik } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppDispatch } from \"@/hooks\";\nimport { createCompany } from \"@/redux/companies/operations\";\nimport ImageUploadField from \"@/components/ImageUploadField\";\nimport {\n  StyledForm,\n  InputContainer,\n  Label,\n  Input,\n  ErrorText,\n} from \"@/styles/form/Form.styled\";\nimport { CreateCompanySchema } from \"./CreateCompanySchema\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n  formName: string;\n};\n\nconst initialValues = {\n  name: \"\",\n  logo: null as File | null,\n};\n\nconst CreateCompanyForm = ({ handlerCloseModal, formName }: Props) => {\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n\n  const handleSubmit = async (values: typeof initialValues) => {\n    const formData = new FormData();\n    formData.append(\"name\", values.name);\n\n    if (values.logo) {\n      formData.append(\"logo\", values.logo);\n    }\n\n    try {\n      await dispatch(createCompany(formData));\n      toast.success(t(\"Forms.createCompany.success\") as string);\n      handlerCloseModal();\n    } catch (error) {\n      toast.error(\n        `${t(\"Forms.createCompany.failed\")}: ${\n          error instanceof Error ? error.message : String(error)\n        }`\n      );\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={CreateCompanySchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched }) => (\n        <StyledForm id={formName}>\n          <InputContainer>\n            <Label>{t(\"Forms.createCompany.name\")}</Label>\n            <Input\n              name=\"name\"\n              placeholder={t(\"Forms.createCompany.namePlaceholder\")}\n              $hasError={touched.name && !!errors.name}\n            />\n            {touched.name && errors.name && (\n              <ErrorText>{errors.name}</ErrorText>\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <Label>{t(\"Forms.createCompany.logo\")}</Label>\n            <ImageUploadField\n              name=\"logo\"\n              placeholderText={t(\"Forms.common.dragOrClick\")}\n              buttonText={t(\"Forms.common.chooseFile\")}\n            />\n          </InputContainer>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateCompanyForm;\n","import { useTranslation } from \"react-i18next\";\nimport Modal from \"@/components/Modal/Modal\";\nimport ModalLayout from \"@/components/Modal/ModalLayout\";\nimport CreateCompanyForm from \"@/components/Forms/CreateCompanyForm\";\n\ntype Props = {\n  handlerCloseModal: () => void;\n};\n\nconst CreateCompanyModal = ({ handlerCloseModal }: Props) => {\n  const { t } = useTranslation();\n  const formName = \"create-company-form\";\n\n  return (\n    <Modal handlerCloseModal={handlerCloseModal}>\n      <ModalLayout\n        handlerCloseModal={handlerCloseModal}\n        title={t(\"Modals.createCompany.title\")}\n        formName={formName}\n      >\n        <CreateCompanyForm\n          handlerCloseModal={handlerCloseModal}\n          formName={formName}\n        />\n      </ModalLayout>\n    </Modal>\n  );\n};\n\nexport default CreateCompanyModal;\n","import styled from \"styled-components\";\n\nexport const PageWrapper = styled.div`\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  gap: 48px;\n`;\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const UpperBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const PageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.primaryText};\n`;\n\nexport const CreateButton = styled.button`\n  background-color: ${({ theme }) => theme.buttonBackground};\n  color: ${({ theme }) => theme.buttonText};\n  padding: 12px 24px;\n  border-radius: 4px;\n  border: none;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color ${({ theme }) => theme.animation};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttonBackgroundHover};\n  }\n`;\n\nexport const TopBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  > * {\n    min-height: 44px;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  flex: 1;\n  padding: 12px 16px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  border-radius: 4px;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.primaryText};\n  transition: border-color ${({ theme }) => theme.animation};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary};\n    outline: none;\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 200px;\n  }\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 16px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: 1280px) {\n    grid-template-columns: 1fr;\n  }\n`;\n","import { useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAppSelector } from \"@/hooks\";\nimport {\n  selectCompanies,\n  selectCompaniesLoading,\n} from \"@/redux/companies/selectors\";\nimport Loader from \"@/components/Loader\";\nimport CustomSelect from \"@/components/CustomSelect\";\nimport CompanyCard from \"@/components/CompanyCard\";\nimport CreateCompanyModal from \"@/components/Modals/CreateCompanyModal\";\nimport {\n  PageWrapper,\n  PageHeader,\n  Title,\n  TopBar,\n  SearchInput,\n  Grid,\n  CreateButton,\n  SelectWrapper,\n  UpperBlock,\n  LoaderContainer,\n} from \"./CompanyPage.styled\";\n\nconst CompanyPage = () => {\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(\"name\");\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const loading = useAppSelector(selectCompaniesLoading);\n  const companies = useAppSelector(selectCompanies);\n  const { t } = useTranslation();\n\n  const toggleCreateModal = () => {\n    setIsCreateModalOpen((prev) => !prev);\n  };\n\n  const filteredCompanies = useMemo(() => {\n    return companies\n      .filter((company) =>\n        company.name.toLowerCase().includes(search.toLowerCase())\n      )\n      .sort((a, b) => {\n        if (sort === \"name\") {\n          return a.name.localeCompare(b.name);\n        }\n        if (sort === \"date\") {\n          return (\n            new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\n          );\n        }\n        return 0;\n      });\n  }, [companies, search, sort]);\n\n  return (\n    <PageWrapper>\n      {loading ? (\n        <LoaderContainer>\n          <Loader size=\"48px\" color=\"#3e85f3\" />\n        </LoaderContainer>\n      ) : (\n        <>\n          <UpperBlock>\n            <PageHeader>\n              <Title>{t(\"Companies.title\")}</Title>\n              <CreateButton onClick={() => toggleCreateModal()}>\n                {t(\"Companies.create\")}\n              </CreateButton>\n            </PageHeader>\n\n            <TopBar>\n              <SearchInput\n                type=\"text\"\n                placeholder={t(\"Companies.searchPlaceholder\")}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <SelectWrapper>\n                <CustomSelect\n                  options={[\"name\", \"date\"]}\n                  value={sort}\n                  onChange={setSort}\n                  getLabel={(r) => t(`Companies.filters.${r}`)}\n                  getKey={(r) => r}\n                />\n              </SelectWrapper>\n            </TopBar>\n          </UpperBlock>\n\n          <Grid>\n            {filteredCompanies.map((company) => (\n              <CompanyCard key={company._id} company={company} />\n            ))}\n          </Grid>\n          {isCreateModalOpen && (\n            <CreateCompanyModal handlerCloseModal={toggleCreateModal} />\n          )}\n        </>\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default CompanyPage;\n"],"names":["Wrapper","styled","div","MemberItem","_ref","index","_ref2","ExtraAvatar","_ref3","size","_ref4","_ref5","theme","membersAvatarBackground","_ref6","borderColor","_ref7","primaryText","members","maxVisible","visibleMembers","slice","remaining","length","_jsxs","children","map","user","_user$avatar","_jsx","UserAvatar","src","avatar","startsWith","_id","FileDropZone","backgroundSecondary","UploadText","secondaryText","UploadButton","button","background","animation","_ref8","PreviewImage","img","HiddenFileInput","input","IconWrapper","name","placeholderText","buttonText","initialPreview","useTheme","fileInputRef","useRef","field","meta","helpers","useField","preview","setPreview","useState","useEffect","value","handleFileChange","file","setValue","URL","createObjectURL","_Fragment","onClick","_fileInputRef$current","current","click","onDrop","e","preventDefault","dataTransfer","files","onDragOver","alt","FaRegBuilding","color","type","ref","accept","onChange","_e$target$files","target","touched","error","ErrorText","LoadContainer","EditCompanySchema","yup","required","logo","nullable","handlerCloseModal","formName","companyId","dispatch","useAppDispatch","t","useTranslation","company","setCompany","async","result","fetchCompanyById","unwrap","toast","Error","message","String","loadCompany","initialValues","Formik","enableReinitialize","validationSchema","onSubmit","formData","FormData","append","values","updateCompany","id","success","errors","StyledForm","InputContainer","Label","Input","placeholder","$hasError","ImageUploadField","Loader","deleteAction","Modal","ModalLayout","title","EditCompanyForm","EditCompanyMembersSchema","shape","of","email","min","withActions","m","companyMembersWithRoles","member","role","owner","updateMembers","setFieldValue","UserList","users","updated","EditCompanyMembersForm","Card","UpperBlock","BottomBlock","Logo","Name","h3","RoleBadge","span","roleTextColor","Actions","IconButton","primary","_company$owner","isEditModalOpen","setIsEditModalOpen","isEditMembersModalOpen","setIsEditMembersModalOpen","myEmail","useAppSelector","selectUserEmail","toggleEditModal","prev","toggleMembersModal","roleColors","roleOwner","roleMember","MembersAvatarGroup","reverse","HiUserGroup","HiDotsVertical","EditCompanyModal","deleteCompany","EditCompanyMembersModal","CreateCompanySchema","createCompany","CreateCompanyForm","PageWrapper","LoaderContainer","PageHeader","Title","h2","CreateButton","buttonBackground","buttonBackgroundHover","TopBar","SearchInput","_ref9","_ref10","_ref11","SelectWrapper","Grid","CompanyPage","search","setSearch","sort","setSort","isCreateModalOpen","setIsCreateModalOpen","loading","selectCompaniesLoading","companies","selectCompanies","toggleCreateModal","filteredCompanies","useMemo","filter","toLowerCase","includes","a","b","localeCompare","Date","createdAt","getTime","CustomSelect","options","getLabel","r","getKey","CompanyCard","CreateCompanyModal"],"sourceRoot":""}